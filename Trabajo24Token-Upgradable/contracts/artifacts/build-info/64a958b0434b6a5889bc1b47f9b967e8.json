{
	"id": "64a958b0434b6a5889bc1b47f9b967e8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"Token/123.sol": {
				"content": "/*\r\n████████╗██████╗  █████╗ ██████╗  █████╗      ██╗ ██████╗ ██████╗ ██╗  ██╗    ████████╗ ██████╗ ██╗  ██╗███████╗███╗   ██╗\r\n╚══██╔══╝██╔══██╗██╔══██╗██╔══██╗██╔══██╗     ██║██╔═══██╗╚════██╗██║  ██║    ╚══██╔══╝██╔═══██╗██║ ██╔╝██╔════╝████╗  ██║\r\n   ██║   ██████╔╝███████║██████╔╝███████║     ██║██║   ██║ █████╔╝███████║       ██║   ██║   ██║█████╔╝ █████╗  ██╔██╗ ██║\r\n   ██║   ██╔══██╗██╔══██║██╔══██╗██╔══██║██   ██║██║   ██║██╔═══╝ ╚════██║       ██║   ██║   ██║██╔═██╗ ██╔══╝  ██║╚██╗██║\r\n   ██║   ██║  ██║██║  ██║██████╔╝██║  ██║╚█████╔╝╚██████╔╝███████╗     ██║       ██║   ╚██████╔╝██║  ██╗███████╗██║ ╚████║\r\n   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝ ╚═╝  ╚═╝ ╚════╝  ╚═════╝ ╚══════╝     ╚═╝       ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚══════╝╚═╝  ╚═══╝\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity 0.8.20;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport \"./IUniswapV2Pair.sol\";\r\nimport \"./IUniswapV2Router02.sol\";\r\nimport \"./IUniswapV2Factory.sol\";\r\n\r\ncontract Trabajo24Token is Initializable, ERC20Upgradeable, ERC20BurnableUpgradeable, OwnableUpgradeable {\r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor() {\r\n        _disableInitializers();\r\n    }\r\n\r\n    address public  marketingWallet;\r\n    address public  developmentWallet;\r\n    address public  sustainabilityWallet;\r\n    \r\n    uint256 public  marketingWalletTax; \r\n    uint256 public  developmentWalletTax;\r\n    uint256 public  sustainabilityWalletTax;\r\n    uint256 public  maxTransactionAmount;\r\n    uint256 private _totalSupply;\r\n\r\n    mapping(address => bool) private _blacklisted;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    IUniswapV2Router02 public uniswapV2Router;\r\n    address public uniswapPair;\r\n\r\n    event UpdatedMarketingWalletTax(uint256 _updatedMarketingWalletTax);\r\n    event UpdatedtDevelopmentWalletTax(uint256 _updatedtDevelopmentWalletTax);\r\n    event UpdatedtSustainabilityWalletTax(uint256 _updatedtSustainabilityWalletTax);\r\n    event UpdatedMaxAmount(uint256 _updatedMaxAmount);\r\n    event UpdatedMarketingWallet(address _updatedMarketingWallet);\r\n    event UpdatedDevelopmentWallet(address _updatedDevelopmentWallet);\r\n    event UpdatedSustainabilityWallet(address _updatedSustainabilityWallet);\r\n\r\n    // /**\r\n    // * @dev Initializes the contract with the specified parameters.\r\n    // * This function sets up the initial state of the contract, including wallet addresses, tax rates, and Uniswap integration.\r\n    // * @param _marketingWallet The address of the marketing wallet.\r\n    // * @param _developmentWallet The address of the development wallet.\r\n    // * @param _sustainabilityWallet The address of the sustainability wallet.\r\n    // * However, while Solidity ensures that a constructor is called only once in the lifetime of a contract,\r\n    //   a regular function can be called many times.\r\n    // * To prevent a contract from being initialized multiple times,\r\n    //   you need to add a check to ensure the initialize function is called only once\r\n    // */\r\n    function initialize() public initializer {\r\n        __Ownable_init(msg.sender);\r\n        __ERC20Burnable_init();\r\n        __ERC20_init(\"Trabajo24\",\"T24\");\r\n        marketingWallet= 0x07e43d33cE3eBe06a0BfaFfc04Aca37c4AcbD3A5;//_marketingWallet;\r\n        developmentWallet = 0x5ED81F9bC2402a2bbD78e381C9AA1edd99B90A55;//_developmentWallet;\r\n        sustainabilityWallet = 0xD436c10d791c7a9558950A251a049871811bB070;//_sustainabilityWallet;\r\n        _totalSupply = 100000000 * 10 ** decimals();\r\n        marketingWalletTax = 10;  // 0.1%\r\n        developmentWalletTax = 20;  // 0.2%\r\n        sustainabilityWalletTax =150; // 1.5%\r\n        // Set initial max transaction amount\r\n        maxTransactionAmount = 20000000 * 10 ** uint256(decimals());\r\n        // Mint initial supply\r\n        _mint(msg.sender,_totalSupply);\r\n\r\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(\r\n           0xD99D1c33F9fC3444f8101754aBC46c52416550D1 // BSC Testnet\r\n        ); \r\n\r\n        uniswapV2Router = _uniswapV2Router;\r\n        uniswapPair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(\r\n            address(this),\r\n            _uniswapV2Router.WETH()\r\n        );\r\n \r\n        _approve(msg.sender, address(uniswapV2Router), type(uint256).max);\r\n        _approve(address(this), address(uniswapV2Router), type(uint256).max);\r\n \r\n        emit Transfer(address(0), msg.sender, _totalSupply);\r\n    }\r\n\r\n    /**\r\n    * @dev Allows the owner to mint new tokens to a specified address.\r\n    * This function can be used to increase the total supply of tokens.\r\n    * @param to The address to which the new tokens will be minted.\r\n    * @param amount The amount of tokens to mint.\r\n    */\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n    \r\n    /**\r\n    * @dev Sets the marketing wallet tax percentage. This function allows the owner to update the tax percentage\r\n    * that will be applied to marketing transactions.\r\n    * @param _taxPercentage The new tax percentage to be set. It is expected to be in basis points (i.e., 100 basis points = 1%).\r\n    * The maximum allowed value is 10000 basis points (100%).\r\n    */\r\n    function setMarketingWalletTax(uint256 _taxPercentage) external onlyOwner {\r\n        require(_taxPercentage <= 10000,\"Tax percentage cannot exceed 100%\");\r\n        marketingWalletTax = _taxPercentage;\r\n        emit UpdatedMarketingWalletTax(marketingWalletTax);\r\n    }\r\n    \r\n    /**\r\n    * @dev Sets the development wallet tax percentage. This function allows the owner to update the tax percentage\r\n    * that will be applied to development transactions.\r\n    * @param _taxPercentage The new tax percentage to be set. It is expected to be in basis points (i.e., 100 basis points = 1%).\r\n    * The maximum allowed value is 10000 basis points (100%).\r\n    */\r\n    function setDevelopmentWalletTax(uint256 _taxPercentage) external onlyOwner {\r\n        require(_taxPercentage <= 10000,\"Tax percentage cannot exceed 100%\");\r\n        developmentWalletTax = _taxPercentage;\r\n        emit UpdatedtDevelopmentWalletTax(developmentWalletTax);\r\n    }\r\n\r\n    function setSustainabilityWalletTax(uint256 _taxPercentage) external onlyOwner {\r\n        require(_taxPercentage <= 10000,\"Tax percentage cannot exceed 100%\");\r\n        sustainabilityWalletTax = _taxPercentage;\r\n        emit UpdatedtSustainabilityWalletTax(sustainabilityWalletTax);\r\n    }\r\n    \r\n    /**\r\n    * @dev Sets the maximum transaction amount. This function allows the owner to update the maximum amount of tokens\r\n    * that can be transferred in a single transaction.\r\n    * @param _amount The new maximum transaction amount. Must be greater than 0.\r\n    */\r\n    function setMaxAmount(uint256 _amount) external onlyOwner {\r\n        require(_amount > 0,\"amount should be greate than 0\");\r\n        maxTransactionAmount = _amount;\r\n        emit UpdatedMaxAmount(maxTransactionAmount);\r\n    }\r\n    \r\n    /**\r\n    * @dev Sets the marketing wallet address. This function allows the owner to update the address where marketing-related \r\n    * funds or taxes will be sent.\r\n    * @param _wallet The new marketing wallet address. Must not be the zero address.\r\n    */\r\n    function setMarketingWallet(address _wallet) external onlyOwner {\r\n       require(_wallet != address(0),\"Marketing wallet cannot be zero address\");\r\n       marketingWallet = _wallet;\r\n       emit UpdatedMarketingWallet(marketingWallet);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the Development wallet address. This function allows the owner to update the address where Development-related\r\n     * funds or taxes will be sent.\r\n     * @param _wallet The new Development wallet address. Must not be the zero address.\r\n     */\r\n    function setDevelopmentWallet(address _wallet) external onlyOwner {\r\n        require(_wallet != address(0),\"Dev wallet cannot be zero address\");\r\n        developmentWallet = _wallet;\r\n        emit UpdatedDevelopmentWallet(developmentWallet);\r\n    }\r\n\r\n    /**\r\n    * @dev Sets the sustainability wallet address. This function allows the owner to update the address where sustainability-related\r\n    * funds or taxes will be sent.\r\n    * @param _wallet The new sustainability wallet address. Must not be the zero address.\r\n    */\r\n    function setSustainabilityWallet(address _wallet) external onlyOwner {\r\n       require(_wallet != address(0),\"stainability wallet cannot be zero address\");\r\n       sustainabilityWallet = _wallet;\r\n       emit UpdatedSustainabilityWallet(sustainabilityWallet);\r\n    }\r\n\r\n    /**\r\n     * @dev Adds an account to the blacklist. This function allows the owner to blacklist an address, preventing it from \r\n     * participating in transactions involving this token.\r\n     * @param account The address to be added to the blacklist. Must not be the owner's address.\r\n     */\r\n    function addToBlacklist(address account) external onlyOwner{\r\n        require(!_blacklisted[account], \"Account is already blacklisted\");\r\n        require(_msgSender() != account, \"Cannot blacklist self\");\r\n        _blacklisted[account] = true;\r\n    }\r\n\r\n    /**\r\n     * @dev Removes an account from the blacklist. This function allows the owner to remove an address from the blacklist,\r\n     * allowing it to participate in transactions involving this token again.\r\n     * @param account The address to be removed from the blacklist. Must be currently blacklisted.\r\n     */\r\n    function removeFromBlacklist(address account) external onlyOwner{\r\n        require(_blacklisted[account], \"Account is not blacklisted\");\r\n        require(_msgSender() != account, \"Cannot remove self from blacklist\");\r\n        _blacklisted[account] = false;\r\n    }\r\n\r\n    /**\r\n    * @dev Checks if an address is blacklisted.\r\n    * This function allows anyone to check if a particular address is currently blacklisted,\r\n    * meaning it is restricted from participating in transactions involving this token.\r\n    * @param account The address to check the blacklist status of.\r\n    * @return bool True if the account is blacklisted, false otherwise.\r\n    */\r\n    function isBlacklisted(address account) external view returns (bool) {\r\n        return _blacklisted[account];\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function for transferring tokens from one address to another.\r\n     * If the sender, recipient, or token contract itself is the owner, it performs a regular transfer.\r\n     * If the transfer involves buy or sell on Uniswap, a marketing tax is applied before transferring tokens.\r\n     * Emits Transfer events for both the marketing tax and the token transfer.\r\n     * @param sender The address of the sender.\r\n     * @param recipient The address of the recipient.\r\n     * @param amount The amount of tokens to transfer.\r\n     */\r\n    function _update(address sender, address recipient, uint256 amount) internal override{\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n\r\n        require(!_blacklisted[sender], \"Sender is blacklisted\");\r\n        require(!_blacklisted[recipient], \"Recipient is blacklisted\");\r\n \r\n        //If it's the owner, do a normal transfer\r\n        if (sender == owner() || recipient == owner() || sender == address(this)) {\r\n           super._update(sender, recipient, amount);\r\n            return;\r\n        }\r\n\r\n        bool isBuy = sender == uniswapPair;\r\n        bool isSell = recipient == uniswapPair;\r\n\r\n        uint256 marketingTax;\r\n        uint256 developmentTax;\r\n        uint256 sustainabilityTax;\r\n\r\n        if(isBuy || isSell){\r\n            require (amount <= maxTransactionAmount, \"Cannot buy & sell more than max limit\");\r\n            marketingTax = _calculateTax(amount,marketingWalletTax);\r\n            developmentTax = _calculateTax(amount,developmentWalletTax);\r\n            sustainabilityTax = _calculateTax(amount,sustainabilityWalletTax);\r\n\r\n            super._update(sender, marketingWallet, marketingTax);\r\n           super._update(sender, developmentWallet, developmentTax);\r\n           super._update(sender, sustainabilityWallet, sustainabilityTax);\r\n        }\r\n\r\n         amount -= (marketingTax + developmentTax + sustainabilityTax);\r\n         super._update(sender, recipient, amount);\r\n\r\n    }\r\n    \r\n    /**\r\n    * @dev Calculates the tax amount based on a given tax percentage.\r\n    * This internal function computes the tax to be applied on a specified amount based on a tax percentage.\r\n    * The tax percentage is assumed to be given in basis points (i.e., 100 basis points = 1%).\r\n    * @param amount The total amount on which tax is to be calculated.\r\n    * @param taxPercentage The tax percentage to be applied, given in basis points.\r\n    * @return uint256 The calculated tax amount.\r\n    */\r\n    function _calculateTax(uint256 amount, uint256 taxPercentage) internal pure returns (uint256) {\r\n        return amount * (taxPercentage) / (10000);\r\n    }\r\n}\r\n"
			},
			"Token/IUniswapV2Factory.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\n\ninterface IUniswapV2Factory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n}"
			},
			"Token/IUniswapV2Router02.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\nimport \"./IUniswapV2Router01.sol\";\n\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}"
			},
			"Token/IUniswapV2Pair.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\n\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20Upgradeable} from \"../ERC20Upgradeable.sol\";\nimport {ContextUpgradeable} from \"../../../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20BurnableUpgradeable is Initializable, ContextUpgradeable, ERC20Upgradeable {\n    function __ERC20Burnable_init() internal onlyInitializing {\n    }\n\n    function __ERC20Burnable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal   {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"Token/IUniswapV2Router01.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.20;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9fd4de76241f3c5b9b6394d99020848235c289e393f3cee1a7fbd53aff65b7d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ac5a3376a8d51eba34ec8d455125590c9022c8a96d73e3bd92e29db76ab4e5e\",\"dweb:/ipfs/QmcmcbM9UAXHajF2v1GE7hu1r5Q8xZAv4tHa7aALYKBtd9\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
				"ERC20BurnableUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":\"ERC20BurnableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9fd4de76241f3c5b9b6394d99020848235c289e393f3cee1a7fbd53aff65b7d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ac5a3376a8d51eba34ec8d455125590c9022c8a96d73e3bd92e29db76ab4e5e\",\"dweb:/ipfs/QmcmcbM9UAXHajF2v1GE7hu1r5Q8xZAv4tHa7aALYKBtd9\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xe74dd150d031e8ecf9755893a2aae02dec954158140424f11c28ff689a48492f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://554e0934aecff6725e10d4aeb2e70ff214384b68782b1ba9f9322a0d16105a2f\",\"dweb:/ipfs/QmVvmHc7xPftEkWvJRNAqv7mXihKLEAVXpiebG7RT5rhMW\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Token/123.sol": {
				"Trabajo24Token": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_updatedDevelopmentWallet",
									"type": "address"
								}
							],
							"name": "UpdatedDevelopmentWallet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_updatedMarketingWallet",
									"type": "address"
								}
							],
							"name": "UpdatedMarketingWallet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_updatedMarketingWalletTax",
									"type": "uint256"
								}
							],
							"name": "UpdatedMarketingWalletTax",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_updatedMaxAmount",
									"type": "uint256"
								}
							],
							"name": "UpdatedMaxAmount",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_updatedSustainabilityWallet",
									"type": "address"
								}
							],
							"name": "UpdatedSustainabilityWallet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_updatedtDevelopmentWalletTax",
									"type": "uint256"
								}
							],
							"name": "UpdatedtDevelopmentWalletTax",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_updatedtSustainabilityWalletTax",
									"type": "uint256"
								}
							],
							"name": "UpdatedtSustainabilityWalletTax",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addToBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "developmentWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "developmentWalletTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketingWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketingWalletTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxTransactionAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeFromBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_wallet",
									"type": "address"
								}
							],
							"name": "setDevelopmentWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_taxPercentage",
									"type": "uint256"
								}
							],
							"name": "setDevelopmentWalletTax",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_wallet",
									"type": "address"
								}
							],
							"name": "setMarketingWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_taxPercentage",
									"type": "uint256"
								}
							],
							"name": "setMarketingWalletTax",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "setMaxAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_wallet",
									"type": "address"
								}
							],
							"name": "setSustainabilityWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_taxPercentage",
									"type": "uint256"
								}
							],
							"name": "setSustainabilityWalletTax",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sustainabilityWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sustainabilityWalletTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV2Router",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"addToBlacklist(address)": {
								"details": "Adds an account to the blacklist. This function allows the owner to blacklist an address, preventing it from  participating in transactions involving this token.",
								"params": {
									"account": "The address to be added to the blacklist. Must not be the owner's address."
								}
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"isBlacklisted(address)": {
								"details": "Checks if an address is blacklisted. This function allows anyone to check if a particular address is currently blacklisted, meaning it is restricted from participating in transactions involving this token.",
								"params": {
									"account": "The address to check the blacklist status of."
								},
								"returns": {
									"_0": "bool True if the account is blacklisted, false otherwise."
								}
							},
							"mint(address,uint256)": {
								"details": "Allows the owner to mint new tokens to a specified address. This function can be used to increase the total supply of tokens.",
								"params": {
									"amount": "The amount of tokens to mint.",
									"to": "The address to which the new tokens will be minted."
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeFromBlacklist(address)": {
								"details": "Removes an account from the blacklist. This function allows the owner to remove an address from the blacklist, allowing it to participate in transactions involving this token again.",
								"params": {
									"account": "The address to be removed from the blacklist. Must be currently blacklisted."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setDevelopmentWallet(address)": {
								"details": "Sets the Development wallet address. This function allows the owner to update the address where Development-related funds or taxes will be sent.",
								"params": {
									"_wallet": "The new Development wallet address. Must not be the zero address."
								}
							},
							"setDevelopmentWalletTax(uint256)": {
								"details": "Sets the development wallet tax percentage. This function allows the owner to update the tax percentage that will be applied to development transactions.",
								"params": {
									"_taxPercentage": "The new tax percentage to be set. It is expected to be in basis points (i.e., 100 basis points = 1%). The maximum allowed value is 10000 basis points (100%)."
								}
							},
							"setMarketingWallet(address)": {
								"details": "Sets the marketing wallet address. This function allows the owner to update the address where marketing-related  funds or taxes will be sent.",
								"params": {
									"_wallet": "The new marketing wallet address. Must not be the zero address."
								}
							},
							"setMarketingWalletTax(uint256)": {
								"details": "Sets the marketing wallet tax percentage. This function allows the owner to update the tax percentage that will be applied to marketing transactions.",
								"params": {
									"_taxPercentage": "The new tax percentage to be set. It is expected to be in basis points (i.e., 100 basis points = 1%). The maximum allowed value is 10000 basis points (100%)."
								}
							},
							"setMaxAmount(uint256)": {
								"details": "Sets the maximum transaction amount. This function allows the owner to update the maximum amount of tokens that can be transferred in a single transaction.",
								"params": {
									"_amount": "The new maximum transaction amount. Must be greater than 0."
								}
							},
							"setSustainabilityWallet(address)": {
								"details": "Sets the sustainability wallet address. This function allows the owner to update the address where sustainability-related funds or taxes will be sent.",
								"params": {
									"_wallet": "The new sustainability wallet address. Must not be the zero address."
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Token/123.sol\":2426:14529  contract Trabajo24Token is Initializable, ERC20Upgradeable, ERC20BurnableUpgradeable, OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n    /* \"Token/123.sol\":2592:2647  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Token/123.sol\":2617:2639  _disableInitializers() */\n  tag_4\n    /* \"Token/123.sol\":2617:2637  _disableInitializers */\n  shl(0x20, tag_5)\n    /* \"Token/123.sol\":2617:2639  _disableInitializers() */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"Token/123.sol\":2426:14529  contract Trabajo24Token is Initializable, ERC20Upgradeable, ERC20BurnableUpgradeable, OwnableUpgradeable {... */\n  jump(tag_6)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7826:7856  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7885  _getInitializableStorage() */\n  tag_8\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7883  _getInitializableStorage */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7885  _getInitializableStorage() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7826:7885  InitializableStorage storage $ = _getInitializableStorage() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7901  $ */\n  dup1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7915  $._initializing */\n  0x00\n  add\n  0x08\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7938:7961  InvalidInitialization() */\n  mload(0x40)\n  0xf92ee8a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8003:8019  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  dup1\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7986  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7999  $._initialized */\n  0x00\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  0xffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8052:8068  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8036  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8049  $._initialized */\n  0x00\n  add\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8068  $._initialized = type(uint64).max */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8099:8115  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7760:8133  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\ntag_9:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:108   */\ntag_15:\n    /* \"#utility.yul\":43:50   */\n  0x00\n    /* \"#utility.yul\":83:101   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":76:81   */\n  dup3\n    /* \"#utility.yul\":72:102   */\n  and\n    /* \"#utility.yul\":61:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:108   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":114:229   */\ntag_16:\n    /* \"#utility.yul\":199:222   */\n  tag_20\n    /* \"#utility.yul\":216:221   */\n  dup2\n    /* \"#utility.yul\":199:222   */\n  tag_15\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":194:197   */\n  dup3\n    /* \"#utility.yul\":187:223   */\n  mstore\n    /* \"#utility.yul\":114:229   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":235:453   */\ntag_13:\n    /* \"#utility.yul\":326:330   */\n  0x00\n    /* \"#utility.yul\":364:366   */\n  0x20\n    /* \"#utility.yul\":353:362   */\n  dup3\n    /* \"#utility.yul\":349:367   */\n  add\n    /* \"#utility.yul\":341:367   */\n  swap1\n  pop\n    /* \"#utility.yul\":377:446   */\n  tag_22\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":432:441   */\n  dup4\n    /* \"#utility.yul\":428:445   */\n  add\n    /* \"#utility.yul\":419:425   */\n  dup5\n    /* \"#utility.yul\":377:446   */\n  tag_16\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":235:453   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Token/123.sol\":2426:14529  contract Trabajo24Token is Initializable, ERC20Upgradeable, ERC20BurnableUpgradeable, OwnableUpgradeable {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Token/123.sol\":2426:14529  contract Trabajo24Token is Initializable, ERC20Upgradeable, ERC20BurnableUpgradeable, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x75f0a874\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xbe20b15d\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xe7d88de5\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xfedcb861\n      eq\n      tag_37\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0xbe20b15d\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xc04a5414\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xc816841b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xc8c8ebe4\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x85fbae56\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x85fbae56\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x88696f2f\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x75f0a874\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8206cf5a\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x42966c68\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x5d098b38\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x5d098b38\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x6ddfa4b4\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x72ac2486\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x44337ea1\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4fe47f70\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x537df3b6\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x18160ddd\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x11e91b84\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1694505e\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3011:3155  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5505:5691  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token/123.sol\":2824:2860  uint256 public  developmentWalletTax */\n    tag_5:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token/123.sol\":3121:3162  IUniswapV2Router02 public uniswapV2Router */\n    tag_6:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4191:4343  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6251:6495  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4049:4131  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token/123.sol\":6191:6286  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_10:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":931:1018  function burn(uint256 value) public virtual {... */\n    tag_11:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"Token/123.sol\":10334:10584  function addToBlacklist(address account) external onlyOwner{... */\n    tag_12:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      stop\n        /* \"Token/123.sol\":8202:8427  function setMaxAmount(uint256 _amount) external onlyOwner {... */\n    tag_13:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      stop\n        /* \"Token/123.sol\":10913:11176  function removeFromBlacklist(address account) external onlyOwner{... */\n    tag_14:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"Token/123.sol\":8703:8946  function setMarketingWallet(address _wallet) external onlyOwner {... */\n    tag_15:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"Token/123.sol\":7627:7916  function setSustainabilityWalletTax(uint256 _taxPercentage) external onlyOwner {... */\n    tag_16:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4572  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      stop\n        /* \"Token/123.sol\":9227:9475  function setDevelopmentWallet(address _wallet) external onlyOwner {... */\n    tag_19:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      stop\n        /* \"Token/123.sol\":2655:2686  address public  marketingWallet */\n    tag_20:\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1334:1492  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_21:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      stop\n        /* \"Token/123.sol\":4498:5901  function initialize() public initializer {... */\n    tag_22:\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      stop\n        /* \"Token/123.sol\":2782:2816  uint256 public  marketingWalletTax */\n    tag_23:\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token/123.sol\":7342:7619  function setDevelopmentWalletTax(uint256 _taxPercentage) external onlyOwner {... */\n    tag_24:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n    tag_119:\n      stop\n        /* \"Token/123.sol\":6678:6946  function setMarketingWalletTax(uint256 _taxPercentage) external onlyOwner {... */\n    tag_25:\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n    tag_122:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_26:\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3268:3416  function symbol() public view virtual returns (string memory) {... */\n    tag_27:\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4767:4945  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_28:\n      tag_131\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token/123.sol\":9761:10027  function setSustainabilityWallet(address _wallet) external onlyOwner {... */\n    tag_29:\n      tag_135\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_136:\n      tag_137\n      jump\t// in\n    tag_135:\n      stop\n        /* \"Token/123.sol\":2693:2726  address public  developmentWallet */\n    tag_30:\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token/123.sol\":3169:3195  address public uniswapPair */\n    tag_31:\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token/123.sol\":2913:2949  uint256 public  maxTransactionAmount */\n    tag_32:\n      tag_144\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5003:5198  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_33:\n      tag_147\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      tag_150\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token/123.sol\":2867:2906  uint256 public  sustainabilityWalletTax */\n    tag_34:\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_35:\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n    tag_155:\n      stop\n        /* \"Token/123.sol\":11574:11690  function isBlacklisted(address account) external view returns (bool) {... */\n    tag_36:\n      tag_158\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      tag_161\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token/123.sol\":2733:2769  address public  sustainabilityWallet */\n    tag_37:\n      tag_162\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3011:3155  function name() public view virtual returns (string memory) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3056:3069  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3081:3103  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3106:3124  _getERC20Storage() */\n      tag_166\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3106:3122  _getERC20Storage */\n      tag_167\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3106:3124  _getERC20Storage() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3081:3124  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3141:3142  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3141:3148  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3134:3148  return $._name */\n      dup1\n      sload\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_170\n      swap1\n      tag_169\n      jump\t// in\n    tag_170:\n      dup1\n      iszero\n      tag_171\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_172\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_171)\n    tag_172:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_173:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_173\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3011:3155  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5505:5691  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5578:5582  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5594:5607  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5610:5622  _msgSender() */\n      tag_175\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5610:5620  _msgSender */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5610:5622  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5594:5622  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5632:5663  _approve(owner, spender, value) */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5641:5646  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5648:5655  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5657:5662  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5632:5640  _approve */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5632:5663  _approve(owner, spender, value) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5680:5684  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5673:5684  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5505:5691  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Token/123.sol\":2824:2860  uint256 public  developmentWalletTax */\n    tag_56:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"Token/123.sol\":3121:3162  IUniswapV2Router02 public uniswapV2Router */\n    tag_60:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4191:4343  function totalSupply() public view virtual returns (uint256) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4243:4250  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4262:4284  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4287:4305  _getERC20Storage() */\n      tag_180\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4287:4303  _getERC20Storage */\n      tag_167\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4287:4305  _getERC20Storage() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4262:4305  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4322:4323  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4322:4336  $._totalSupply */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4315:4336  return $._totalSupply */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4191:4343  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6251:6495  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6338:6342  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6354:6369  address spender */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6372:6384  _msgSender() */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6372:6382  _msgSender */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6372:6384  _msgSender() */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6354:6384  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6394:6431  _spendAllowance(from, spender, value) */\n      tag_183\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6410:6414  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6416:6423  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6425:6430  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6394:6409  _spendAllowance */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6394:6431  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6441:6467  _transfer(from, to, value) */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6451:6455  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6457:6459  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6461:6466  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6441:6450  _transfer */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6441:6467  _transfer(from, to, value) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6484:6488  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6477:6488  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6251:6495  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4049:4131  function decimals() public view virtual returns (uint8) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4098:4103  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4122:4124  18 */\n      0x12\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4115:4124  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4049:4131  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Token/123.sol\":6191:6286  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_190\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_189:\n        /* \"Token/123.sol\":6261:6278  _mint(to, amount) */\n      tag_192\n        /* \"Token/123.sol\":6267:6269  to */\n      dup3\n        /* \"Token/123.sol\":6271:6277  amount */\n      dup3\n        /* \"Token/123.sol\":6261:6266  _mint */\n      tag_193\n        /* \"Token/123.sol\":6261:6278  _mint(to, amount) */\n      jump\t// in\n    tag_192:\n        /* \"Token/123.sol\":6191:6286  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":931:1018  function burn(uint256 value) public virtual {... */\n    tag_81:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":985:1011  _burn(_msgSender(), value) */\n      tag_195\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":991:1003  _msgSender() */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":991:1001  _msgSender */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":991:1003  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1005:1010  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":985:990  _burn */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":985:1011  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":931:1018  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"Token/123.sol\":10334:10584  function addToBlacklist(address account) external onlyOwner{... */\n    tag_85:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_199\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_190\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_199:\n        /* \"Token/123.sol\":10413:10425  _blacklisted */\n      0x08\n        /* \"Token/123.sol\":10413:10434  _blacklisted[account] */\n      0x00\n        /* \"Token/123.sol\":10426:10433  account */\n      dup3\n        /* \"Token/123.sol\":10413:10434  _blacklisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Token/123.sol\":10412:10434  !_blacklisted[account] */\n      iszero\n        /* \"Token/123.sol\":10404:10469  require(!_blacklisted[account], \"Account is already blacklisted\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"Token/123.sol\":10504:10511  account */\n      dup1\n        /* \"Token/123.sol\":10488:10511  _msgSender() != account */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":10488:10500  _msgSender() */\n      tag_204\n        /* \"Token/123.sol\":10488:10498  _msgSender */\n      tag_176\n        /* \"Token/123.sol\":10488:10500  _msgSender() */\n      jump\t// in\n    tag_204:\n        /* \"Token/123.sol\":10488:10511  _msgSender() != account */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Token/123.sol\":10480:10537  require(_msgSender() != account, \"Cannot blacklist self\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_205:\n        /* \"Token/123.sol\":10572:10576  true */\n      0x01\n        /* \"Token/123.sol\":10548:10560  _blacklisted */\n      0x08\n        /* \"Token/123.sol\":10548:10569  _blacklisted[account] */\n      0x00\n        /* \"Token/123.sol\":10561:10568  account */\n      dup4\n        /* \"Token/123.sol\":10548:10569  _blacklisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Token/123.sol\":10548:10576  _blacklisted[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Token/123.sol\":10334:10584  function addToBlacklist(address account) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"Token/123.sol\":8202:8427  function setMaxAmount(uint256 _amount) external onlyOwner {... */\n    tag_88:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_209\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_190\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_209:\n        /* \"Token/123.sol\":8289:8290  0 */\n      0x00\n        /* \"Token/123.sol\":8279:8286  _amount */\n      dup2\n        /* \"Token/123.sol\":8279:8290  _amount > 0 */\n      gt\n        /* \"Token/123.sol\":8271:8324  require(_amount > 0,\"amount should be greate than 0\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"Token/123.sol\":8358:8365  _amount */\n      dup1\n        /* \"Token/123.sol\":8335:8355  maxTransactionAmount */\n      0x06\n        /* \"Token/123.sol\":8335:8365  maxTransactionAmount = _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Token/123.sol\":8381:8419  UpdatedMaxAmount(maxTransactionAmount) */\n      0x44d540c6079791f805bc9b5d5a643dbf1f545ec260212b2b2478ef9d9ed0768e\n        /* \"Token/123.sol\":8398:8418  maxTransactionAmount */\n      sload(0x06)\n        /* \"Token/123.sol\":8381:8419  UpdatedMaxAmount(maxTransactionAmount) */\n      mload(0x40)\n      tag_214\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Token/123.sol\":8202:8427  function setMaxAmount(uint256 _amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Token/123.sol\":10913:11176  function removeFromBlacklist(address account) external onlyOwner{... */\n    tag_91:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_190\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_216:\n        /* \"Token/123.sol\":10996:11008  _blacklisted */\n      0x08\n        /* \"Token/123.sol\":10996:11017  _blacklisted[account] */\n      0x00\n        /* \"Token/123.sol\":11009:11016  account */\n      dup3\n        /* \"Token/123.sol\":10996:11017  _blacklisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Token/123.sol\":10988:11048  require(_blacklisted[account], \"Account is not blacklisted\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"Token/123.sol\":11083:11090  account */\n      dup1\n        /* \"Token/123.sol\":11067:11090  _msgSender() != account */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":11067:11079  _msgSender() */\n      tag_221\n        /* \"Token/123.sol\":11067:11077  _msgSender */\n      tag_176\n        /* \"Token/123.sol\":11067:11079  _msgSender() */\n      jump\t// in\n    tag_221:\n        /* \"Token/123.sol\":11067:11090  _msgSender() != account */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Token/123.sol\":11059:11128  require(_msgSender() != account, \"Cannot remove self from blacklist\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_222:\n        /* \"Token/123.sol\":11163:11168  false */\n      0x00\n        /* \"Token/123.sol\":11139:11151  _blacklisted */\n      0x08\n        /* \"Token/123.sol\":11139:11160  _blacklisted[account] */\n      0x00\n        /* \"Token/123.sol\":11152:11159  account */\n      dup4\n        /* \"Token/123.sol\":11139:11160  _blacklisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Token/123.sol\":11139:11168  _blacklisted[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Token/123.sol\":10913:11176  function removeFromBlacklist(address account) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"Token/123.sol\":8703:8946  function setMarketingWallet(address _wallet) external onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_190\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_226:\n        /* \"Token/123.sol\":8804:8805  0 */\n      0x00\n        /* \"Token/123.sol\":8785:8806  _wallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":8785:8792  _wallet */\n      dup2\n        /* \"Token/123.sol\":8785:8806  _wallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Token/123.sol\":8777:8849  require(_wallet != address(0),\"Marketing wallet cannot be zero address\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_228:\n        /* \"Token/123.sol\":8877:8884  _wallet */\n      dup1\n        /* \"Token/123.sol\":8859:8874  marketingWallet */\n      0x00\n      dup1\n        /* \"Token/123.sol\":8859:8884  marketingWallet = _wallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Token/123.sol\":8899:8938  UpdatedMarketingWallet(marketingWallet) */\n      0x2026f0b479f097ea9d4c74dac26e5271ba4d59931603970da5458ea8aa3dcf37\n        /* \"Token/123.sol\":8922:8937  marketingWallet */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":8899:8938  UpdatedMarketingWallet(marketingWallet) */\n      mload(0x40)\n      tag_231\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Token/123.sol\":8703:8946  function setMarketingWallet(address _wallet) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Token/123.sol\":7627:7916  function setSustainabilityWalletTax(uint256 _taxPercentage) external onlyOwner {... */\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_190\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_233:\n        /* \"Token/123.sol\":7743:7748  10000 */\n      0x2710\n        /* \"Token/123.sol\":7725:7739  _taxPercentage */\n      dup2\n        /* \"Token/123.sol\":7725:7748  _taxPercentage <= 10000 */\n      gt\n      iszero\n        /* \"Token/123.sol\":7717:7785  require(_taxPercentage <= 10000,\"Tax percentage cannot exceed 100%\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"Token/123.sol\":7822:7836  _taxPercentage */\n      dup1\n        /* \"Token/123.sol\":7796:7819  sustainabilityWalletTax */\n      0x05\n        /* \"Token/123.sol\":7796:7836  sustainabilityWalletTax = _taxPercentage */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Token/123.sol\":7852:7908  UpdatedtSustainabilityWalletTax(sustainabilityWalletTax) */\n      0x28ad5f14a54b644d089d89d6140175fbbf7199a6fa1275e827904c157f491546\n        /* \"Token/123.sol\":7884:7907  sustainabilityWalletTax */\n      sload(0x05)\n        /* \"Token/123.sol\":7852:7908  UpdatedtSustainabilityWalletTax(sustainabilityWalletTax) */\n      mload(0x40)\n      tag_238\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Token/123.sol\":7627:7916  function setSustainabilityWalletTax(uint256 _taxPercentage) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4572  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4466:4473  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4485:4507  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4510:4528  _getERC20Storage() */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4510:4526  _getERC20Storage */\n      tag_167\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4510:4528  _getERC20Storage() */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4485:4528  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4545:4546  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4545:4556  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4545:4565  $._balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4557:4564  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4545:4565  $._balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4538:4565  return $._balances[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4572  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_190\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_244\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_245\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Token/123.sol\":9227:9475  function setDevelopmentWallet(address _wallet) external onlyOwner {... */\n    tag_106:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_247\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_190\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_247:\n        /* \"Token/123.sol\":9331:9332  0 */\n      0x00\n        /* \"Token/123.sol\":9312:9333  _wallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":9312:9319  _wallet */\n      dup2\n        /* \"Token/123.sol\":9312:9333  _wallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Token/123.sol\":9304:9370  require(_wallet != address(0),\"Dev wallet cannot be zero address\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_249:\n        /* \"Token/123.sol\":9401:9408  _wallet */\n      dup1\n        /* \"Token/123.sol\":9381:9398  developmentWallet */\n      0x01\n      0x00\n        /* \"Token/123.sol\":9381:9408  developmentWallet = _wallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Token/123.sol\":9424:9467  UpdatedDevelopmentWallet(developmentWallet) */\n      0x7404946ba3969d72cc11e8a0c21a8ab3b8dddeb41e78f235dfad9ffcda3f617c\n        /* \"Token/123.sol\":9449:9466  developmentWallet */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":9424:9467  UpdatedDevelopmentWallet(developmentWallet) */\n      mload(0x40)\n      tag_252\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Token/123.sol\":9227:9475  function setDevelopmentWallet(address _wallet) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Token/123.sol\":2655:2686  address public  marketingWallet */\n    tag_108:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1334:1492  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1409:1454  _spendAllowance(account, _msgSender(), value) */\n      tag_254\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1425:1432  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1434:1446  _msgSender() */\n      tag_255\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1434:1444  _msgSender */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1434:1446  _msgSender() */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1448:1453  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1409:1424  _spendAllowance */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1409:1454  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1464:1485  _burn(account, value) */\n      tag_256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1470:1477  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1479:1484  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1464:1469  _burn */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1464:1485  _burn(account, value) */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1334:1492  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Token/123.sol\":4498:5901  function initialize() public initializer {... */\n    tag_115:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_259\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_260\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_260:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_261\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_261:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_262\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_262:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_264:\n        /* \"Token/123.sol\":4550:4576  __Ownable_init(msg.sender) */\n      tag_266\n        /* \"Token/123.sol\":4565:4575  msg.sender */\n      caller\n        /* \"Token/123.sol\":4550:4564  __Ownable_init */\n      tag_267\n        /* \"Token/123.sol\":4550:4576  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_266:\n        /* \"Token/123.sol\":4587:4609  __ERC20Burnable_init() */\n      tag_268\n        /* \"Token/123.sol\":4587:4607  __ERC20Burnable_init */\n      tag_269\n        /* \"Token/123.sol\":4587:4609  __ERC20Burnable_init() */\n      jump\t// in\n    tag_268:\n        /* \"Token/123.sol\":4620:4651  __ERC20_init(\"Trabajo24\",\"T24\") */\n      tag_270\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      0x54726162616a6f32340000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x5432340000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"Token/123.sol\":4620:4632  __ERC20_init */\n      tag_271\n        /* \"Token/123.sol\":4620:4651  __ERC20_init(\"Trabajo24\",\"T24\") */\n      jump\t// in\n    tag_270:\n        /* \"Token/123.sol\":4679:4721  0x07e43d33cE3eBe06a0BfaFfc04Aca37c4AcbD3A5 */\n      0x07e43d33ce3ebe06a0bfaffc04aca37c4acbd3a5\n        /* \"Token/123.sol\":4662:4677  marketingWallet */\n      0x00\n      dup1\n        /* \"Token/123.sol\":4662:4721  marketingWallet= 0x07e43d33cE3eBe06a0BfaFfc04Aca37c4AcbD3A5 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Token/123.sol\":4771:4813  0x5ED81F9bC2402a2bbD78e381C9AA1edd99B90A55 */\n      0x5ed81f9bc2402a2bbd78e381c9aa1edd99b90a55\n        /* \"Token/123.sol\":4751:4768  developmentWallet */\n      0x01\n      0x00\n        /* \"Token/123.sol\":4751:4813  developmentWallet = 0x5ED81F9bC2402a2bbD78e381C9AA1edd99B90A55 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Token/123.sol\":4868:4910  0xD436c10d791c7a9558950A251a049871811bB070 */\n      0xd436c10d791c7a9558950a251a049871811bb070\n        /* \"Token/123.sol\":4845:4865  sustainabilityWallet */\n      0x02\n      0x00\n        /* \"Token/123.sol\":4845:4910  sustainabilityWallet = 0xD436c10d791c7a9558950A251a049871811bB070 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Token/123.sol\":4978:4988  decimals() */\n      tag_272\n        /* \"Token/123.sol\":4978:4986  decimals */\n      tag_72\n        /* \"Token/123.sol\":4978:4988  decimals() */\n      jump\t// in\n    tag_272:\n        /* \"Token/123.sol\":4972:4974  10 */\n      0x0a\n        /* \"Token/123.sol\":4972:4988  10 ** decimals() */\n      tag_273\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_273:\n        /* \"Token/123.sol\":4960:4969  100000000 */\n      0x05f5e100\n        /* \"Token/123.sol\":4960:4988  100000000 * 10 ** decimals() */\n      tag_275\n      swap2\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"Token/123.sol\":4945:4957  _totalSupply */\n      0x07\n        /* \"Token/123.sol\":4945:4988  _totalSupply = 100000000 * 10 ** decimals() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Token/123.sol\":5020:5022  10 */\n      0x0a\n        /* \"Token/123.sol\":4999:5017  marketingWalletTax */\n      0x03\n        /* \"Token/123.sol\":4999:5022  marketingWalletTax = 10 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Token/123.sol\":5065:5067  20 */\n      0x14\n        /* \"Token/123.sol\":5042:5062  developmentWalletTax */\n      0x04\n        /* \"Token/123.sol\":5042:5067  developmentWalletTax = 20 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Token/123.sol\":5112:5115  150 */\n      0x96\n        /* \"Token/123.sol\":5087:5110  sustainabilityWalletTax */\n      0x05\n        /* \"Token/123.sol\":5087:5115  sustainabilityWalletTax =150 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Token/123.sol\":5229:5239  decimals() */\n      tag_277\n        /* \"Token/123.sol\":5229:5237  decimals */\n      tag_72\n        /* \"Token/123.sol\":5229:5239  decimals() */\n      jump\t// in\n    tag_277:\n        /* \"Token/123.sol\":5221:5240  uint256(decimals()) */\n      0xff\n      and\n        /* \"Token/123.sol\":5215:5217  10 */\n      0x0a\n        /* \"Token/123.sol\":5215:5240  10 ** uint256(decimals()) */\n      tag_278\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n        /* \"Token/123.sol\":5204:5212  20000000 */\n      0x01312d00\n        /* \"Token/123.sol\":5204:5240  20000000 * 10 ** uint256(decimals()) */\n      tag_280\n      swap2\n      swap1\n      tag_276\n      jump\t// in\n    tag_280:\n        /* \"Token/123.sol\":5181:5201  maxTransactionAmount */\n      0x06\n        /* \"Token/123.sol\":5181:5240  maxTransactionAmount = 20000000 * 10 ** uint256(decimals()) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Token/123.sol\":5283:5313  _mint(msg.sender,_totalSupply) */\n      tag_281\n        /* \"Token/123.sol\":5289:5299  msg.sender */\n      caller\n        /* \"Token/123.sol\":5300:5312  _totalSupply */\n      sload(0x07)\n        /* \"Token/123.sol\":5283:5288  _mint */\n      tag_193\n        /* \"Token/123.sol\":5283:5313  _mint(msg.sender,_totalSupply) */\n      jump\t// in\n    tag_281:\n        /* \"Token/123.sol\":5326:5361  IUniswapV2Router02 _uniswapV2Router */\n      0x00\n        /* \"Token/123.sol\":5396:5438  0xD99D1c33F9fC3444f8101754aBC46c52416550D1 */\n      0xd99d1c33f9fc3444f8101754abc46c52416550d1\n        /* \"Token/123.sol\":5326:5464  IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(... */\n      swap1\n      pop\n        /* \"Token/123.sol\":5496:5512  _uniswapV2Router */\n      dup1\n        /* \"Token/123.sol\":5478:5493  uniswapV2Router */\n      0x0a\n      0x00\n        /* \"Token/123.sol\":5478:5512  uniswapV2Router = _uniswapV2Router */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Token/123.sol\":5555:5571  _uniswapV2Router */\n      dup1\n        /* \"Token/123.sol\":5555:5579  _uniswapV2Router.factory */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc45a0155\n        /* \"Token/123.sol\":5555:5581  _uniswapV2Router.factory() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_283\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_283:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_284\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n        /* \"Token/123.sol\":5537:5593  IUniswapV2Factory(_uniswapV2Router.factory()).createPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc9c65396\n        /* \"Token/123.sol\":5616:5620  this */\n      address\n        /* \"Token/123.sol\":5636:5652  _uniswapV2Router */\n      dup4\n        /* \"Token/123.sol\":5636:5657  _uniswapV2Router.WETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xad5c4648\n        /* \"Token/123.sol\":5636:5659  _uniswapV2Router.WETH() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_287\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_287:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_288\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_288:\n        /* \"Token/123.sol\":5537:5670  IUniswapV2Factory(_uniswapV2Router.factory()).createPair(... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap3\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_292\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_292:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_293\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_293:\n        /* \"Token/123.sol\":5523:5534  uniswapPair */\n      0x0b\n      0x00\n        /* \"Token/123.sol\":5523:5670  uniswapPair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(... */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Token/123.sol\":5684:5749  _approve(msg.sender, address(uniswapV2Router), type(uint256).max) */\n      tag_294\n        /* \"Token/123.sol\":5693:5703  msg.sender */\n      caller\n        /* \"Token/123.sol\":5713:5728  uniswapV2Router */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":5731:5748  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Token/123.sol\":5684:5692  _approve */\n      tag_178\n        /* \"Token/123.sol\":5684:5749  _approve(msg.sender, address(uniswapV2Router), type(uint256).max) */\n      jump\t// in\n    tag_294:\n        /* \"Token/123.sol\":5760:5828  _approve(address(this), address(uniswapV2Router), type(uint256).max) */\n      tag_295\n        /* \"Token/123.sol\":5777:5781  this */\n      address\n        /* \"Token/123.sol\":5792:5807  uniswapV2Router */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":5810:5827  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Token/123.sol\":5760:5768  _approve */\n      tag_178\n        /* \"Token/123.sol\":5760:5828  _approve(address(this), address(uniswapV2Router), type(uint256).max) */\n      jump\t// in\n    tag_295:\n        /* \"Token/123.sol\":5868:5878  msg.sender */\n      caller\n        /* \"Token/123.sol\":5847:5893  Transfer(address(0), msg.sender, _totalSupply) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":5864:5865  0 */\n      0x00\n        /* \"Token/123.sol\":5847:5893  Transfer(address(0), msg.sender, _totalSupply) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Token/123.sol\":5880:5892  _totalSupply */\n      sload(0x07)\n        /* \"Token/123.sol\":5847:5893  Transfer(address(0), msg.sender, _totalSupply) */\n      mload(0x40)\n      tag_296\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Token/123.sol\":4539:5901  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_298\n      swap2\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Token/123.sol\":4498:5901  function initialize() public initializer {... */\n      jump\t// out\n        /* \"Token/123.sol\":2782:2816  uint256 public  marketingWalletTax */\n    tag_117:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"Token/123.sol\":7342:7619  function setDevelopmentWalletTax(uint256 _taxPercentage) external onlyOwner {... */\n    tag_121:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_301\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_190\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_301:\n        /* \"Token/123.sol\":7455:7460  10000 */\n      0x2710\n        /* \"Token/123.sol\":7437:7451  _taxPercentage */\n      dup2\n        /* \"Token/123.sol\":7437:7460  _taxPercentage <= 10000 */\n      gt\n      iszero\n        /* \"Token/123.sol\":7429:7497  require(_taxPercentage <= 10000,\"Tax percentage cannot exceed 100%\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_304\n      swap1\n      tag_237\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_303:\n        /* \"Token/123.sol\":7531:7545  _taxPercentage */\n      dup1\n        /* \"Token/123.sol\":7508:7528  developmentWalletTax */\n      0x04\n        /* \"Token/123.sol\":7508:7545  developmentWalletTax = _taxPercentage */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Token/123.sol\":7561:7611  UpdatedtDevelopmentWalletTax(developmentWalletTax) */\n      0xd3f51aabcf3bcbd05f9260c8ccec9728da097c538dd797a90f527e255ae30838\n        /* \"Token/123.sol\":7590:7610  developmentWalletTax */\n      sload(0x04)\n        /* \"Token/123.sol\":7561:7611  UpdatedtDevelopmentWalletTax(developmentWalletTax) */\n      mload(0x40)\n      tag_305\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Token/123.sol\":7342:7619  function setDevelopmentWalletTax(uint256 _taxPercentage) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Token/123.sol\":6678:6946  function setMarketingWalletTax(uint256 _taxPercentage) external onlyOwner {... */\n    tag_124:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_307\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_190\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_307:\n        /* \"Token/123.sol\":6789:6794  10000 */\n      0x2710\n        /* \"Token/123.sol\":6771:6785  _taxPercentage */\n      dup2\n        /* \"Token/123.sol\":6771:6794  _taxPercentage <= 10000 */\n      gt\n      iszero\n        /* \"Token/123.sol\":6763:6831  require(_taxPercentage <= 10000,\"Tax percentage cannot exceed 100%\") */\n      tag_309\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap1\n      tag_237\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_309:\n        /* \"Token/123.sol\":6863:6877  _taxPercentage */\n      dup1\n        /* \"Token/123.sol\":6842:6860  marketingWalletTax */\n      0x03\n        /* \"Token/123.sol\":6842:6877  marketingWalletTax = _taxPercentage */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Token/123.sol\":6893:6938  UpdatedMarketingWalletTax(marketingWalletTax) */\n      0x153e5299255e24f1fd2ceee40599bfdc41290fd92340ff6173fc24efd6c299a6\n        /* \"Token/123.sol\":6919:6937  marketingWalletTax */\n      sload(0x03)\n        /* \"Token/123.sol\":6893:6938  UpdatedMarketingWalletTax(marketingWalletTax) */\n      mload(0x40)\n      tag_311\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Token/123.sol\":6678:6946  function setMarketingWalletTax(uint256 _taxPercentage) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_313\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_314\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3268:3416  function symbol() public view virtual returns (string memory) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3315:3328  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3340:3362  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3365:3383  _getERC20Storage() */\n      tag_316\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3365:3381  _getERC20Storage */\n      tag_167\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3365:3383  _getERC20Storage() */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3340:3383  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3400:3401  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3400:3409  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3393:3409  return $._symbol */\n      dup1\n      sload\n      tag_317\n      swap1\n      tag_169\n      jump\t// in\n    tag_317:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_318\n      swap1\n      tag_169\n      jump\t// in\n    tag_318:\n      dup1\n      iszero\n      tag_319\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_320\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_319)\n    tag_320:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_321:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_321\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_319:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3268:3416  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4767:4945  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4836:4840  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4852:4865  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4868:4880  _msgSender() */\n      tag_323\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4868:4878  _msgSender */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4868:4880  _msgSender() */\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4852:4880  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4890:4917  _transfer(owner, to, value) */\n      tag_324\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4900:4905  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4907:4909  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4911:4916  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4890:4899  _transfer */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4890:4917  _transfer(owner, to, value) */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4934:4938  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4927:4938  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4767:4945  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Token/123.sol\":9761:10027  function setSustainabilityWallet(address _wallet) external onlyOwner {... */\n    tag_137:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_326\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_190\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_326:\n        /* \"Token/123.sol\":9867:9868  0 */\n      0x00\n        /* \"Token/123.sol\":9848:9869  _wallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":9848:9855  _wallet */\n      dup2\n        /* \"Token/123.sol\":9848:9869  _wallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Token/123.sol\":9840:9915  require(_wallet != address(0),\"stainability wallet cannot be zero address\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap1\n      tag_330\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_328:\n        /* \"Token/123.sol\":9948:9955  _wallet */\n      dup1\n        /* \"Token/123.sol\":9925:9945  sustainabilityWallet */\n      0x02\n      0x00\n        /* \"Token/123.sol\":9925:9955  sustainabilityWallet = _wallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Token/123.sol\":9970:10019  UpdatedSustainabilityWallet(sustainabilityWallet) */\n      0x5d4a0c152f269a59530b6c3a84f5a90ac341c463c9e6d5d0d04cf75596776e4f\n        /* \"Token/123.sol\":9998:10018  sustainabilityWallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":9970:10019  UpdatedSustainabilityWallet(sustainabilityWallet) */\n      mload(0x40)\n      tag_331\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Token/123.sol\":9761:10027  function setSustainabilityWallet(address _wallet) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Token/123.sol\":2693:2726  address public  developmentWallet */\n    tag_139:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Token/123.sol\":3169:3195  address public uniswapPair */\n    tag_142:\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Token/123.sol\":2913:2949  uint256 public  maxTransactionAmount */\n    tag_145:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5003:5198  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5083:5090  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5102:5124  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5127:5145  _getERC20Storage() */\n      tag_333\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5127:5143  _getERC20Storage */\n      tag_167\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5127:5145  _getERC20Storage() */\n      jump\t// in\n    tag_333:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5102:5145  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5163  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5175  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5182  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5176:5181  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5182  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5191  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5183:5190  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5191  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5155:5191  return $._allowances[owner][spender] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5003:5198  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Token/123.sol\":2867:2906  uint256 public  sustainabilityWalletTax */\n    tag_153:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_157:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_335\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_190\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_337\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_338\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_338:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_337:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_339\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_245\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Token/123.sol\":11574:11690  function isBlacklisted(address account) external view returns (bool) {... */\n    tag_160:\n        /* \"Token/123.sol\":11637:11641  bool */\n      0x00\n        /* \"Token/123.sol\":11661:11673  _blacklisted */\n      0x08\n        /* \"Token/123.sol\":11661:11682  _blacklisted[account] */\n      0x00\n        /* \"Token/123.sol\":11674:11681  account */\n      dup4\n        /* \"Token/123.sol\":11661:11682  _blacklisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Token/123.sol\":11654:11682  return _blacklisted[account] */\n      swap1\n      pop\n        /* \"Token/123.sol\":11574:11690  function isBlacklisted(address account) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Token/123.sol\":2733:2769  address public  sustainabilityWallet */\n    tag_163:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2242:2395  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2292:2314  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2359:2379  ERC20StorageLocation */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2349:2379  $.slot := ERC20StorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2242:2395  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10266:10394  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_178:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10350:10387  _approve(owner, spender, value, true) */\n      tag_344\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10359:10364  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10366:10373  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10375:10380  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10382:10386  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10350:10358  _approve */\n      tag_345\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10350:10387  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10266:10394  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11995:12472  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_184:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12094:12118  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12121:12146  allowance(owner, spender) */\n      tag_347\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12131:12136  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12138:12145  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12121:12130  allowance */\n      tag_150\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12121:12146  allowance(owner, spender) */\n      jump\t// in\n    tag_347:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12094:12146  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12180:12197  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12160:12176  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12160:12197  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12156:12466  if (currentAllowance != type(uint256).max) {... */\n      tag_348\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12236:12241  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12217:12233  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12217:12241  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12213:12343  if (currentAllowance < value) {... */\n      iszero\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12295:12302  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12304:12320  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12322:12327  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12268:12328  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_350\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_351\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12213:12343  if (currentAllowance < value) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12384:12441  _approve(owner, spender, currentAllowance - value, false) */\n      tag_352\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12393:12398  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12400:12407  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12428:12433  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12409:12425  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12409:12433  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12435:12440  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12384:12392  _approve */\n      tag_345\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12384:12441  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_352:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12156:12466  if (currentAllowance != type(uint256).max) {... */\n    tag_348:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12084:12472  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11995:12472  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6868:7170  function _transfer(address from, address to, uint256 value) internal   {... */\n    tag_186:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6969:6970  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6953:6971  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6953:6957  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6953:6971  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6949:7035  if (from == address(0)) {... */\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7021:7022  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6994:7024  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_355:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6949:7035  if (from == address(0)) {... */\n    tag_354:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7062:7063  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7048:7064  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7048:7050  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7048:7064  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7044:7130  if (to == address(0)) {... */\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7116:7117  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7087:7119  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_357\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_357:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7044:7130  if (to == address(0)) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7139:7163  _update(from, to, value) */\n      tag_358\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7147:7151  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7153:7155  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7157:7162  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7139:7146  _update */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7139:7163  _update(from, to, value) */\n      jump\t// in\n    tag_358:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6868:7170  function _transfer(address from, address to, uint256 value) internal   {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_190:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_361\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_361:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_362\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_126\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_362:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_363\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_364\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_365\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_365:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_363:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8998:9206  function _mint(address account, uint256 value) internal {... */\n    tag_193:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9087:9088  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9068:9089  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9068:9075  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9068:9089  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9064:9155  if (account == address(0)) {... */\n      tag_367\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9141:9142  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9112:9144  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_368\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_368:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9064:9155  if (account == address(0)) {... */\n    tag_367:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9164:9199  _update(address(0), account, value) */\n      tag_369\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9180:9181  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9184:9191  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9193:9198  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9164:9171  _update */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9164:9199  _update(address(0), account, value) */\n      jump\t// in\n    tag_369:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8998:9206  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9524:9730  function _burn(address account, uint256 value) internal {... */\n    tag_197:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9613:9614  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9594:9615  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9594:9601  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9594:9615  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9590:9679  if (account == address(0)) {... */\n      tag_371\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9665:9666  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9638:9668  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_372\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_372:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9590:9679  if (account == address(0)) {... */\n    tag_371:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9688:9723  _update(account, address(0), value) */\n      tag_373\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9696:9703  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9713:9714  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9717:9722  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9688:9695  _update */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9688:9723  _update(account, address(0), value) */\n      jump\t// in\n    tag_373:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9524:9730  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_245:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_375\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_314\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_375:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_267:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_378\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_379\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_378:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_381\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_382\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_381:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":666:731  function __ERC20Burnable_init() internal onlyInitializing {... */\n    tag_269:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_384\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_379\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_384:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":666:731  function __ERC20Burnable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2577:2724  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_271:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_387\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_379\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_387:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2679:2717  __ERC20_init_unchained(name_, symbol_) */\n      tag_389\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2702:2707  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2709:2716  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2679:2701  __ERC20_init_unchained */\n      tag_390\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2679:2717  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_389:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2577:2724  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11226:11713  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_345:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11356  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11359:11377  _getERC20Storage() */\n      tag_393\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11359:11375  _getERC20Storage */\n      tag_167\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11359:11377  _getERC20Storage() */\n      jump\t// in\n    tag_393:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11377  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11408:11409  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11391:11410  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11391:11396  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11391:11410  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11387:11476  if (owner == address(0)) {... */\n      tag_394\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11462:11463  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11433:11465  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_395\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_395:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11387:11476  if (owner == address(0)) {... */\n    tag_394:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11508:11509  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11489:11510  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11489:11496  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11489:11510  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11485:11575  if (spender == address(0)) {... */\n      tag_396\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11561:11562  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11533:11564  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_397\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_397:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11485:11575  if (spender == address(0)) {... */\n    tag_396:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11616:11621  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11584:11585  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11584:11597  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11584:11604  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11598:11603  owner */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11584:11604  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11584:11613  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11605:11612  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11584:11613  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11584:11621  $._allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11635:11644  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11631:11707  if (emitEvent) {... */\n      iszero\n      tag_398\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11681:11688  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11665:11696  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11674:11679  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11665:11696  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11690:11695  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11665:11696  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_399\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_399:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11631:11707  if (emitEvent) {... */\n    tag_398:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11324:11713  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11226:11713  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Token/123.sol\":12258:13859  function _update(address sender, address recipient, uint256 amount) internal override{... */\n    tag_359:\n        /* \"Token/123.sol\":12380:12381  0 */\n      0x00\n        /* \"Token/123.sol\":12362:12382  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":12362:12368  sender */\n      dup4\n        /* \"Token/123.sol\":12362:12382  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Token/123.sol\":12354:12424  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_401\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_402\n      swap1\n      tag_403\n      jump\t// in\n    tag_402:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_401:\n        /* \"Token/123.sol\":12464:12465  0 */\n      0x00\n        /* \"Token/123.sol\":12443:12466  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":12443:12452  recipient */\n      dup3\n        /* \"Token/123.sol\":12443:12466  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Token/123.sol\":12435:12506  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_404\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_405\n      swap1\n      tag_406\n      jump\t// in\n    tag_405:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_404:\n        /* \"Token/123.sol\":12534:12535  0 */\n      0x00\n        /* \"Token/123.sol\":12525:12531  amount */\n      dup2\n        /* \"Token/123.sol\":12525:12535  amount > 0 */\n      gt\n        /* \"Token/123.sol\":12517:12581  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_407\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_408\n      swap1\n      tag_409\n      jump\t// in\n    tag_408:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_407:\n        /* \"Token/123.sol\":12603:12615  _blacklisted */\n      0x08\n        /* \"Token/123.sol\":12603:12623  _blacklisted[sender] */\n      0x00\n        /* \"Token/123.sol\":12616:12622  sender */\n      dup5\n        /* \"Token/123.sol\":12603:12623  _blacklisted[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Token/123.sol\":12602:12623  !_blacklisted[sender] */\n      iszero\n        /* \"Token/123.sol\":12594:12649  require(!_blacklisted[sender], \"Sender is blacklisted\") */\n      tag_410\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_411\n      swap1\n      tag_412\n      jump\t// in\n    tag_411:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_410:\n        /* \"Token/123.sol\":12669:12681  _blacklisted */\n      0x08\n        /* \"Token/123.sol\":12669:12692  _blacklisted[recipient] */\n      0x00\n        /* \"Token/123.sol\":12682:12691  recipient */\n      dup4\n        /* \"Token/123.sol\":12669:12692  _blacklisted[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Token/123.sol\":12668:12692  !_blacklisted[recipient] */\n      iszero\n        /* \"Token/123.sol\":12660:12721  require(!_blacklisted[recipient], \"Recipient is blacklisted\") */\n      tag_413\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_414\n      swap1\n      tag_415\n      jump\t// in\n    tag_414:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_413:\n        /* \"Token/123.sol\":12800:12807  owner() */\n      tag_416\n        /* \"Token/123.sol\":12800:12805  owner */\n      tag_126\n        /* \"Token/123.sol\":12800:12807  owner() */\n      jump\t// in\n    tag_416:\n        /* \"Token/123.sol\":12790:12807  sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":12790:12796  sender */\n      dup4\n        /* \"Token/123.sol\":12790:12807  sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Token/123.sol\":12790:12831  sender == owner() || recipient == owner() */\n      dup1\n      tag_417\n      jumpi\n      pop\n        /* \"Token/123.sol\":12824:12831  owner() */\n      tag_418\n        /* \"Token/123.sol\":12824:12829  owner */\n      tag_126\n        /* \"Token/123.sol\":12824:12831  owner() */\n      jump\t// in\n    tag_418:\n        /* \"Token/123.sol\":12811:12831  recipient == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":12811:12820  recipient */\n      dup3\n        /* \"Token/123.sol\":12811:12831  recipient == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Token/123.sol\":12790:12831  sender == owner() || recipient == owner() */\n    tag_417:\n        /* \"Token/123.sol\":12790:12858  sender == owner() || recipient == owner() || sender == address(this) */\n      dup1\n      tag_419\n      jumpi\n      pop\n        /* \"Token/123.sol\":12853:12857  this */\n      address\n        /* \"Token/123.sol\":12835:12858  sender == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":12835:12841  sender */\n      dup4\n        /* \"Token/123.sol\":12835:12858  sender == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Token/123.sol\":12790:12858  sender == owner() || recipient == owner() || sender == address(this) */\n    tag_419:\n        /* \"Token/123.sol\":12786:12947  if (sender == owner() || recipient == owner() || sender == address(this)) {... */\n      iszero\n      tag_420\n      jumpi\n        /* \"Token/123.sol\":12874:12914  super._update(sender, recipient, amount) */\n      tag_421\n        /* \"Token/123.sol\":12888:12894  sender */\n      dup4\n        /* \"Token/123.sol\":12896:12905  recipient */\n      dup4\n        /* \"Token/123.sol\":12907:12913  amount */\n      dup4\n        /* \"Token/123.sol\":12874:12887  super._update */\n      tag_422\n        /* \"Token/123.sol\":12874:12914  super._update(sender, recipient, amount) */\n      jump\t// in\n    tag_421:\n        /* \"Token/123.sol\":12929:12936  return; */\n      jump(tag_400)\n        /* \"Token/123.sol\":12786:12947  if (sender == owner() || recipient == owner() || sender == address(this)) {... */\n    tag_420:\n        /* \"Token/123.sol\":12959:12969  bool isBuy */\n      0x00\n        /* \"Token/123.sol\":12982:12993  uniswapPair */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":12972:12993  sender == uniswapPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":12972:12978  sender */\n      dup5\n        /* \"Token/123.sol\":12972:12993  sender == uniswapPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Token/123.sol\":12959:12993  bool isBuy = sender == uniswapPair */\n      swap1\n      pop\n        /* \"Token/123.sol\":13004:13015  bool isSell */\n      0x00\n        /* \"Token/123.sol\":13031:13042  uniswapPair */\n      0x0b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":13018:13042  recipient == uniswapPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":13018:13027  recipient */\n      dup5\n        /* \"Token/123.sol\":13018:13042  recipient == uniswapPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Token/123.sol\":13004:13042  bool isSell = recipient == uniswapPair */\n      swap1\n      pop\n        /* \"Token/123.sol\":13055:13075  uint256 marketingTax */\n      0x00\n        /* \"Token/123.sol\":13086:13108  uint256 developmentTax */\n      dup1\n        /* \"Token/123.sol\":13119:13144  uint256 sustainabilityTax */\n      0x00\n        /* \"Token/123.sol\":13160:13165  isBuy */\n      dup5\n        /* \"Token/123.sol\":13160:13175  isBuy || isSell */\n      dup1\n      tag_423\n      jumpi\n      pop\n        /* \"Token/123.sol\":13169:13175  isSell */\n      dup4\n        /* \"Token/123.sol\":13160:13175  isBuy || isSell */\n    tag_423:\n        /* \"Token/123.sol\":13157:13723  if(isBuy || isSell){... */\n      iszero\n      tag_424\n      jumpi\n        /* \"Token/123.sol\":13210:13230  maxTransactionAmount */\n      sload(0x06)\n        /* \"Token/123.sol\":13200:13206  amount */\n      dup7\n        /* \"Token/123.sol\":13200:13230  amount <= maxTransactionAmount */\n      gt\n      iszero\n        /* \"Token/123.sol\":13191:13272  require (amount <= maxTransactionAmount, \"Cannot buy & sell more than max limit\") */\n      tag_425\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_426\n      swap1\n      tag_427\n      jump\t// in\n    tag_426:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_425:\n        /* \"Token/123.sol\":13302:13342  _calculateTax(amount,marketingWalletTax) */\n      tag_428\n        /* \"Token/123.sol\":13316:13322  amount */\n      dup7\n        /* \"Token/123.sol\":13323:13341  marketingWalletTax */\n      sload(0x03)\n        /* \"Token/123.sol\":13302:13315  _calculateTax */\n      tag_429\n        /* \"Token/123.sol\":13302:13342  _calculateTax(amount,marketingWalletTax) */\n      jump\t// in\n    tag_428:\n        /* \"Token/123.sol\":13287:13342  marketingTax = _calculateTax(amount,marketingWalletTax) */\n      swap3\n      pop\n        /* \"Token/123.sol\":13374:13416  _calculateTax(amount,developmentWalletTax) */\n      tag_430\n        /* \"Token/123.sol\":13388:13394  amount */\n      dup7\n        /* \"Token/123.sol\":13395:13415  developmentWalletTax */\n      sload(0x04)\n        /* \"Token/123.sol\":13374:13387  _calculateTax */\n      tag_429\n        /* \"Token/123.sol\":13374:13416  _calculateTax(amount,developmentWalletTax) */\n      jump\t// in\n    tag_430:\n        /* \"Token/123.sol\":13357:13416  developmentTax = _calculateTax(amount,developmentWalletTax) */\n      swap2\n      pop\n        /* \"Token/123.sol\":13451:13496  _calculateTax(amount,sustainabilityWalletTax) */\n      tag_431\n        /* \"Token/123.sol\":13465:13471  amount */\n      dup7\n        /* \"Token/123.sol\":13472:13495  sustainabilityWalletTax */\n      sload(0x05)\n        /* \"Token/123.sol\":13451:13464  _calculateTax */\n      tag_429\n        /* \"Token/123.sol\":13451:13496  _calculateTax(amount,sustainabilityWalletTax) */\n      jump\t// in\n    tag_431:\n        /* \"Token/123.sol\":13431:13496  sustainabilityTax = _calculateTax(amount,sustainabilityWalletTax) */\n      swap1\n      pop\n        /* \"Token/123.sol\":13513:13565  super._update(sender, marketingWallet, marketingTax) */\n      tag_432\n        /* \"Token/123.sol\":13527:13533  sender */\n      dup9\n        /* \"Token/123.sol\":13535:13550  marketingWallet */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":13552:13564  marketingTax */\n      dup6\n        /* \"Token/123.sol\":13513:13526  super._update */\n      tag_422\n        /* \"Token/123.sol\":13513:13565  super._update(sender, marketingWallet, marketingTax) */\n      jump\t// in\n    tag_432:\n        /* \"Token/123.sol\":13579:13635  super._update(sender, developmentWallet, developmentTax) */\n      tag_433\n        /* \"Token/123.sol\":13593:13599  sender */\n      dup9\n        /* \"Token/123.sol\":13601:13618  developmentWallet */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":13620:13634  developmentTax */\n      dup5\n        /* \"Token/123.sol\":13579:13592  super._update */\n      tag_422\n        /* \"Token/123.sol\":13579:13635  super._update(sender, developmentWallet, developmentTax) */\n      jump\t// in\n    tag_433:\n        /* \"Token/123.sol\":13649:13711  super._update(sender, sustainabilityWallet, sustainabilityTax) */\n      tag_434\n        /* \"Token/123.sol\":13663:13669  sender */\n      dup9\n        /* \"Token/123.sol\":13671:13691  sustainabilityWallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token/123.sol\":13693:13710  sustainabilityTax */\n      dup4\n        /* \"Token/123.sol\":13649:13662  super._update */\n      tag_422\n        /* \"Token/123.sol\":13649:13711  super._update(sender, sustainabilityWallet, sustainabilityTax) */\n      jump\t// in\n    tag_434:\n        /* \"Token/123.sol\":13157:13723  if(isBuy || isSell){... */\n    tag_424:\n        /* \"Token/123.sol\":13779:13796  sustainabilityTax */\n      dup1\n        /* \"Token/123.sol\":13762:13776  developmentTax */\n      dup3\n        /* \"Token/123.sol\":13747:13759  marketingTax */\n      dup5\n        /* \"Token/123.sol\":13747:13776  marketingTax + developmentTax */\n      tag_435\n      swap2\n      swap1\n      tag_436\n      jump\t// in\n    tag_435:\n        /* \"Token/123.sol\":13747:13796  marketingTax + developmentTax + sustainabilityTax */\n      tag_437\n      swap2\n      swap1\n      tag_436\n      jump\t// in\n    tag_437:\n        /* \"Token/123.sol\":13736:13797  amount -= (marketingTax + developmentTax + sustainabilityTax) */\n      dup7\n      tag_438\n      swap2\n      swap1\n      tag_439\n      jump\t// in\n    tag_438:\n      swap6\n      pop\n        /* \"Token/123.sol\":13809:13849  super._update(sender, recipient, amount) */\n      tag_440\n        /* \"Token/123.sol\":13823:13829  sender */\n      dup9\n        /* \"Token/123.sol\":13831:13840  recipient */\n      dup9\n        /* \"Token/123.sol\":13842:13848  amount */\n      dup9\n        /* \"Token/123.sol\":13809:13822  super._update */\n      tag_422\n        /* \"Token/123.sol\":13809:13849  super._update(sender, recipient, amount) */\n      jump\t// in\n    tag_440:\n        /* \"Token/123.sol\":12343:13859  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Token/123.sol\":12258:13859  function _update(address sender, address recipient, uint256 amount) internal override{... */\n    tag_400:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_379:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_442\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_443\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_442:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_444\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_444:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_382:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_446\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_379\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_446:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_448\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_449\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_449:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_448:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_450\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_245\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_450:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2730:2946  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_390:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_452\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_379\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_452:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2842:2864  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2867:2885  _getERC20Storage() */\n      tag_454\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2867:2883  _getERC20Storage */\n      tag_167\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2867:2885  _getERC20Storage() */\n      jump\t// in\n    tag_454:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2842:2885  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2905:2910  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2895:2896  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2895:2902  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2895:2910  $._name = name_ */\n      swap1\n      dup2\n      tag_455\n      swap2\n      swap1\n      tag_456\n      jump\t// in\n    tag_455:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2932:2939  symbol_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2920:2921  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2920:2929  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2920:2939  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_457\n      swap2\n      swap1\n      tag_456\n      jump\t// in\n    tag_457:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2832:2946  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2730:2946  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7485:8655  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_422:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7570:7592  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7595:7613  _getERC20Storage() */\n      tag_459\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7595:7611  _getERC20Storage */\n      tag_167\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7595:7613  _getERC20Storage() */\n      jump\t// in\n    tag_459:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7570:7613  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7643:7644  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7627:7645  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7627:7631  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7627:7645  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7623:8169  if (from == address(0)) {... */\n      tag_460\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7781:7786  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7763:7764  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7763:7777  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7763:7786  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_461\n      swap2\n      swap1\n      tag_436\n      jump\t// in\n    tag_461:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7623:8169  if (from == address(0)) {... */\n      jump(tag_462)\n    tag_460:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7817:7836  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7839:7840  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7839:7850  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7839:7856  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7851:7855  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7839:7856  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7817:7856  uint256 fromBalance = $._balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7888:7893  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7874:7885  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7874:7893  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7870:7985  if (fromBalance < value) {... */\n      iszero\n      tag_463\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7945:7949  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7951:7962  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7964:7969  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7920:7970  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_464\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_351\n      jump\t// in\n    tag_464:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7870:7985  if (fromBalance < value) {... */\n    tag_463:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8139:8144  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8125:8136  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8125:8144  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8105:8106  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8105:8116  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8105:8122  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8117:8121  from */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8105:8122  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8105:8144  $._balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7803:8169  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7623:8169  if (from == address(0)) {... */\n    tag_462:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8197:8198  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8183:8199  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8183:8185  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8183:8199  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8179:8608  if (to == address(0)) {... */\n      tag_465\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8364:8369  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8346:8347  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8346:8360  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8346:8369  $._totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8179:8608  if (to == address(0)) {... */\n      jump(tag_466)\n    tag_465:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8578:8583  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8559:8560  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8559:8570  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8559:8574  $._balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8571:8573  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8559:8574  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8559:8583  $._balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8179:8608  if (to == address(0)) {... */\n    tag_466:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8638:8640  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8623:8648  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8632:8636  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8623:8648  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8642:8647  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8623:8648  Transfer(from, to, value) */\n      mload(0x40)\n      tag_467\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_467:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7560:8655  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7485:8655  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Token/123.sol\":14372:14526  function _calculateTax(uint256 amount, uint256 taxPercentage) internal pure returns (uint256) {... */\n    tag_429:\n        /* \"Token/123.sol\":14457:14464  uint256 */\n      0x00\n        /* \"Token/123.sol\":14512:14517  10000 */\n      0x2710\n        /* \"Token/123.sol\":14494:14507  taxPercentage */\n      dup3\n        /* \"Token/123.sol\":14484:14490  amount */\n      dup5\n        /* \"Token/123.sol\":14484:14508  amount * (taxPercentage) */\n      tag_469\n      swap2\n      swap1\n      tag_276\n      jump\t// in\n    tag_469:\n        /* \"Token/123.sol\":14484:14518  amount * (taxPercentage) / (10000) */\n      tag_470\n      swap2\n      swap1\n      tag_471\n      jump\t// in\n    tag_470:\n        /* \"Token/123.sol\":14477:14518  return amount * (taxPercentage) / (10000) */\n      swap1\n      pop\n        /* \"Token/123.sol\":14372:14526  function _calculateTax(uint256 amount, uint256 taxPercentage) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_443:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_473\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_259\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_473:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_474:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_475:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_476:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_560:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_560)\n    tag_562:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_477:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_478:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_565\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_474\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":818:889   */\n      tag_566\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_475\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_567\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_476\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":988:1017   */\n      tag_568\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_477\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_48:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_570\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_478\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_480:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_482:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_483:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_576\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_482\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_484:\n        /* \"#utility.yul\":1983:2007   */\n      tag_578\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_483\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_579\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_579:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_485:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_581\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_484\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_486:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_487:\n        /* \"#utility.yul\":2339:2363   */\n      tag_584\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_486\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_585\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_585:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_488:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_587\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_487\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_51:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_590\n      tag_480\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":2632:2751   */\n    tag_589:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_591\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_485\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_592\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_488\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_489:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_490:\n        /* \"#utility.yul\":3196:3217   */\n      tag_595\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_489\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_54:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_597\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_490\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_491:\n        /* \"#utility.yul\":3533:3557   */\n      tag_599\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_486\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_58:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_601\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_491\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:3858   */\n    tag_492:\n        /* \"#utility.yul\":3826:3829   */\n      0x00\n        /* \"#utility.yul\":3847:3852   */\n      dup2\n        /* \"#utility.yul\":3840:3852   */\n      swap1\n      pop\n        /* \"#utility.yul\":3798:3858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3864:4006   */\n    tag_493:\n        /* \"#utility.yul\":3914:3923   */\n      0x00\n        /* \"#utility.yul\":3947:4000   */\n      tag_604\n        /* \"#utility.yul\":3965:3999   */\n      tag_605\n        /* \"#utility.yul\":3974:3998   */\n      tag_606\n        /* \"#utility.yul\":3992:3997   */\n      dup5\n        /* \"#utility.yul\":3974:3998   */\n      tag_482\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":3965:3999   */\n      tag_492\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":3947:4000   */\n      tag_482\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":3934:4000   */\n      swap1\n      pop\n        /* \"#utility.yul\":3864:4006   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4012:4138   */\n    tag_494:\n        /* \"#utility.yul\":4062:4071   */\n      0x00\n        /* \"#utility.yul\":4095:4132   */\n      tag_608\n        /* \"#utility.yul\":4126:4131   */\n      dup3\n        /* \"#utility.yul\":4095:4132   */\n      tag_493\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":4082:4132   */\n      swap1\n      pop\n        /* \"#utility.yul\":4012:4138   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4144:4297   */\n    tag_495:\n        /* \"#utility.yul\":4221:4230   */\n      0x00\n        /* \"#utility.yul\":4254:4291   */\n      tag_610\n        /* \"#utility.yul\":4285:4290   */\n      dup3\n        /* \"#utility.yul\":4254:4291   */\n      tag_494\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":4241:4291   */\n      swap1\n      pop\n        /* \"#utility.yul\":4144:4297   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4488   */\n    tag_496:\n        /* \"#utility.yul\":4417:4481   */\n      tag_612\n        /* \"#utility.yul\":4475:4480   */\n      dup2\n        /* \"#utility.yul\":4417:4481   */\n      tag_495\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":4412:4415   */\n      dup3\n        /* \"#utility.yul\":4405:4482   */\n      mstore\n        /* \"#utility.yul\":4303:4488   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4494:4770   */\n    tag_62:\n        /* \"#utility.yul\":4614:4618   */\n      0x00\n        /* \"#utility.yul\":4652:4654   */\n      0x20\n        /* \"#utility.yul\":4641:4650   */\n      dup3\n        /* \"#utility.yul\":4637:4655   */\n      add\n        /* \"#utility.yul\":4629:4655   */\n      swap1\n      pop\n        /* \"#utility.yul\":4665:4763   */\n      tag_614\n        /* \"#utility.yul\":4760:4761   */\n      0x00\n        /* \"#utility.yul\":4749:4758   */\n      dup4\n        /* \"#utility.yul\":4745:4762   */\n      add\n        /* \"#utility.yul\":4736:4742   */\n      dup5\n        /* \"#utility.yul\":4665:4763   */\n      tag_496\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":4494:4770   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4776:5395   */\n    tag_68:\n        /* \"#utility.yul\":4853:4859   */\n      0x00\n        /* \"#utility.yul\":4861:4867   */\n      dup1\n        /* \"#utility.yul\":4869:4875   */\n      0x00\n        /* \"#utility.yul\":4918:4920   */\n      0x60\n        /* \"#utility.yul\":4906:4915   */\n      dup5\n        /* \"#utility.yul\":4897:4904   */\n      dup7\n        /* \"#utility.yul\":4893:4916   */\n      sub\n        /* \"#utility.yul\":4889:4921   */\n      slt\n        /* \"#utility.yul\":4886:5005   */\n      iszero\n      tag_616\n      jumpi\n        /* \"#utility.yul\":4924:5003   */\n      tag_617\n      tag_480\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":4886:5005   */\n    tag_616:\n        /* \"#utility.yul\":5044:5045   */\n      0x00\n        /* \"#utility.yul\":5069:5122   */\n      tag_618\n        /* \"#utility.yul\":5114:5121   */\n      dup7\n        /* \"#utility.yul\":5105:5111   */\n      dup3\n        /* \"#utility.yul\":5094:5103   */\n      dup8\n        /* \"#utility.yul\":5090:5112   */\n      add\n        /* \"#utility.yul\":5069:5122   */\n      tag_485\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":5059:5122   */\n      swap4\n      pop\n        /* \"#utility.yul\":5015:5132   */\n      pop\n        /* \"#utility.yul\":5171:5173   */\n      0x20\n        /* \"#utility.yul\":5197:5250   */\n      tag_619\n        /* \"#utility.yul\":5242:5249   */\n      dup7\n        /* \"#utility.yul\":5233:5239   */\n      dup3\n        /* \"#utility.yul\":5222:5231   */\n      dup8\n        /* \"#utility.yul\":5218:5240   */\n      add\n        /* \"#utility.yul\":5197:5250   */\n      tag_485\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":5187:5250   */\n      swap3\n      pop\n        /* \"#utility.yul\":5142:5260   */\n      pop\n        /* \"#utility.yul\":5299:5301   */\n      0x40\n        /* \"#utility.yul\":5325:5378   */\n      tag_620\n        /* \"#utility.yul\":5370:5377   */\n      dup7\n        /* \"#utility.yul\":5361:5367   */\n      dup3\n        /* \"#utility.yul\":5350:5359   */\n      dup8\n        /* \"#utility.yul\":5346:5368   */\n      add\n        /* \"#utility.yul\":5325:5378   */\n      tag_488\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":5315:5378   */\n      swap2\n      pop\n        /* \"#utility.yul\":5270:5388   */\n      pop\n        /* \"#utility.yul\":4776:5395   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5401:5487   */\n    tag_497:\n        /* \"#utility.yul\":5436:5443   */\n      0x00\n        /* \"#utility.yul\":5476:5480   */\n      0xff\n        /* \"#utility.yul\":5469:5474   */\n      dup3\n        /* \"#utility.yul\":5465:5481   */\n      and\n        /* \"#utility.yul\":5454:5481   */\n      swap1\n      pop\n        /* \"#utility.yul\":5401:5487   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5493:5605   */\n    tag_498:\n        /* \"#utility.yul\":5576:5598   */\n      tag_623\n        /* \"#utility.yul\":5592:5597   */\n      dup2\n        /* \"#utility.yul\":5576:5598   */\n      tag_497\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":5571:5574   */\n      dup3\n        /* \"#utility.yul\":5564:5599   */\n      mstore\n        /* \"#utility.yul\":5493:5605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5611:5825   */\n    tag_74:\n        /* \"#utility.yul\":5700:5704   */\n      0x00\n        /* \"#utility.yul\":5738:5740   */\n      0x20\n        /* \"#utility.yul\":5727:5736   */\n      dup3\n        /* \"#utility.yul\":5723:5741   */\n      add\n        /* \"#utility.yul\":5715:5741   */\n      swap1\n      pop\n        /* \"#utility.yul\":5751:5818   */\n      tag_625\n        /* \"#utility.yul\":5815:5816   */\n      0x00\n        /* \"#utility.yul\":5804:5813   */\n      dup4\n        /* \"#utility.yul\":5800:5817   */\n      add\n        /* \"#utility.yul\":5791:5797   */\n      dup5\n        /* \"#utility.yul\":5751:5818   */\n      tag_498\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":5611:5825   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5831:6160   */\n    tag_80:\n        /* \"#utility.yul\":5890:5896   */\n      0x00\n        /* \"#utility.yul\":5939:5941   */\n      0x20\n        /* \"#utility.yul\":5927:5936   */\n      dup3\n        /* \"#utility.yul\":5918:5925   */\n      dup5\n        /* \"#utility.yul\":5914:5937   */\n      sub\n        /* \"#utility.yul\":5910:5942   */\n      slt\n        /* \"#utility.yul\":5907:6026   */\n      iszero\n      tag_627\n      jumpi\n        /* \"#utility.yul\":5945:6024   */\n      tag_628\n      tag_480\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":5907:6026   */\n    tag_627:\n        /* \"#utility.yul\":6065:6066   */\n      0x00\n        /* \"#utility.yul\":6090:6143   */\n      tag_629\n        /* \"#utility.yul\":6135:6142   */\n      dup5\n        /* \"#utility.yul\":6126:6132   */\n      dup3\n        /* \"#utility.yul\":6115:6124   */\n      dup6\n        /* \"#utility.yul\":6111:6133   */\n      add\n        /* \"#utility.yul\":6090:6143   */\n      tag_488\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":6080:6143   */\n      swap2\n      pop\n        /* \"#utility.yul\":6036:6153   */\n      pop\n        /* \"#utility.yul\":5831:6160   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6166:6495   */\n    tag_84:\n        /* \"#utility.yul\":6225:6231   */\n      0x00\n        /* \"#utility.yul\":6274:6276   */\n      0x20\n        /* \"#utility.yul\":6262:6271   */\n      dup3\n        /* \"#utility.yul\":6253:6260   */\n      dup5\n        /* \"#utility.yul\":6249:6272   */\n      sub\n        /* \"#utility.yul\":6245:6277   */\n      slt\n        /* \"#utility.yul\":6242:6361   */\n      iszero\n      tag_631\n      jumpi\n        /* \"#utility.yul\":6280:6359   */\n      tag_632\n      tag_480\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":6242:6361   */\n    tag_631:\n        /* \"#utility.yul\":6400:6401   */\n      0x00\n        /* \"#utility.yul\":6425:6478   */\n      tag_633\n        /* \"#utility.yul\":6470:6477   */\n      dup5\n        /* \"#utility.yul\":6461:6467   */\n      dup3\n        /* \"#utility.yul\":6450:6459   */\n      dup6\n        /* \"#utility.yul\":6446:6468   */\n      add\n        /* \"#utility.yul\":6425:6478   */\n      tag_485\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":6415:6478   */\n      swap2\n      pop\n        /* \"#utility.yul\":6371:6488   */\n      pop\n        /* \"#utility.yul\":6166:6495   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6501:6619   */\n    tag_499:\n        /* \"#utility.yul\":6588:6612   */\n      tag_635\n        /* \"#utility.yul\":6606:6611   */\n      dup2\n        /* \"#utility.yul\":6588:6612   */\n      tag_483\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":6583:6586   */\n      dup3\n        /* \"#utility.yul\":6576:6613   */\n      mstore\n        /* \"#utility.yul\":6501:6619   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6625:6847   */\n    tag_110:\n        /* \"#utility.yul\":6718:6722   */\n      0x00\n        /* \"#utility.yul\":6756:6758   */\n      0x20\n        /* \"#utility.yul\":6745:6754   */\n      dup3\n        /* \"#utility.yul\":6741:6759   */\n      add\n        /* \"#utility.yul\":6733:6759   */\n      swap1\n      pop\n        /* \"#utility.yul\":6769:6840   */\n      tag_637\n        /* \"#utility.yul\":6837:6838   */\n      0x00\n        /* \"#utility.yul\":6826:6835   */\n      dup4\n        /* \"#utility.yul\":6822:6839   */\n      add\n        /* \"#utility.yul\":6813:6819   */\n      dup5\n        /* \"#utility.yul\":6769:6840   */\n      tag_499\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":6625:6847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6853:7327   */\n    tag_149:\n        /* \"#utility.yul\":6921:6927   */\n      0x00\n        /* \"#utility.yul\":6929:6935   */\n      dup1\n        /* \"#utility.yul\":6978:6980   */\n      0x40\n        /* \"#utility.yul\":6966:6975   */\n      dup4\n        /* \"#utility.yul\":6957:6964   */\n      dup6\n        /* \"#utility.yul\":6953:6976   */\n      sub\n        /* \"#utility.yul\":6949:6981   */\n      slt\n        /* \"#utility.yul\":6946:7065   */\n      iszero\n      tag_639\n      jumpi\n        /* \"#utility.yul\":6984:7063   */\n      tag_640\n      tag_480\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":6946:7065   */\n    tag_639:\n        /* \"#utility.yul\":7104:7105   */\n      0x00\n        /* \"#utility.yul\":7129:7182   */\n      tag_641\n        /* \"#utility.yul\":7174:7181   */\n      dup6\n        /* \"#utility.yul\":7165:7171   */\n      dup3\n        /* \"#utility.yul\":7154:7163   */\n      dup7\n        /* \"#utility.yul\":7150:7172   */\n      add\n        /* \"#utility.yul\":7129:7182   */\n      tag_485\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":7119:7182   */\n      swap3\n      pop\n        /* \"#utility.yul\":7075:7192   */\n      pop\n        /* \"#utility.yul\":7231:7233   */\n      0x20\n        /* \"#utility.yul\":7257:7310   */\n      tag_642\n        /* \"#utility.yul\":7302:7309   */\n      dup6\n        /* \"#utility.yul\":7293:7299   */\n      dup3\n        /* \"#utility.yul\":7282:7291   */\n      dup7\n        /* \"#utility.yul\":7278:7300   */\n      add\n        /* \"#utility.yul\":7257:7310   */\n      tag_485\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":7247:7310   */\n      swap2\n      pop\n        /* \"#utility.yul\":7202:7320   */\n      pop\n        /* \"#utility.yul\":6853:7327   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7333:7513   */\n    tag_500:\n        /* \"#utility.yul\":7381:7458   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7378:7379   */\n      0x00\n        /* \"#utility.yul\":7371:7459   */\n      mstore\n        /* \"#utility.yul\":7478:7482   */\n      0x22\n        /* \"#utility.yul\":7475:7476   */\n      0x04\n        /* \"#utility.yul\":7468:7483   */\n      mstore\n        /* \"#utility.yul\":7502:7506   */\n      0x24\n        /* \"#utility.yul\":7499:7500   */\n      0x00\n        /* \"#utility.yul\":7492:7507   */\n      revert\n        /* \"#utility.yul\":7519:7839   */\n    tag_169:\n        /* \"#utility.yul\":7563:7569   */\n      0x00\n        /* \"#utility.yul\":7600:7601   */\n      0x02\n        /* \"#utility.yul\":7594:7598   */\n      dup3\n        /* \"#utility.yul\":7590:7602   */\n      div\n        /* \"#utility.yul\":7580:7602   */\n      swap1\n      pop\n        /* \"#utility.yul\":7647:7648   */\n      0x01\n        /* \"#utility.yul\":7641:7645   */\n      dup3\n        /* \"#utility.yul\":7637:7649   */\n      and\n        /* \"#utility.yul\":7668:7686   */\n      dup1\n        /* \"#utility.yul\":7658:7739   */\n      tag_645\n      jumpi\n        /* \"#utility.yul\":7724:7728   */\n      0x7f\n        /* \"#utility.yul\":7716:7722   */\n      dup3\n        /* \"#utility.yul\":7712:7729   */\n      and\n        /* \"#utility.yul\":7702:7729   */\n      swap2\n      pop\n        /* \"#utility.yul\":7658:7739   */\n    tag_645:\n        /* \"#utility.yul\":7786:7788   */\n      0x20\n        /* \"#utility.yul\":7778:7784   */\n      dup3\n        /* \"#utility.yul\":7775:7789   */\n      lt\n        /* \"#utility.yul\":7755:7773   */\n      dup2\n        /* \"#utility.yul\":7752:7790   */\n      sub\n        /* \"#utility.yul\":7749:7833   */\n      tag_646\n      jumpi\n        /* \"#utility.yul\":7805:7823   */\n      tag_647\n      tag_500\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":7749:7833   */\n    tag_646:\n        /* \"#utility.yul\":7570:7839   */\n      pop\n        /* \"#utility.yul\":7519:7839   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7845:8025   */\n    tag_501:\n        /* \"#utility.yul\":7985:8017   */\n      0x4163636f756e7420697320616c726561647920626c61636b6c69737465640000\n        /* \"#utility.yul\":7981:7982   */\n      0x00\n        /* \"#utility.yul\":7973:7979   */\n      dup3\n        /* \"#utility.yul\":7969:7983   */\n      add\n        /* \"#utility.yul\":7962:8018   */\n      mstore\n        /* \"#utility.yul\":7845:8025   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8031:8397   */\n    tag_502:\n        /* \"#utility.yul\":8173:8176   */\n      0x00\n        /* \"#utility.yul\":8194:8261   */\n      tag_650\n        /* \"#utility.yul\":8258:8260   */\n      0x1e\n        /* \"#utility.yul\":8253:8256   */\n      dup4\n        /* \"#utility.yul\":8194:8261   */\n      tag_475\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":8187:8261   */\n      swap2\n      pop\n        /* \"#utility.yul\":8270:8363   */\n      tag_651\n        /* \"#utility.yul\":8359:8362   */\n      dup3\n        /* \"#utility.yul\":8270:8363   */\n      tag_501\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":8388:8390   */\n      0x20\n        /* \"#utility.yul\":8383:8386   */\n      dup3\n        /* \"#utility.yul\":8379:8391   */\n      add\n        /* \"#utility.yul\":8372:8391   */\n      swap1\n      pop\n        /* \"#utility.yul\":8031:8397   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8403:8822   */\n    tag_203:\n        /* \"#utility.yul\":8569:8573   */\n      0x00\n        /* \"#utility.yul\":8607:8609   */\n      0x20\n        /* \"#utility.yul\":8596:8605   */\n      dup3\n        /* \"#utility.yul\":8592:8610   */\n      add\n        /* \"#utility.yul\":8584:8610   */\n      swap1\n      pop\n        /* \"#utility.yul\":8656:8665   */\n      dup2\n        /* \"#utility.yul\":8650:8654   */\n      dup2\n        /* \"#utility.yul\":8646:8666   */\n      sub\n        /* \"#utility.yul\":8642:8643   */\n      0x00\n        /* \"#utility.yul\":8631:8640   */\n      dup4\n        /* \"#utility.yul\":8627:8644   */\n      add\n        /* \"#utility.yul\":8620:8667   */\n      mstore\n        /* \"#utility.yul\":8684:8815   */\n      tag_653\n        /* \"#utility.yul\":8810:8814   */\n      dup2\n        /* \"#utility.yul\":8684:8815   */\n      tag_502\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":8676:8815   */\n      swap1\n      pop\n        /* \"#utility.yul\":8403:8822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8828:8999   */\n    tag_503:\n        /* \"#utility.yul\":8968:8991   */\n      0x43616e6e6f7420626c61636b6c6973742073656c660000000000000000000000\n        /* \"#utility.yul\":8964:8965   */\n      0x00\n        /* \"#utility.yul\":8956:8962   */\n      dup3\n        /* \"#utility.yul\":8952:8966   */\n      add\n        /* \"#utility.yul\":8945:8992   */\n      mstore\n        /* \"#utility.yul\":8828:8999   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9005:9371   */\n    tag_504:\n        /* \"#utility.yul\":9147:9150   */\n      0x00\n        /* \"#utility.yul\":9168:9235   */\n      tag_656\n        /* \"#utility.yul\":9232:9234   */\n      0x15\n        /* \"#utility.yul\":9227:9230   */\n      dup4\n        /* \"#utility.yul\":9168:9235   */\n      tag_475\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":9161:9235   */\n      swap2\n      pop\n        /* \"#utility.yul\":9244:9337   */\n      tag_657\n        /* \"#utility.yul\":9333:9336   */\n      dup3\n        /* \"#utility.yul\":9244:9337   */\n      tag_503\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":9362:9364   */\n      0x20\n        /* \"#utility.yul\":9357:9360   */\n      dup3\n        /* \"#utility.yul\":9353:9365   */\n      add\n        /* \"#utility.yul\":9346:9365   */\n      swap1\n      pop\n        /* \"#utility.yul\":9005:9371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9377:9796   */\n    tag_207:\n        /* \"#utility.yul\":9543:9547   */\n      0x00\n        /* \"#utility.yul\":9581:9583   */\n      0x20\n        /* \"#utility.yul\":9570:9579   */\n      dup3\n        /* \"#utility.yul\":9566:9584   */\n      add\n        /* \"#utility.yul\":9558:9584   */\n      swap1\n      pop\n        /* \"#utility.yul\":9630:9639   */\n      dup2\n        /* \"#utility.yul\":9624:9628   */\n      dup2\n        /* \"#utility.yul\":9620:9640   */\n      sub\n        /* \"#utility.yul\":9616:9617   */\n      0x00\n        /* \"#utility.yul\":9605:9614   */\n      dup4\n        /* \"#utility.yul\":9601:9618   */\n      add\n        /* \"#utility.yul\":9594:9641   */\n      mstore\n        /* \"#utility.yul\":9658:9789   */\n      tag_659\n        /* \"#utility.yul\":9784:9788   */\n      dup2\n        /* \"#utility.yul\":9658:9789   */\n      tag_504\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":9650:9789   */\n      swap1\n      pop\n        /* \"#utility.yul\":9377:9796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9802:9982   */\n    tag_505:\n        /* \"#utility.yul\":9942:9974   */\n      0x616d6f756e742073686f756c6420626520677265617465207468616e20300000\n        /* \"#utility.yul\":9938:9939   */\n      0x00\n        /* \"#utility.yul\":9930:9936   */\n      dup3\n        /* \"#utility.yul\":9926:9940   */\n      add\n        /* \"#utility.yul\":9919:9975   */\n      mstore\n        /* \"#utility.yul\":9802:9982   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9988:10354   */\n    tag_506:\n        /* \"#utility.yul\":10130:10133   */\n      0x00\n        /* \"#utility.yul\":10151:10218   */\n      tag_662\n        /* \"#utility.yul\":10215:10217   */\n      0x1e\n        /* \"#utility.yul\":10210:10213   */\n      dup4\n        /* \"#utility.yul\":10151:10218   */\n      tag_475\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":10144:10218   */\n      swap2\n      pop\n        /* \"#utility.yul\":10227:10320   */\n      tag_663\n        /* \"#utility.yul\":10316:10319   */\n      dup3\n        /* \"#utility.yul\":10227:10320   */\n      tag_505\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":10345:10347   */\n      0x20\n        /* \"#utility.yul\":10340:10343   */\n      dup3\n        /* \"#utility.yul\":10336:10348   */\n      add\n        /* \"#utility.yul\":10329:10348   */\n      swap1\n      pop\n        /* \"#utility.yul\":9988:10354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10360:10779   */\n    tag_213:\n        /* \"#utility.yul\":10526:10530   */\n      0x00\n        /* \"#utility.yul\":10564:10566   */\n      0x20\n        /* \"#utility.yul\":10553:10562   */\n      dup3\n        /* \"#utility.yul\":10549:10567   */\n      add\n        /* \"#utility.yul\":10541:10567   */\n      swap1\n      pop\n        /* \"#utility.yul\":10613:10622   */\n      dup2\n        /* \"#utility.yul\":10607:10611   */\n      dup2\n        /* \"#utility.yul\":10603:10623   */\n      sub\n        /* \"#utility.yul\":10599:10600   */\n      0x00\n        /* \"#utility.yul\":10588:10597   */\n      dup4\n        /* \"#utility.yul\":10584:10601   */\n      add\n        /* \"#utility.yul\":10577:10624   */\n      mstore\n        /* \"#utility.yul\":10641:10772   */\n      tag_665\n        /* \"#utility.yul\":10767:10771   */\n      dup2\n        /* \"#utility.yul\":10641:10772   */\n      tag_506\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":10633:10772   */\n      swap1\n      pop\n        /* \"#utility.yul\":10360:10779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10785:10961   */\n    tag_507:\n        /* \"#utility.yul\":10925:10953   */\n      0x4163636f756e74206973206e6f7420626c61636b6c6973746564000000000000\n        /* \"#utility.yul\":10921:10922   */\n      0x00\n        /* \"#utility.yul\":10913:10919   */\n      dup3\n        /* \"#utility.yul\":10909:10923   */\n      add\n        /* \"#utility.yul\":10902:10954   */\n      mstore\n        /* \"#utility.yul\":10785:10961   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10967:11333   */\n    tag_508:\n        /* \"#utility.yul\":11109:11112   */\n      0x00\n        /* \"#utility.yul\":11130:11197   */\n      tag_668\n        /* \"#utility.yul\":11194:11196   */\n      0x1a\n        /* \"#utility.yul\":11189:11192   */\n      dup4\n        /* \"#utility.yul\":11130:11197   */\n      tag_475\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":11123:11197   */\n      swap2\n      pop\n        /* \"#utility.yul\":11206:11299   */\n      tag_669\n        /* \"#utility.yul\":11295:11298   */\n      dup3\n        /* \"#utility.yul\":11206:11299   */\n      tag_507\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":11324:11326   */\n      0x20\n        /* \"#utility.yul\":11319:11322   */\n      dup3\n        /* \"#utility.yul\":11315:11327   */\n      add\n        /* \"#utility.yul\":11308:11327   */\n      swap1\n      pop\n        /* \"#utility.yul\":10967:11333   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11339:11758   */\n    tag_220:\n        /* \"#utility.yul\":11505:11509   */\n      0x00\n        /* \"#utility.yul\":11543:11545   */\n      0x20\n        /* \"#utility.yul\":11532:11541   */\n      dup3\n        /* \"#utility.yul\":11528:11546   */\n      add\n        /* \"#utility.yul\":11520:11546   */\n      swap1\n      pop\n        /* \"#utility.yul\":11592:11601   */\n      dup2\n        /* \"#utility.yul\":11586:11590   */\n      dup2\n        /* \"#utility.yul\":11582:11602   */\n      sub\n        /* \"#utility.yul\":11578:11579   */\n      0x00\n        /* \"#utility.yul\":11567:11576   */\n      dup4\n        /* \"#utility.yul\":11563:11580   */\n      add\n        /* \"#utility.yul\":11556:11603   */\n      mstore\n        /* \"#utility.yul\":11620:11751   */\n      tag_671\n        /* \"#utility.yul\":11746:11750   */\n      dup2\n        /* \"#utility.yul\":11620:11751   */\n      tag_508\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":11612:11751   */\n      swap1\n      pop\n        /* \"#utility.yul\":11339:11758   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11764:11984   */\n    tag_509:\n        /* \"#utility.yul\":11904:11938   */\n      0x43616e6e6f742072656d6f76652073656c662066726f6d20626c61636b6c6973\n        /* \"#utility.yul\":11900:11901   */\n      0x00\n        /* \"#utility.yul\":11892:11898   */\n      dup3\n        /* \"#utility.yul\":11888:11902   */\n      add\n        /* \"#utility.yul\":11881:11939   */\n      mstore\n        /* \"#utility.yul\":11973:11976   */\n      0x7400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11968:11970   */\n      0x20\n        /* \"#utility.yul\":11960:11966   */\n      dup3\n        /* \"#utility.yul\":11956:11971   */\n      add\n        /* \"#utility.yul\":11949:11977   */\n      mstore\n        /* \"#utility.yul\":11764:11984   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11990:12356   */\n    tag_510:\n        /* \"#utility.yul\":12132:12135   */\n      0x00\n        /* \"#utility.yul\":12153:12220   */\n      tag_674\n        /* \"#utility.yul\":12217:12219   */\n      0x21\n        /* \"#utility.yul\":12212:12215   */\n      dup4\n        /* \"#utility.yul\":12153:12220   */\n      tag_475\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":12146:12220   */\n      swap2\n      pop\n        /* \"#utility.yul\":12229:12322   */\n      tag_675\n        /* \"#utility.yul\":12318:12321   */\n      dup3\n        /* \"#utility.yul\":12229:12322   */\n      tag_509\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":12347:12349   */\n      0x40\n        /* \"#utility.yul\":12342:12345   */\n      dup3\n        /* \"#utility.yul\":12338:12350   */\n      add\n        /* \"#utility.yul\":12331:12350   */\n      swap1\n      pop\n        /* \"#utility.yul\":11990:12356   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12362:12781   */\n    tag_224:\n        /* \"#utility.yul\":12528:12532   */\n      0x00\n        /* \"#utility.yul\":12566:12568   */\n      0x20\n        /* \"#utility.yul\":12555:12564   */\n      dup3\n        /* \"#utility.yul\":12551:12569   */\n      add\n        /* \"#utility.yul\":12543:12569   */\n      swap1\n      pop\n        /* \"#utility.yul\":12615:12624   */\n      dup2\n        /* \"#utility.yul\":12609:12613   */\n      dup2\n        /* \"#utility.yul\":12605:12625   */\n      sub\n        /* \"#utility.yul\":12601:12602   */\n      0x00\n        /* \"#utility.yul\":12590:12599   */\n      dup4\n        /* \"#utility.yul\":12586:12603   */\n      add\n        /* \"#utility.yul\":12579:12626   */\n      mstore\n        /* \"#utility.yul\":12643:12774   */\n      tag_677\n        /* \"#utility.yul\":12769:12773   */\n      dup2\n        /* \"#utility.yul\":12643:12774   */\n      tag_510\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":12635:12774   */\n      swap1\n      pop\n        /* \"#utility.yul\":12362:12781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12787:13013   */\n    tag_511:\n        /* \"#utility.yul\":12927:12961   */\n      0x4d61726b6574696e672077616c6c65742063616e6e6f74206265207a65726f20\n        /* \"#utility.yul\":12923:12924   */\n      0x00\n        /* \"#utility.yul\":12915:12921   */\n      dup3\n        /* \"#utility.yul\":12911:12925   */\n      add\n        /* \"#utility.yul\":12904:12962   */\n      mstore\n        /* \"#utility.yul\":12996:13005   */\n      0x6164647265737300000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12991:12993   */\n      0x20\n        /* \"#utility.yul\":12983:12989   */\n      dup3\n        /* \"#utility.yul\":12979:12994   */\n      add\n        /* \"#utility.yul\":12972:13006   */\n      mstore\n        /* \"#utility.yul\":12787:13013   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13019:13385   */\n    tag_512:\n        /* \"#utility.yul\":13161:13164   */\n      0x00\n        /* \"#utility.yul\":13182:13249   */\n      tag_680\n        /* \"#utility.yul\":13246:13248   */\n      0x27\n        /* \"#utility.yul\":13241:13244   */\n      dup4\n        /* \"#utility.yul\":13182:13249   */\n      tag_475\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":13175:13249   */\n      swap2\n      pop\n        /* \"#utility.yul\":13258:13351   */\n      tag_681\n        /* \"#utility.yul\":13347:13350   */\n      dup3\n        /* \"#utility.yul\":13258:13351   */\n      tag_511\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":13376:13378   */\n      0x40\n        /* \"#utility.yul\":13371:13374   */\n      dup3\n        /* \"#utility.yul\":13367:13379   */\n      add\n        /* \"#utility.yul\":13360:13379   */\n      swap1\n      pop\n        /* \"#utility.yul\":13019:13385   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13391:13810   */\n    tag_230:\n        /* \"#utility.yul\":13557:13561   */\n      0x00\n        /* \"#utility.yul\":13595:13597   */\n      0x20\n        /* \"#utility.yul\":13584:13593   */\n      dup3\n        /* \"#utility.yul\":13580:13598   */\n      add\n        /* \"#utility.yul\":13572:13598   */\n      swap1\n      pop\n        /* \"#utility.yul\":13644:13653   */\n      dup2\n        /* \"#utility.yul\":13638:13642   */\n      dup2\n        /* \"#utility.yul\":13634:13654   */\n      sub\n        /* \"#utility.yul\":13630:13631   */\n      0x00\n        /* \"#utility.yul\":13619:13628   */\n      dup4\n        /* \"#utility.yul\":13615:13632   */\n      add\n        /* \"#utility.yul\":13608:13655   */\n      mstore\n        /* \"#utility.yul\":13672:13803   */\n      tag_683\n        /* \"#utility.yul\":13798:13802   */\n      dup2\n        /* \"#utility.yul\":13672:13803   */\n      tag_512\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":13664:13803   */\n      swap1\n      pop\n        /* \"#utility.yul\":13391:13810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13816:14036   */\n    tag_513:\n        /* \"#utility.yul\":13956:13990   */\n      0x5461782070657263656e746167652063616e6e6f742065786365656420313030\n        /* \"#utility.yul\":13952:13953   */\n      0x00\n        /* \"#utility.yul\":13944:13950   */\n      dup3\n        /* \"#utility.yul\":13940:13954   */\n      add\n        /* \"#utility.yul\":13933:13991   */\n      mstore\n        /* \"#utility.yul\":14025:14028   */\n      0x2500000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14020:14022   */\n      0x20\n        /* \"#utility.yul\":14012:14018   */\n      dup3\n        /* \"#utility.yul\":14008:14023   */\n      add\n        /* \"#utility.yul\":14001:14029   */\n      mstore\n        /* \"#utility.yul\":13816:14036   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14042:14408   */\n    tag_514:\n        /* \"#utility.yul\":14184:14187   */\n      0x00\n        /* \"#utility.yul\":14205:14272   */\n      tag_686\n        /* \"#utility.yul\":14269:14271   */\n      0x21\n        /* \"#utility.yul\":14264:14267   */\n      dup4\n        /* \"#utility.yul\":14205:14272   */\n      tag_475\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":14198:14272   */\n      swap2\n      pop\n        /* \"#utility.yul\":14281:14374   */\n      tag_687\n        /* \"#utility.yul\":14370:14373   */\n      dup3\n        /* \"#utility.yul\":14281:14374   */\n      tag_513\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":14399:14401   */\n      0x40\n        /* \"#utility.yul\":14394:14397   */\n      dup3\n        /* \"#utility.yul\":14390:14402   */\n      add\n        /* \"#utility.yul\":14383:14402   */\n      swap1\n      pop\n        /* \"#utility.yul\":14042:14408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14414:14833   */\n    tag_237:\n        /* \"#utility.yul\":14580:14584   */\n      0x00\n        /* \"#utility.yul\":14618:14620   */\n      0x20\n        /* \"#utility.yul\":14607:14616   */\n      dup3\n        /* \"#utility.yul\":14603:14621   */\n      add\n        /* \"#utility.yul\":14595:14621   */\n      swap1\n      pop\n        /* \"#utility.yul\":14667:14676   */\n      dup2\n        /* \"#utility.yul\":14661:14665   */\n      dup2\n        /* \"#utility.yul\":14657:14677   */\n      sub\n        /* \"#utility.yul\":14653:14654   */\n      0x00\n        /* \"#utility.yul\":14642:14651   */\n      dup4\n        /* \"#utility.yul\":14638:14655   */\n      add\n        /* \"#utility.yul\":14631:14678   */\n      mstore\n        /* \"#utility.yul\":14695:14826   */\n      tag_689\n        /* \"#utility.yul\":14821:14825   */\n      dup2\n        /* \"#utility.yul\":14695:14826   */\n      tag_514\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":14687:14826   */\n      swap1\n      pop\n        /* \"#utility.yul\":14414:14833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14839:15059   */\n    tag_515:\n        /* \"#utility.yul\":14979:15013   */\n      0x4465762077616c6c65742063616e6e6f74206265207a65726f20616464726573\n        /* \"#utility.yul\":14975:14976   */\n      0x00\n        /* \"#utility.yul\":14967:14973   */\n      dup3\n        /* \"#utility.yul\":14963:14977   */\n      add\n        /* \"#utility.yul\":14956:15014   */\n      mstore\n        /* \"#utility.yul\":15048:15051   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15043:15045   */\n      0x20\n        /* \"#utility.yul\":15035:15041   */\n      dup3\n        /* \"#utility.yul\":15031:15046   */\n      add\n        /* \"#utility.yul\":15024:15052   */\n      mstore\n        /* \"#utility.yul\":14839:15059   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15065:15431   */\n    tag_516:\n        /* \"#utility.yul\":15207:15210   */\n      0x00\n        /* \"#utility.yul\":15228:15295   */\n      tag_692\n        /* \"#utility.yul\":15292:15294   */\n      0x21\n        /* \"#utility.yul\":15287:15290   */\n      dup4\n        /* \"#utility.yul\":15228:15295   */\n      tag_475\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":15221:15295   */\n      swap2\n      pop\n        /* \"#utility.yul\":15304:15397   */\n      tag_693\n        /* \"#utility.yul\":15393:15396   */\n      dup3\n        /* \"#utility.yul\":15304:15397   */\n      tag_515\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":15422:15424   */\n      0x40\n        /* \"#utility.yul\":15417:15420   */\n      dup3\n        /* \"#utility.yul\":15413:15425   */\n      add\n        /* \"#utility.yul\":15406:15425   */\n      swap1\n      pop\n        /* \"#utility.yul\":15065:15431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15437:15856   */\n    tag_251:\n        /* \"#utility.yul\":15603:15607   */\n      0x00\n        /* \"#utility.yul\":15641:15643   */\n      0x20\n        /* \"#utility.yul\":15630:15639   */\n      dup3\n        /* \"#utility.yul\":15626:15644   */\n      add\n        /* \"#utility.yul\":15618:15644   */\n      swap1\n      pop\n        /* \"#utility.yul\":15690:15699   */\n      dup2\n        /* \"#utility.yul\":15684:15688   */\n      dup2\n        /* \"#utility.yul\":15680:15700   */\n      sub\n        /* \"#utility.yul\":15676:15677   */\n      0x00\n        /* \"#utility.yul\":15665:15674   */\n      dup4\n        /* \"#utility.yul\":15661:15678   */\n      add\n        /* \"#utility.yul\":15654:15701   */\n      mstore\n        /* \"#utility.yul\":15718:15849   */\n      tag_695\n        /* \"#utility.yul\":15844:15848   */\n      dup2\n        /* \"#utility.yul\":15718:15849   */\n      tag_516\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":15710:15849   */\n      swap1\n      pop\n        /* \"#utility.yul\":15437:15856   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15862:16042   */\n    tag_517:\n        /* \"#utility.yul\":15910:15987   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15907:15908   */\n      0x00\n        /* \"#utility.yul\":15900:15988   */\n      mstore\n        /* \"#utility.yul\":16007:16011   */\n      0x11\n        /* \"#utility.yul\":16004:16005   */\n      0x04\n        /* \"#utility.yul\":15997:16012   */\n      mstore\n        /* \"#utility.yul\":16031:16035   */\n      0x24\n        /* \"#utility.yul\":16028:16029   */\n      0x00\n        /* \"#utility.yul\":16021:16036   */\n      revert\n        /* \"#utility.yul\":16048:16150   */\n    tag_518:\n        /* \"#utility.yul\":16090:16098   */\n      0x00\n        /* \"#utility.yul\":16137:16142   */\n      dup2\n        /* \"#utility.yul\":16134:16135   */\n      0x01\n        /* \"#utility.yul\":16130:16143   */\n      shr\n        /* \"#utility.yul\":16109:16143   */\n      swap1\n      pop\n        /* \"#utility.yul\":16048:16150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16156:17004   */\n    tag_519:\n        /* \"#utility.yul\":16217:16222   */\n      0x00\n        /* \"#utility.yul\":16224:16228   */\n      dup1\n        /* \"#utility.yul\":16248:16254   */\n      dup3\n        /* \"#utility.yul\":16239:16254   */\n      swap2\n      pop\n        /* \"#utility.yul\":16272:16277   */\n      dup4\n        /* \"#utility.yul\":16263:16277   */\n      swap1\n      pop\n        /* \"#utility.yul\":16286:16998   */\n    tag_699:\n        /* \"#utility.yul\":16307:16308   */\n      0x01\n        /* \"#utility.yul\":16297:16305   */\n      dup6\n        /* \"#utility.yul\":16294:16309   */\n      gt\n        /* \"#utility.yul\":16286:16998   */\n      iszero\n      tag_701\n      jumpi\n        /* \"#utility.yul\":16402:16406   */\n      dup1\n        /* \"#utility.yul\":16397:16400   */\n      dup7\n        /* \"#utility.yul\":16393:16407   */\n      div\n        /* \"#utility.yul\":16387:16391   */\n      dup2\n        /* \"#utility.yul\":16384:16408   */\n      gt\n        /* \"#utility.yul\":16381:16431   */\n      iszero\n      tag_702\n      jumpi\n        /* \"#utility.yul\":16411:16429   */\n      tag_703\n      tag_517\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":16381:16431   */\n    tag_702:\n        /* \"#utility.yul\":16461:16462   */\n      0x01\n        /* \"#utility.yul\":16451:16459   */\n      dup6\n        /* \"#utility.yul\":16447:16463   */\n      and\n        /* \"#utility.yul\":16444:16895   */\n      iszero\n      tag_704\n      jumpi\n        /* \"#utility.yul\":16876:16880   */\n      dup1\n        /* \"#utility.yul\":16869:16874   */\n      dup3\n        /* \"#utility.yul\":16865:16881   */\n      mul\n        /* \"#utility.yul\":16856:16881   */\n      swap2\n      pop\n        /* \"#utility.yul\":16444:16895   */\n    tag_704:\n        /* \"#utility.yul\":16926:16930   */\n      dup1\n        /* \"#utility.yul\":16920:16924   */\n      dup2\n        /* \"#utility.yul\":16916:16931   */\n      mul\n        /* \"#utility.yul\":16908:16931   */\n      swap1\n      pop\n        /* \"#utility.yul\":16956:16988   */\n      tag_705\n        /* \"#utility.yul\":16979:16987   */\n      dup6\n        /* \"#utility.yul\":16956:16988   */\n      tag_518\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":16944:16988   */\n      swap5\n      pop\n        /* \"#utility.yul\":16286:16998   */\n      jump(tag_699)\n    tag_701:\n        /* \"#utility.yul\":16156:17004   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17010:18083   */\n    tag_520:\n        /* \"#utility.yul\":17064:17069   */\n      0x00\n        /* \"#utility.yul\":17255:17263   */\n      dup3\n        /* \"#utility.yul\":17245:17285   */\n      tag_707\n      jumpi\n        /* \"#utility.yul\":17276:17277   */\n      0x01\n        /* \"#utility.yul\":17267:17277   */\n      swap1\n      pop\n        /* \"#utility.yul\":17278:17283   */\n      jump(tag_706)\n        /* \"#utility.yul\":17245:17285   */\n    tag_707:\n        /* \"#utility.yul\":17304:17308   */\n      dup2\n        /* \"#utility.yul\":17294:17330   */\n      tag_708\n      jumpi\n        /* \"#utility.yul\":17321:17322   */\n      0x00\n        /* \"#utility.yul\":17312:17322   */\n      swap1\n      pop\n        /* \"#utility.yul\":17323:17328   */\n      jump(tag_706)\n        /* \"#utility.yul\":17294:17330   */\n    tag_708:\n        /* \"#utility.yul\":17390:17394   */\n      dup2\n        /* \"#utility.yul\":17438:17439   */\n      0x01\n        /* \"#utility.yul\":17433:17460   */\n      dup2\n      eq\n      tag_710\n      jumpi\n        /* \"#utility.yul\":17474:17475   */\n      0x02\n        /* \"#utility.yul\":17469:17660   */\n      dup2\n      eq\n      tag_711\n      jumpi\n        /* \"#utility.yul\":17383:17660   */\n      jump(tag_709)\n        /* \"#utility.yul\":17433:17460   */\n    tag_710:\n        /* \"#utility.yul\":17451:17452   */\n      0x01\n        /* \"#utility.yul\":17442:17452   */\n      swap2\n      pop\n        /* \"#utility.yul\":17453:17458   */\n      pop\n      jump(tag_706)\n        /* \"#utility.yul\":17469:17660   */\n    tag_711:\n        /* \"#utility.yul\":17514:17517   */\n      0xff\n        /* \"#utility.yul\":17504:17512   */\n      dup5\n        /* \"#utility.yul\":17501:17518   */\n      gt\n        /* \"#utility.yul\":17498:17541   */\n      iszero\n      tag_712\n      jumpi\n        /* \"#utility.yul\":17521:17539   */\n      tag_713\n      tag_517\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":17498:17541   */\n    tag_712:\n        /* \"#utility.yul\":17570:17578   */\n      dup4\n        /* \"#utility.yul\":17567:17568   */\n      0x02\n        /* \"#utility.yul\":17563:17579   */\n      exp\n        /* \"#utility.yul\":17554:17579   */\n      swap2\n      pop\n        /* \"#utility.yul\":17605:17608   */\n      dup5\n        /* \"#utility.yul\":17598:17603   */\n      dup3\n        /* \"#utility.yul\":17595:17609   */\n      gt\n        /* \"#utility.yul\":17592:17632   */\n      iszero\n      tag_714\n      jumpi\n        /* \"#utility.yul\":17612:17630   */\n      tag_715\n      tag_517\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":17592:17632   */\n    tag_714:\n        /* \"#utility.yul\":17645:17650   */\n      pop\n      jump(tag_706)\n        /* \"#utility.yul\":17383:17660   */\n    tag_709:\n      pop\n        /* \"#utility.yul\":17769:17771   */\n      0x20\n        /* \"#utility.yul\":17759:17767   */\n      dup4\n        /* \"#utility.yul\":17756:17772   */\n      lt\n        /* \"#utility.yul\":17750:17753   */\n      0x0133\n        /* \"#utility.yul\":17744:17748   */\n      dup4\n        /* \"#utility.yul\":17741:17754   */\n      lt\n        /* \"#utility.yul\":17737:17773   */\n      and\n        /* \"#utility.yul\":17719:17721   */\n      0x4e\n        /* \"#utility.yul\":17709:17717   */\n      dup5\n        /* \"#utility.yul\":17706:17722   */\n      lt\n        /* \"#utility.yul\":17701:17703   */\n      0x0b\n        /* \"#utility.yul\":17695:17699   */\n      dup5\n        /* \"#utility.yul\":17692:17704   */\n      lt\n        /* \"#utility.yul\":17688:17723   */\n      and\n        /* \"#utility.yul\":17672:17783   */\n      or\n        /* \"#utility.yul\":17669:17915   */\n      iszero\n      tag_716\n      jumpi\n        /* \"#utility.yul\":17825:17833   */\n      dup3\n        /* \"#utility.yul\":17819:17823   */\n      dup3\n        /* \"#utility.yul\":17815:17834   */\n      exp\n        /* \"#utility.yul\":17806:17834   */\n      swap1\n      pop\n        /* \"#utility.yul\":17860:17863   */\n      dup4\n        /* \"#utility.yul\":17853:17858   */\n      dup2\n        /* \"#utility.yul\":17850:17864   */\n      gt\n        /* \"#utility.yul\":17847:17887   */\n      iszero\n      tag_717\n      jumpi\n        /* \"#utility.yul\":17867:17885   */\n      tag_718\n      tag_517\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":17847:17887   */\n    tag_717:\n        /* \"#utility.yul\":17900:17905   */\n      jump(tag_706)\n        /* \"#utility.yul\":17669:17915   */\n    tag_716:\n        /* \"#utility.yul\":17940:17982   */\n      tag_719\n        /* \"#utility.yul\":17978:17981   */\n      dup5\n        /* \"#utility.yul\":17968:17976   */\n      dup5\n        /* \"#utility.yul\":17962:17966   */\n      dup5\n        /* \"#utility.yul\":17959:17960   */\n      0x01\n        /* \"#utility.yul\":17940:17982   */\n      tag_519\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":17925:17982   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":18014:18018   */\n      dup2\n        /* \"#utility.yul\":18009:18012   */\n      dup5\n        /* \"#utility.yul\":18005:18019   */\n      div\n        /* \"#utility.yul\":17998:18003   */\n      dup2\n        /* \"#utility.yul\":17995:18020   */\n      gt\n        /* \"#utility.yul\":17992:18043   */\n      iszero\n      tag_720\n      jumpi\n        /* \"#utility.yul\":18023:18041   */\n      tag_721\n      tag_517\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":17992:18043   */\n    tag_720:\n        /* \"#utility.yul\":18072:18076   */\n      dup2\n        /* \"#utility.yul\":18065:18070   */\n      dup2\n        /* \"#utility.yul\":18061:18077   */\n      mul\n        /* \"#utility.yul\":18052:18077   */\n      swap1\n      pop\n        /* \"#utility.yul\":17010:18083   */\n    tag_706:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18089:18370   */\n    tag_274:\n        /* \"#utility.yul\":18147:18152   */\n      0x00\n        /* \"#utility.yul\":18171:18194   */\n      tag_723\n        /* \"#utility.yul\":18189:18193   */\n      dup3\n        /* \"#utility.yul\":18171:18194   */\n      tag_486\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":18163:18194   */\n      swap2\n      pop\n        /* \"#utility.yul\":18215:18240   */\n      tag_724\n        /* \"#utility.yul\":18231:18239   */\n      dup4\n        /* \"#utility.yul\":18215:18240   */\n      tag_497\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":18203:18240   */\n      swap3\n      pop\n        /* \"#utility.yul\":18259:18363   */\n      tag_725\n        /* \"#utility.yul\":18296:18362   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18286:18294   */\n      dup5\n        /* \"#utility.yul\":18280:18284   */\n      dup5\n        /* \"#utility.yul\":18259:18363   */\n      tag_520\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":18250:18363   */\n      swap1\n      pop\n        /* \"#utility.yul\":18089:18370   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18376:18786   */\n    tag_276:\n        /* \"#utility.yul\":18416:18423   */\n      0x00\n        /* \"#utility.yul\":18439:18459   */\n      tag_727\n        /* \"#utility.yul\":18457:18458   */\n      dup3\n        /* \"#utility.yul\":18439:18459   */\n      tag_486\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":18434:18459   */\n      swap2\n      pop\n        /* \"#utility.yul\":18473:18493   */\n      tag_728\n        /* \"#utility.yul\":18491:18492   */\n      dup4\n        /* \"#utility.yul\":18473:18493   */\n      tag_486\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":18468:18493   */\n      swap3\n      pop\n        /* \"#utility.yul\":18528:18529   */\n      dup3\n        /* \"#utility.yul\":18525:18526   */\n      dup3\n        /* \"#utility.yul\":18521:18530   */\n      mul\n        /* \"#utility.yul\":18550:18580   */\n      tag_729\n        /* \"#utility.yul\":18568:18579   */\n      dup2\n        /* \"#utility.yul\":18550:18580   */\n      tag_486\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":18539:18580   */\n      swap2\n      pop\n        /* \"#utility.yul\":18729:18730   */\n      dup3\n        /* \"#utility.yul\":18720:18727   */\n      dup3\n        /* \"#utility.yul\":18716:18731   */\n      div\n        /* \"#utility.yul\":18713:18714   */\n      dup5\n        /* \"#utility.yul\":18710:18732   */\n      eq\n        /* \"#utility.yul\":18690:18691   */\n      dup4\n        /* \"#utility.yul\":18683:18692   */\n      iszero\n        /* \"#utility.yul\":18663:18746   */\n      or\n        /* \"#utility.yul\":18640:18779   */\n      tag_730\n      jumpi\n        /* \"#utility.yul\":18759:18777   */\n      tag_731\n      tag_517\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":18640:18779   */\n    tag_730:\n        /* \"#utility.yul\":18424:18786   */\n      pop\n        /* \"#utility.yul\":18376:18786   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18792:19077   */\n    tag_279:\n        /* \"#utility.yul\":18852:18857   */\n      0x00\n        /* \"#utility.yul\":18876:18899   */\n      tag_733\n        /* \"#utility.yul\":18894:18898   */\n      dup3\n        /* \"#utility.yul\":18876:18899   */\n      tag_486\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":18868:18899   */\n      swap2\n      pop\n        /* \"#utility.yul\":18920:18947   */\n      tag_734\n        /* \"#utility.yul\":18938:18946   */\n      dup4\n        /* \"#utility.yul\":18920:18947   */\n      tag_486\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":18908:18947   */\n      swap3\n      pop\n        /* \"#utility.yul\":18966:19070   */\n      tag_735\n        /* \"#utility.yul\":19003:19069   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18993:19001   */\n      dup5\n        /* \"#utility.yul\":18987:18991   */\n      dup5\n        /* \"#utility.yul\":18966:19070   */\n      tag_520\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":18957:19070   */\n      swap1\n      pop\n        /* \"#utility.yul\":18792:19077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19083:19226   */\n    tag_521:\n        /* \"#utility.yul\":19140:19145   */\n      0x00\n        /* \"#utility.yul\":19171:19177   */\n      dup2\n        /* \"#utility.yul\":19165:19178   */\n      mload\n        /* \"#utility.yul\":19156:19178   */\n      swap1\n      pop\n        /* \"#utility.yul\":19187:19220   */\n      tag_737\n        /* \"#utility.yul\":19214:19219   */\n      dup2\n        /* \"#utility.yul\":19187:19220   */\n      tag_484\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":19083:19226   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19232:19583   */\n    tag_285:\n        /* \"#utility.yul\":19302:19308   */\n      0x00\n        /* \"#utility.yul\":19351:19353   */\n      0x20\n        /* \"#utility.yul\":19339:19348   */\n      dup3\n        /* \"#utility.yul\":19330:19337   */\n      dup5\n        /* \"#utility.yul\":19326:19349   */\n      sub\n        /* \"#utility.yul\":19322:19354   */\n      slt\n        /* \"#utility.yul\":19319:19438   */\n      iszero\n      tag_739\n      jumpi\n        /* \"#utility.yul\":19357:19436   */\n      tag_740\n      tag_480\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":19319:19438   */\n    tag_739:\n        /* \"#utility.yul\":19477:19478   */\n      0x00\n        /* \"#utility.yul\":19502:19566   */\n      tag_741\n        /* \"#utility.yul\":19558:19565   */\n      dup5\n        /* \"#utility.yul\":19549:19555   */\n      dup3\n        /* \"#utility.yul\":19538:19547   */\n      dup6\n        /* \"#utility.yul\":19534:19556   */\n      add\n        /* \"#utility.yul\":19502:19566   */\n      tag_521\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":19492:19566   */\n      swap2\n      pop\n        /* \"#utility.yul\":19448:19576   */\n      pop\n        /* \"#utility.yul\":19232:19583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19589:19921   */\n    tag_290:\n        /* \"#utility.yul\":19710:19714   */\n      0x00\n        /* \"#utility.yul\":19748:19750   */\n      0x40\n        /* \"#utility.yul\":19737:19746   */\n      dup3\n        /* \"#utility.yul\":19733:19751   */\n      add\n        /* \"#utility.yul\":19725:19751   */\n      swap1\n      pop\n        /* \"#utility.yul\":19761:19832   */\n      tag_743\n        /* \"#utility.yul\":19829:19830   */\n      0x00\n        /* \"#utility.yul\":19818:19827   */\n      dup4\n        /* \"#utility.yul\":19814:19831   */\n      add\n        /* \"#utility.yul\":19805:19811   */\n      dup6\n        /* \"#utility.yul\":19761:19832   */\n      tag_499\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":19842:19914   */\n      tag_744\n        /* \"#utility.yul\":19910:19912   */\n      0x20\n        /* \"#utility.yul\":19899:19908   */\n      dup4\n        /* \"#utility.yul\":19895:19913   */\n      add\n        /* \"#utility.yul\":19886:19892   */\n      dup5\n        /* \"#utility.yul\":19842:19914   */\n      tag_499\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":19589:19921   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19927:20012   */\n    tag_522:\n        /* \"#utility.yul\":19972:19979   */\n      0x00\n        /* \"#utility.yul\":20001:20006   */\n      dup2\n        /* \"#utility.yul\":19990:20006   */\n      swap1\n      pop\n        /* \"#utility.yul\":19927:20012   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20018:20119   */\n    tag_523:\n        /* \"#utility.yul\":20054:20061   */\n      0x00\n        /* \"#utility.yul\":20094:20112   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":20087:20092   */\n      dup3\n        /* \"#utility.yul\":20083:20113   */\n      and\n        /* \"#utility.yul\":20072:20113   */\n      swap1\n      pop\n        /* \"#utility.yul\":20018:20119   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20125:20281   */\n    tag_524:\n        /* \"#utility.yul\":20182:20191   */\n      0x00\n        /* \"#utility.yul\":20215:20275   */\n      tag_748\n        /* \"#utility.yul\":20232:20274   */\n      tag_749\n        /* \"#utility.yul\":20241:20273   */\n      tag_750\n        /* \"#utility.yul\":20267:20272   */\n      dup5\n        /* \"#utility.yul\":20241:20273   */\n      tag_522\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":20232:20274   */\n      tag_492\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":20215:20275   */\n      tag_523\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":20202:20275   */\n      swap1\n      pop\n        /* \"#utility.yul\":20125:20281   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20287:20432   */\n    tag_525:\n        /* \"#utility.yul\":20381:20425   */\n      tag_752\n        /* \"#utility.yul\":20419:20424   */\n      dup2\n        /* \"#utility.yul\":20381:20425   */\n      tag_524\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":20376:20379   */\n      dup3\n        /* \"#utility.yul\":20369:20426   */\n      mstore\n        /* \"#utility.yul\":20287:20432   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20438:20674   */\n    tag_299:\n        /* \"#utility.yul\":20538:20542   */\n      0x00\n        /* \"#utility.yul\":20576:20578   */\n      0x20\n        /* \"#utility.yul\":20565:20574   */\n      dup3\n        /* \"#utility.yul\":20561:20579   */\n      add\n        /* \"#utility.yul\":20553:20579   */\n      swap1\n      pop\n        /* \"#utility.yul\":20589:20667   */\n      tag_754\n        /* \"#utility.yul\":20664:20665   */\n      0x00\n        /* \"#utility.yul\":20653:20662   */\n      dup4\n        /* \"#utility.yul\":20649:20666   */\n      add\n        /* \"#utility.yul\":20640:20646   */\n      dup5\n        /* \"#utility.yul\":20589:20667   */\n      tag_525\n      jump\t// in\n    tag_754:\n        /* \"#utility.yul\":20438:20674   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20680:20909   */\n    tag_526:\n        /* \"#utility.yul\":20820:20854   */\n      0x737461696e6162696c6974792077616c6c65742063616e6e6f74206265207a65\n        /* \"#utility.yul\":20816:20817   */\n      0x00\n        /* \"#utility.yul\":20808:20814   */\n      dup3\n        /* \"#utility.yul\":20804:20818   */\n      add\n        /* \"#utility.yul\":20797:20855   */\n      mstore\n        /* \"#utility.yul\":20889:20901   */\n      0x726f206164647265737300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20884:20886   */\n      0x20\n        /* \"#utility.yul\":20876:20882   */\n      dup3\n        /* \"#utility.yul\":20872:20887   */\n      add\n        /* \"#utility.yul\":20865:20902   */\n      mstore\n        /* \"#utility.yul\":20680:20909   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20915:21281   */\n    tag_527:\n        /* \"#utility.yul\":21057:21060   */\n      0x00\n        /* \"#utility.yul\":21078:21145   */\n      tag_757\n        /* \"#utility.yul\":21142:21144   */\n      0x2a\n        /* \"#utility.yul\":21137:21140   */\n      dup4\n        /* \"#utility.yul\":21078:21145   */\n      tag_475\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":21071:21145   */\n      swap2\n      pop\n        /* \"#utility.yul\":21154:21247   */\n      tag_758\n        /* \"#utility.yul\":21243:21246   */\n      dup3\n        /* \"#utility.yul\":21154:21247   */\n      tag_526\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":21272:21274   */\n      0x40\n        /* \"#utility.yul\":21267:21270   */\n      dup3\n        /* \"#utility.yul\":21263:21275   */\n      add\n        /* \"#utility.yul\":21256:21275   */\n      swap1\n      pop\n        /* \"#utility.yul\":20915:21281   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21287:21706   */\n    tag_330:\n        /* \"#utility.yul\":21453:21457   */\n      0x00\n        /* \"#utility.yul\":21491:21493   */\n      0x20\n        /* \"#utility.yul\":21480:21489   */\n      dup3\n        /* \"#utility.yul\":21476:21494   */\n      add\n        /* \"#utility.yul\":21468:21494   */\n      swap1\n      pop\n        /* \"#utility.yul\":21540:21549   */\n      dup2\n        /* \"#utility.yul\":21534:21538   */\n      dup2\n        /* \"#utility.yul\":21530:21550   */\n      sub\n        /* \"#utility.yul\":21526:21527   */\n      0x00\n        /* \"#utility.yul\":21515:21524   */\n      dup4\n        /* \"#utility.yul\":21511:21528   */\n      add\n        /* \"#utility.yul\":21504:21551   */\n      mstore\n        /* \"#utility.yul\":21568:21699   */\n      tag_760\n        /* \"#utility.yul\":21694:21698   */\n      dup2\n        /* \"#utility.yul\":21568:21699   */\n      tag_527\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":21560:21699   */\n      swap1\n      pop\n        /* \"#utility.yul\":21287:21706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21712:22154   */\n    tag_351:\n        /* \"#utility.yul\":21861:21865   */\n      0x00\n        /* \"#utility.yul\":21899:21901   */\n      0x60\n        /* \"#utility.yul\":21888:21897   */\n      dup3\n        /* \"#utility.yul\":21884:21902   */\n      add\n        /* \"#utility.yul\":21876:21902   */\n      swap1\n      pop\n        /* \"#utility.yul\":21912:21983   */\n      tag_762\n        /* \"#utility.yul\":21980:21981   */\n      0x00\n        /* \"#utility.yul\":21969:21978   */\n      dup4\n        /* \"#utility.yul\":21965:21982   */\n      add\n        /* \"#utility.yul\":21956:21962   */\n      dup7\n        /* \"#utility.yul\":21912:21983   */\n      tag_499\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":21993:22065   */\n      tag_763\n        /* \"#utility.yul\":22061:22063   */\n      0x20\n        /* \"#utility.yul\":22050:22059   */\n      dup4\n        /* \"#utility.yul\":22046:22064   */\n      add\n        /* \"#utility.yul\":22037:22043   */\n      dup6\n        /* \"#utility.yul\":21993:22065   */\n      tag_491\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":22075:22147   */\n      tag_764\n        /* \"#utility.yul\":22143:22145   */\n      0x40\n        /* \"#utility.yul\":22132:22141   */\n      dup4\n        /* \"#utility.yul\":22128:22146   */\n      add\n        /* \"#utility.yul\":22119:22125   */\n      dup5\n        /* \"#utility.yul\":22075:22147   */\n      tag_491\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":21712:22154   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22160:22384   */\n    tag_528:\n        /* \"#utility.yul\":22300:22334   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":22296:22297   */\n      0x00\n        /* \"#utility.yul\":22288:22294   */\n      dup3\n        /* \"#utility.yul\":22284:22298   */\n      add\n        /* \"#utility.yul\":22277:22335   */\n      mstore\n        /* \"#utility.yul\":22369:22376   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22364:22366   */\n      0x20\n        /* \"#utility.yul\":22356:22362   */\n      dup3\n        /* \"#utility.yul\":22352:22367   */\n      add\n        /* \"#utility.yul\":22345:22377   */\n      mstore\n        /* \"#utility.yul\":22160:22384   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22390:22756   */\n    tag_529:\n        /* \"#utility.yul\":22532:22535   */\n      0x00\n        /* \"#utility.yul\":22553:22620   */\n      tag_767\n        /* \"#utility.yul\":22617:22619   */\n      0x25\n        /* \"#utility.yul\":22612:22615   */\n      dup4\n        /* \"#utility.yul\":22553:22620   */\n      tag_475\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":22546:22620   */\n      swap2\n      pop\n        /* \"#utility.yul\":22629:22722   */\n      tag_768\n        /* \"#utility.yul\":22718:22721   */\n      dup3\n        /* \"#utility.yul\":22629:22722   */\n      tag_528\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":22747:22749   */\n      0x40\n        /* \"#utility.yul\":22742:22745   */\n      dup3\n        /* \"#utility.yul\":22738:22750   */\n      add\n        /* \"#utility.yul\":22731:22750   */\n      swap1\n      pop\n        /* \"#utility.yul\":22390:22756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22762:23181   */\n    tag_403:\n        /* \"#utility.yul\":22928:22932   */\n      0x00\n        /* \"#utility.yul\":22966:22968   */\n      0x20\n        /* \"#utility.yul\":22955:22964   */\n      dup3\n        /* \"#utility.yul\":22951:22969   */\n      add\n        /* \"#utility.yul\":22943:22969   */\n      swap1\n      pop\n        /* \"#utility.yul\":23015:23024   */\n      dup2\n        /* \"#utility.yul\":23009:23013   */\n      dup2\n        /* \"#utility.yul\":23005:23025   */\n      sub\n        /* \"#utility.yul\":23001:23002   */\n      0x00\n        /* \"#utility.yul\":22990:22999   */\n      dup4\n        /* \"#utility.yul\":22986:23003   */\n      add\n        /* \"#utility.yul\":22979:23026   */\n      mstore\n        /* \"#utility.yul\":23043:23174   */\n      tag_770\n        /* \"#utility.yul\":23169:23173   */\n      dup2\n        /* \"#utility.yul\":23043:23174   */\n      tag_529\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":23035:23174   */\n      swap1\n      pop\n        /* \"#utility.yul\":22762:23181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23187:23409   */\n    tag_530:\n        /* \"#utility.yul\":23327:23361   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":23323:23324   */\n      0x00\n        /* \"#utility.yul\":23315:23321   */\n      dup3\n        /* \"#utility.yul\":23311:23325   */\n      add\n        /* \"#utility.yul\":23304:23362   */\n      mstore\n        /* \"#utility.yul\":23396:23401   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23391:23393   */\n      0x20\n        /* \"#utility.yul\":23383:23389   */\n      dup3\n        /* \"#utility.yul\":23379:23394   */\n      add\n        /* \"#utility.yul\":23372:23402   */\n      mstore\n        /* \"#utility.yul\":23187:23409   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23415:23781   */\n    tag_531:\n        /* \"#utility.yul\":23557:23560   */\n      0x00\n        /* \"#utility.yul\":23578:23645   */\n      tag_773\n        /* \"#utility.yul\":23642:23644   */\n      0x23\n        /* \"#utility.yul\":23637:23640   */\n      dup4\n        /* \"#utility.yul\":23578:23645   */\n      tag_475\n      jump\t// in\n    tag_773:\n        /* \"#utility.yul\":23571:23645   */\n      swap2\n      pop\n        /* \"#utility.yul\":23654:23747   */\n      tag_774\n        /* \"#utility.yul\":23743:23746   */\n      dup3\n        /* \"#utility.yul\":23654:23747   */\n      tag_530\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":23772:23774   */\n      0x40\n        /* \"#utility.yul\":23767:23770   */\n      dup3\n        /* \"#utility.yul\":23763:23775   */\n      add\n        /* \"#utility.yul\":23756:23775   */\n      swap1\n      pop\n        /* \"#utility.yul\":23415:23781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23787:24206   */\n    tag_406:\n        /* \"#utility.yul\":23953:23957   */\n      0x00\n        /* \"#utility.yul\":23991:23993   */\n      0x20\n        /* \"#utility.yul\":23980:23989   */\n      dup3\n        /* \"#utility.yul\":23976:23994   */\n      add\n        /* \"#utility.yul\":23968:23994   */\n      swap1\n      pop\n        /* \"#utility.yul\":24040:24049   */\n      dup2\n        /* \"#utility.yul\":24034:24038   */\n      dup2\n        /* \"#utility.yul\":24030:24050   */\n      sub\n        /* \"#utility.yul\":24026:24027   */\n      0x00\n        /* \"#utility.yul\":24015:24024   */\n      dup4\n        /* \"#utility.yul\":24011:24028   */\n      add\n        /* \"#utility.yul\":24004:24051   */\n      mstore\n        /* \"#utility.yul\":24068:24199   */\n      tag_776\n        /* \"#utility.yul\":24194:24198   */\n      dup2\n        /* \"#utility.yul\":24068:24199   */\n      tag_531\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":24060:24199   */\n      swap1\n      pop\n        /* \"#utility.yul\":23787:24206   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24212:24440   */\n    tag_532:\n        /* \"#utility.yul\":24352:24386   */\n      0x5472616e7366657220616d6f756e74206d757374206265206772656174657220\n        /* \"#utility.yul\":24348:24349   */\n      0x00\n        /* \"#utility.yul\":24340:24346   */\n      dup3\n        /* \"#utility.yul\":24336:24350   */\n      add\n        /* \"#utility.yul\":24329:24387   */\n      mstore\n        /* \"#utility.yul\":24421:24432   */\n      0x7468616e207a65726f0000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24416:24418   */\n      0x20\n        /* \"#utility.yul\":24408:24414   */\n      dup3\n        /* \"#utility.yul\":24404:24419   */\n      add\n        /* \"#utility.yul\":24397:24433   */\n      mstore\n        /* \"#utility.yul\":24212:24440   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24446:24812   */\n    tag_533:\n        /* \"#utility.yul\":24588:24591   */\n      0x00\n        /* \"#utility.yul\":24609:24676   */\n      tag_779\n        /* \"#utility.yul\":24673:24675   */\n      0x29\n        /* \"#utility.yul\":24668:24671   */\n      dup4\n        /* \"#utility.yul\":24609:24676   */\n      tag_475\n      jump\t// in\n    tag_779:\n        /* \"#utility.yul\":24602:24676   */\n      swap2\n      pop\n        /* \"#utility.yul\":24685:24778   */\n      tag_780\n        /* \"#utility.yul\":24774:24777   */\n      dup3\n        /* \"#utility.yul\":24685:24778   */\n      tag_532\n      jump\t// in\n    tag_780:\n        /* \"#utility.yul\":24803:24805   */\n      0x40\n        /* \"#utility.yul\":24798:24801   */\n      dup3\n        /* \"#utility.yul\":24794:24806   */\n      add\n        /* \"#utility.yul\":24787:24806   */\n      swap1\n      pop\n        /* \"#utility.yul\":24446:24812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24818:25237   */\n    tag_409:\n        /* \"#utility.yul\":24984:24988   */\n      0x00\n        /* \"#utility.yul\":25022:25024   */\n      0x20\n        /* \"#utility.yul\":25011:25020   */\n      dup3\n        /* \"#utility.yul\":25007:25025   */\n      add\n        /* \"#utility.yul\":24999:25025   */\n      swap1\n      pop\n        /* \"#utility.yul\":25071:25080   */\n      dup2\n        /* \"#utility.yul\":25065:25069   */\n      dup2\n        /* \"#utility.yul\":25061:25081   */\n      sub\n        /* \"#utility.yul\":25057:25058   */\n      0x00\n        /* \"#utility.yul\":25046:25055   */\n      dup4\n        /* \"#utility.yul\":25042:25059   */\n      add\n        /* \"#utility.yul\":25035:25082   */\n      mstore\n        /* \"#utility.yul\":25099:25230   */\n      tag_782\n        /* \"#utility.yul\":25225:25229   */\n      dup2\n        /* \"#utility.yul\":25099:25230   */\n      tag_533\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":25091:25230   */\n      swap1\n      pop\n        /* \"#utility.yul\":24818:25237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25243:25414   */\n    tag_534:\n        /* \"#utility.yul\":25383:25406   */\n      0x53656e64657220697320626c61636b6c69737465640000000000000000000000\n        /* \"#utility.yul\":25379:25380   */\n      0x00\n        /* \"#utility.yul\":25371:25377   */\n      dup3\n        /* \"#utility.yul\":25367:25381   */\n      add\n        /* \"#utility.yul\":25360:25407   */\n      mstore\n        /* \"#utility.yul\":25243:25414   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25420:25786   */\n    tag_535:\n        /* \"#utility.yul\":25562:25565   */\n      0x00\n        /* \"#utility.yul\":25583:25650   */\n      tag_785\n        /* \"#utility.yul\":25647:25649   */\n      0x15\n        /* \"#utility.yul\":25642:25645   */\n      dup4\n        /* \"#utility.yul\":25583:25650   */\n      tag_475\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":25576:25650   */\n      swap2\n      pop\n        /* \"#utility.yul\":25659:25752   */\n      tag_786\n        /* \"#utility.yul\":25748:25751   */\n      dup3\n        /* \"#utility.yul\":25659:25752   */\n      tag_534\n      jump\t// in\n    tag_786:\n        /* \"#utility.yul\":25777:25779   */\n      0x20\n        /* \"#utility.yul\":25772:25775   */\n      dup3\n        /* \"#utility.yul\":25768:25780   */\n      add\n        /* \"#utility.yul\":25761:25780   */\n      swap1\n      pop\n        /* \"#utility.yul\":25420:25786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25792:26211   */\n    tag_412:\n        /* \"#utility.yul\":25958:25962   */\n      0x00\n        /* \"#utility.yul\":25996:25998   */\n      0x20\n        /* \"#utility.yul\":25985:25994   */\n      dup3\n        /* \"#utility.yul\":25981:25999   */\n      add\n        /* \"#utility.yul\":25973:25999   */\n      swap1\n      pop\n        /* \"#utility.yul\":26045:26054   */\n      dup2\n        /* \"#utility.yul\":26039:26043   */\n      dup2\n        /* \"#utility.yul\":26035:26055   */\n      sub\n        /* \"#utility.yul\":26031:26032   */\n      0x00\n        /* \"#utility.yul\":26020:26029   */\n      dup4\n        /* \"#utility.yul\":26016:26033   */\n      add\n        /* \"#utility.yul\":26009:26056   */\n      mstore\n        /* \"#utility.yul\":26073:26204   */\n      tag_788\n        /* \"#utility.yul\":26199:26203   */\n      dup2\n        /* \"#utility.yul\":26073:26204   */\n      tag_535\n      jump\t// in\n    tag_788:\n        /* \"#utility.yul\":26065:26204   */\n      swap1\n      pop\n        /* \"#utility.yul\":25792:26211   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26217:26391   */\n    tag_536:\n        /* \"#utility.yul\":26357:26383   */\n      0x526563697069656e7420697320626c61636b6c69737465640000000000000000\n        /* \"#utility.yul\":26353:26354   */\n      0x00\n        /* \"#utility.yul\":26345:26351   */\n      dup3\n        /* \"#utility.yul\":26341:26355   */\n      add\n        /* \"#utility.yul\":26334:26384   */\n      mstore\n        /* \"#utility.yul\":26217:26391   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26397:26763   */\n    tag_537:\n        /* \"#utility.yul\":26539:26542   */\n      0x00\n        /* \"#utility.yul\":26560:26627   */\n      tag_791\n        /* \"#utility.yul\":26624:26626   */\n      0x18\n        /* \"#utility.yul\":26619:26622   */\n      dup4\n        /* \"#utility.yul\":26560:26627   */\n      tag_475\n      jump\t// in\n    tag_791:\n        /* \"#utility.yul\":26553:26627   */\n      swap2\n      pop\n        /* \"#utility.yul\":26636:26729   */\n      tag_792\n        /* \"#utility.yul\":26725:26728   */\n      dup3\n        /* \"#utility.yul\":26636:26729   */\n      tag_536\n      jump\t// in\n    tag_792:\n        /* \"#utility.yul\":26754:26756   */\n      0x20\n        /* \"#utility.yul\":26749:26752   */\n      dup3\n        /* \"#utility.yul\":26745:26757   */\n      add\n        /* \"#utility.yul\":26738:26757   */\n      swap1\n      pop\n        /* \"#utility.yul\":26397:26763   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26769:27188   */\n    tag_415:\n        /* \"#utility.yul\":26935:26939   */\n      0x00\n        /* \"#utility.yul\":26973:26975   */\n      0x20\n        /* \"#utility.yul\":26962:26971   */\n      dup3\n        /* \"#utility.yul\":26958:26976   */\n      add\n        /* \"#utility.yul\":26950:26976   */\n      swap1\n      pop\n        /* \"#utility.yul\":27022:27031   */\n      dup2\n        /* \"#utility.yul\":27016:27020   */\n      dup2\n        /* \"#utility.yul\":27012:27032   */\n      sub\n        /* \"#utility.yul\":27008:27009   */\n      0x00\n        /* \"#utility.yul\":26997:27006   */\n      dup4\n        /* \"#utility.yul\":26993:27010   */\n      add\n        /* \"#utility.yul\":26986:27033   */\n      mstore\n        /* \"#utility.yul\":27050:27181   */\n      tag_794\n        /* \"#utility.yul\":27176:27180   */\n      dup2\n        /* \"#utility.yul\":27050:27181   */\n      tag_537\n      jump\t// in\n    tag_794:\n        /* \"#utility.yul\":27042:27181   */\n      swap1\n      pop\n        /* \"#utility.yul\":26769:27188   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27194:27418   */\n    tag_538:\n        /* \"#utility.yul\":27334:27368   */\n      0x43616e6e6f742062757920262073656c6c206d6f7265207468616e206d617820\n        /* \"#utility.yul\":27330:27331   */\n      0x00\n        /* \"#utility.yul\":27322:27328   */\n      dup3\n        /* \"#utility.yul\":27318:27332   */\n      add\n        /* \"#utility.yul\":27311:27369   */\n      mstore\n        /* \"#utility.yul\":27403:27410   */\n      0x6c696d6974000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27398:27400   */\n      0x20\n        /* \"#utility.yul\":27390:27396   */\n      dup3\n        /* \"#utility.yul\":27386:27401   */\n      add\n        /* \"#utility.yul\":27379:27411   */\n      mstore\n        /* \"#utility.yul\":27194:27418   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27424:27790   */\n    tag_539:\n        /* \"#utility.yul\":27566:27569   */\n      0x00\n        /* \"#utility.yul\":27587:27654   */\n      tag_797\n        /* \"#utility.yul\":27651:27653   */\n      0x25\n        /* \"#utility.yul\":27646:27649   */\n      dup4\n        /* \"#utility.yul\":27587:27654   */\n      tag_475\n      jump\t// in\n    tag_797:\n        /* \"#utility.yul\":27580:27654   */\n      swap2\n      pop\n        /* \"#utility.yul\":27663:27756   */\n      tag_798\n        /* \"#utility.yul\":27752:27755   */\n      dup3\n        /* \"#utility.yul\":27663:27756   */\n      tag_538\n      jump\t// in\n    tag_798:\n        /* \"#utility.yul\":27781:27783   */\n      0x40\n        /* \"#utility.yul\":27776:27779   */\n      dup3\n        /* \"#utility.yul\":27772:27784   */\n      add\n        /* \"#utility.yul\":27765:27784   */\n      swap1\n      pop\n        /* \"#utility.yul\":27424:27790   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27796:28215   */\n    tag_427:\n        /* \"#utility.yul\":27962:27966   */\n      0x00\n        /* \"#utility.yul\":28000:28002   */\n      0x20\n        /* \"#utility.yul\":27989:27998   */\n      dup3\n        /* \"#utility.yul\":27985:28003   */\n      add\n        /* \"#utility.yul\":27977:28003   */\n      swap1\n      pop\n        /* \"#utility.yul\":28049:28058   */\n      dup2\n        /* \"#utility.yul\":28043:28047   */\n      dup2\n        /* \"#utility.yul\":28039:28059   */\n      sub\n        /* \"#utility.yul\":28035:28036   */\n      0x00\n        /* \"#utility.yul\":28024:28033   */\n      dup4\n        /* \"#utility.yul\":28020:28037   */\n      add\n        /* \"#utility.yul\":28013:28060   */\n      mstore\n        /* \"#utility.yul\":28077:28208   */\n      tag_800\n        /* \"#utility.yul\":28203:28207   */\n      dup2\n        /* \"#utility.yul\":28077:28208   */\n      tag_539\n      jump\t// in\n    tag_800:\n        /* \"#utility.yul\":28069:28208   */\n      swap1\n      pop\n        /* \"#utility.yul\":27796:28215   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28221:28412   */\n    tag_436:\n        /* \"#utility.yul\":28261:28264   */\n      0x00\n        /* \"#utility.yul\":28280:28300   */\n      tag_802\n        /* \"#utility.yul\":28298:28299   */\n      dup3\n        /* \"#utility.yul\":28280:28300   */\n      tag_486\n      jump\t// in\n    tag_802:\n        /* \"#utility.yul\":28275:28300   */\n      swap2\n      pop\n        /* \"#utility.yul\":28314:28334   */\n      tag_803\n        /* \"#utility.yul\":28332:28333   */\n      dup4\n        /* \"#utility.yul\":28314:28334   */\n      tag_486\n      jump\t// in\n    tag_803:\n        /* \"#utility.yul\":28309:28334   */\n      swap3\n      pop\n        /* \"#utility.yul\":28357:28358   */\n      dup3\n        /* \"#utility.yul\":28354:28355   */\n      dup3\n        /* \"#utility.yul\":28350:28359   */\n      add\n        /* \"#utility.yul\":28343:28359   */\n      swap1\n      pop\n        /* \"#utility.yul\":28378:28381   */\n      dup1\n        /* \"#utility.yul\":28375:28376   */\n      dup3\n        /* \"#utility.yul\":28372:28382   */\n      gt\n        /* \"#utility.yul\":28369:28405   */\n      iszero\n      tag_804\n      jumpi\n        /* \"#utility.yul\":28385:28403   */\n      tag_805\n      tag_517\n      jump\t// in\n    tag_805:\n        /* \"#utility.yul\":28369:28405   */\n    tag_804:\n        /* \"#utility.yul\":28221:28412   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28418:28612   */\n    tag_439:\n        /* \"#utility.yul\":28458:28462   */\n      0x00\n        /* \"#utility.yul\":28478:28498   */\n      tag_807\n        /* \"#utility.yul\":28496:28497   */\n      dup3\n        /* \"#utility.yul\":28478:28498   */\n      tag_486\n      jump\t// in\n    tag_807:\n        /* \"#utility.yul\":28473:28498   */\n      swap2\n      pop\n        /* \"#utility.yul\":28512:28532   */\n      tag_808\n        /* \"#utility.yul\":28530:28531   */\n      dup4\n        /* \"#utility.yul\":28512:28532   */\n      tag_486\n      jump\t// in\n    tag_808:\n        /* \"#utility.yul\":28507:28532   */\n      swap3\n      pop\n        /* \"#utility.yul\":28556:28557   */\n      dup3\n        /* \"#utility.yul\":28553:28554   */\n      dup3\n        /* \"#utility.yul\":28549:28558   */\n      sub\n        /* \"#utility.yul\":28541:28558   */\n      swap1\n      pop\n        /* \"#utility.yul\":28580:28581   */\n      dup2\n        /* \"#utility.yul\":28574:28578   */\n      dup2\n        /* \"#utility.yul\":28571:28582   */\n      gt\n        /* \"#utility.yul\":28568:28605   */\n      iszero\n      tag_809\n      jumpi\n        /* \"#utility.yul\":28585:28603   */\n      tag_810\n      tag_517\n      jump\t// in\n    tag_810:\n        /* \"#utility.yul\":28568:28605   */\n    tag_809:\n        /* \"#utility.yul\":28418:28612   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28618:28798   */\n    tag_540:\n        /* \"#utility.yul\":28666:28743   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28663:28664   */\n      0x00\n        /* \"#utility.yul\":28656:28744   */\n      mstore\n        /* \"#utility.yul\":28763:28767   */\n      0x41\n        /* \"#utility.yul\":28760:28761   */\n      0x04\n        /* \"#utility.yul\":28753:28768   */\n      mstore\n        /* \"#utility.yul\":28787:28791   */\n      0x24\n        /* \"#utility.yul\":28784:28785   */\n      0x00\n        /* \"#utility.yul\":28777:28792   */\n      revert\n        /* \"#utility.yul\":28804:28945   */\n    tag_541:\n        /* \"#utility.yul\":28853:28857   */\n      0x00\n        /* \"#utility.yul\":28876:28879   */\n      dup2\n        /* \"#utility.yul\":28868:28879   */\n      swap1\n      pop\n        /* \"#utility.yul\":28899:28902   */\n      dup2\n        /* \"#utility.yul\":28896:28897   */\n      0x00\n        /* \"#utility.yul\":28889:28903   */\n      mstore\n        /* \"#utility.yul\":28933:28937   */\n      0x20\n        /* \"#utility.yul\":28930:28931   */\n      0x00\n        /* \"#utility.yul\":28920:28938   */\n      keccak256\n        /* \"#utility.yul\":28912:28938   */\n      swap1\n      pop\n        /* \"#utility.yul\":28804:28945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28951:29044   */\n    tag_542:\n        /* \"#utility.yul\":28988:28994   */\n      0x00\n        /* \"#utility.yul\":29035:29037   */\n      0x20\n        /* \"#utility.yul\":29030:29032   */\n      0x1f\n        /* \"#utility.yul\":29023:29028   */\n      dup4\n        /* \"#utility.yul\":29019:29033   */\n      add\n        /* \"#utility.yul\":29015:29038   */\n      div\n        /* \"#utility.yul\":29005:29038   */\n      swap1\n      pop\n        /* \"#utility.yul\":28951:29044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29050:29157   */\n    tag_543:\n        /* \"#utility.yul\":29094:29102   */\n      0x00\n        /* \"#utility.yul\":29144:29149   */\n      dup3\n        /* \"#utility.yul\":29138:29142   */\n      dup3\n        /* \"#utility.yul\":29134:29150   */\n      shl\n        /* \"#utility.yul\":29113:29150   */\n      swap1\n      pop\n        /* \"#utility.yul\":29050:29157   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29163:29556   */\n    tag_544:\n        /* \"#utility.yul\":29232:29238   */\n      0x00\n        /* \"#utility.yul\":29282:29283   */\n      0x08\n        /* \"#utility.yul\":29270:29280   */\n      dup4\n        /* \"#utility.yul\":29266:29284   */\n      mul\n        /* \"#utility.yul\":29305:29402   */\n      tag_816\n        /* \"#utility.yul\":29335:29401   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":29324:29333   */\n      dup3\n        /* \"#utility.yul\":29305:29402   */\n      tag_543\n      jump\t// in\n    tag_816:\n        /* \"#utility.yul\":29423:29462   */\n      tag_817\n        /* \"#utility.yul\":29453:29461   */\n      dup7\n        /* \"#utility.yul\":29442:29451   */\n      dup4\n        /* \"#utility.yul\":29423:29462   */\n      tag_543\n      jump\t// in\n    tag_817:\n        /* \"#utility.yul\":29411:29462   */\n      swap6\n      pop\n        /* \"#utility.yul\":29495:29499   */\n      dup1\n        /* \"#utility.yul\":29491:29500   */\n      not\n        /* \"#utility.yul\":29484:29489   */\n      dup5\n        /* \"#utility.yul\":29480:29501   */\n      and\n        /* \"#utility.yul\":29471:29501   */\n      swap4\n      pop\n        /* \"#utility.yul\":29544:29548   */\n      dup1\n        /* \"#utility.yul\":29534:29542   */\n      dup7\n        /* \"#utility.yul\":29530:29549   */\n      and\n        /* \"#utility.yul\":29523:29528   */\n      dup5\n        /* \"#utility.yul\":29520:29550   */\n      or\n        /* \"#utility.yul\":29510:29550   */\n      swap3\n      pop\n        /* \"#utility.yul\":29239:29556   */\n      pop\n      pop\n        /* \"#utility.yul\":29163:29556   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29562:29704   */\n    tag_545:\n        /* \"#utility.yul\":29612:29621   */\n      0x00\n        /* \"#utility.yul\":29645:29698   */\n      tag_819\n        /* \"#utility.yul\":29663:29697   */\n      tag_820\n        /* \"#utility.yul\":29672:29696   */\n      tag_821\n        /* \"#utility.yul\":29690:29695   */\n      dup5\n        /* \"#utility.yul\":29672:29696   */\n      tag_486\n      jump\t// in\n    tag_821:\n        /* \"#utility.yul\":29663:29697   */\n      tag_492\n      jump\t// in\n    tag_820:\n        /* \"#utility.yul\":29645:29698   */\n      tag_486\n      jump\t// in\n    tag_819:\n        /* \"#utility.yul\":29632:29698   */\n      swap1\n      pop\n        /* \"#utility.yul\":29562:29704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29710:29785   */\n    tag_546:\n        /* \"#utility.yul\":29753:29756   */\n      0x00\n        /* \"#utility.yul\":29774:29779   */\n      dup2\n        /* \"#utility.yul\":29767:29779   */\n      swap1\n      pop\n        /* \"#utility.yul\":29710:29785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29791:30060   */\n    tag_547:\n        /* \"#utility.yul\":29901:29940   */\n      tag_824\n        /* \"#utility.yul\":29932:29939   */\n      dup4\n        /* \"#utility.yul\":29901:29940   */\n      tag_545\n      jump\t// in\n    tag_824:\n        /* \"#utility.yul\":29962:30053   */\n      tag_825\n        /* \"#utility.yul\":30011:30052   */\n      tag_826\n        /* \"#utility.yul\":30035:30051   */\n      dup3\n        /* \"#utility.yul\":30011:30052   */\n      tag_546\n      jump\t// in\n    tag_826:\n        /* \"#utility.yul\":30003:30009   */\n      dup5\n        /* \"#utility.yul\":29996:30000   */\n      dup5\n        /* \"#utility.yul\":29990:30001   */\n      sload\n        /* \"#utility.yul\":29962:30053   */\n      tag_544\n      jump\t// in\n    tag_825:\n        /* \"#utility.yul\":29956:29960   */\n      dup3\n        /* \"#utility.yul\":29949:30054   */\n      sstore\n        /* \"#utility.yul\":29867:30060   */\n      pop\n        /* \"#utility.yul\":29791:30060   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30066:30139   */\n    tag_548:\n        /* \"#utility.yul\":30111:30114   */\n      0x00\n        /* \"#utility.yul\":30066:30139   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":30145:30334   */\n    tag_549:\n        /* \"#utility.yul\":30222:30254   */\n      tag_829\n      tag_548\n      jump\t// in\n    tag_829:\n        /* \"#utility.yul\":30263:30328   */\n      tag_830\n        /* \"#utility.yul\":30321:30327   */\n      dup2\n        /* \"#utility.yul\":30313:30319   */\n      dup5\n        /* \"#utility.yul\":30307:30311   */\n      dup5\n        /* \"#utility.yul\":30263:30328   */\n      tag_547\n      jump\t// in\n    tag_830:\n        /* \"#utility.yul\":30198:30334   */\n      pop\n        /* \"#utility.yul\":30145:30334   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30340:30526   */\n    tag_550:\n        /* \"#utility.yul\":30400:30520   */\n    tag_832:\n        /* \"#utility.yul\":30417:30420   */\n      dup2\n        /* \"#utility.yul\":30410:30415   */\n      dup2\n        /* \"#utility.yul\":30407:30421   */\n      lt\n        /* \"#utility.yul\":30400:30520   */\n      iszero\n      tag_834\n      jumpi\n        /* \"#utility.yul\":30471:30510   */\n      tag_835\n        /* \"#utility.yul\":30508:30509   */\n      0x00\n        /* \"#utility.yul\":30501:30506   */\n      dup3\n        /* \"#utility.yul\":30471:30510   */\n      tag_549\n      jump\t// in\n    tag_835:\n        /* \"#utility.yul\":30444:30445   */\n      0x01\n        /* \"#utility.yul\":30437:30442   */\n      dup2\n        /* \"#utility.yul\":30433:30446   */\n      add\n        /* \"#utility.yul\":30424:30446   */\n      swap1\n      pop\n        /* \"#utility.yul\":30400:30520   */\n      jump(tag_832)\n    tag_834:\n        /* \"#utility.yul\":30340:30526   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30532:31075   */\n    tag_551:\n        /* \"#utility.yul\":30633:30635   */\n      0x1f\n        /* \"#utility.yul\":30628:30631   */\n      dup3\n        /* \"#utility.yul\":30625:30636   */\n      gt\n        /* \"#utility.yul\":30622:31068   */\n      iszero\n      tag_837\n      jumpi\n        /* \"#utility.yul\":30667:30705   */\n      tag_838\n        /* \"#utility.yul\":30699:30704   */\n      dup2\n        /* \"#utility.yul\":30667:30705   */\n      tag_541\n      jump\t// in\n    tag_838:\n        /* \"#utility.yul\":30751:30780   */\n      tag_839\n        /* \"#utility.yul\":30769:30779   */\n      dup5\n        /* \"#utility.yul\":30751:30780   */\n      tag_542\n      jump\t// in\n    tag_839:\n        /* \"#utility.yul\":30741:30749   */\n      dup2\n        /* \"#utility.yul\":30737:30781   */\n      add\n        /* \"#utility.yul\":30934:30936   */\n      0x20\n        /* \"#utility.yul\":30922:30932   */\n      dup6\n        /* \"#utility.yul\":30919:30937   */\n      lt\n        /* \"#utility.yul\":30916:30965   */\n      iszero\n      tag_840\n      jumpi\n        /* \"#utility.yul\":30955:30963   */\n      dup2\n        /* \"#utility.yul\":30940:30963   */\n      swap1\n      pop\n        /* \"#utility.yul\":30916:30965   */\n    tag_840:\n        /* \"#utility.yul\":30978:31058   */\n      tag_841\n        /* \"#utility.yul\":31034:31056   */\n      tag_842\n        /* \"#utility.yul\":31052:31055   */\n      dup6\n        /* \"#utility.yul\":31034:31056   */\n      tag_542\n      jump\t// in\n    tag_842:\n        /* \"#utility.yul\":31024:31032   */\n      dup4\n        /* \"#utility.yul\":31020:31057   */\n      add\n        /* \"#utility.yul\":31007:31018   */\n      dup3\n        /* \"#utility.yul\":30978:31058   */\n      tag_550\n      jump\t// in\n    tag_841:\n        /* \"#utility.yul\":30637:31068   */\n      pop\n      pop\n        /* \"#utility.yul\":30622:31068   */\n    tag_837:\n        /* \"#utility.yul\":30532:31075   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31081:31198   */\n    tag_552:\n        /* \"#utility.yul\":31135:31143   */\n      0x00\n        /* \"#utility.yul\":31185:31190   */\n      dup3\n        /* \"#utility.yul\":31179:31183   */\n      dup3\n        /* \"#utility.yul\":31175:31191   */\n      shr\n        /* \"#utility.yul\":31154:31191   */\n      swap1\n      pop\n        /* \"#utility.yul\":31081:31198   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31204:31373   */\n    tag_553:\n        /* \"#utility.yul\":31248:31254   */\n      0x00\n        /* \"#utility.yul\":31281:31332   */\n      tag_845\n        /* \"#utility.yul\":31329:31330   */\n      0x00\n        /* \"#utility.yul\":31325:31331   */\n      not\n        /* \"#utility.yul\":31317:31322   */\n      dup5\n        /* \"#utility.yul\":31314:31315   */\n      0x08\n        /* \"#utility.yul\":31310:31323   */\n      mul\n        /* \"#utility.yul\":31281:31332   */\n      tag_552\n      jump\t// in\n    tag_845:\n        /* \"#utility.yul\":31277:31333   */\n      not\n        /* \"#utility.yul\":31362:31366   */\n      dup1\n        /* \"#utility.yul\":31356:31360   */\n      dup4\n        /* \"#utility.yul\":31352:31367   */\n      and\n        /* \"#utility.yul\":31342:31367   */\n      swap2\n      pop\n        /* \"#utility.yul\":31255:31373   */\n      pop\n        /* \"#utility.yul\":31204:31373   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31378:31673   */\n    tag_554:\n        /* \"#utility.yul\":31454:31458   */\n      0x00\n        /* \"#utility.yul\":31600:31629   */\n      tag_847\n        /* \"#utility.yul\":31625:31628   */\n      dup4\n        /* \"#utility.yul\":31619:31623   */\n      dup4\n        /* \"#utility.yul\":31600:31629   */\n      tag_553\n      jump\t// in\n    tag_847:\n        /* \"#utility.yul\":31592:31629   */\n      swap2\n      pop\n        /* \"#utility.yul\":31662:31665   */\n      dup3\n        /* \"#utility.yul\":31659:31660   */\n      0x02\n        /* \"#utility.yul\":31655:31666   */\n      mul\n        /* \"#utility.yul\":31649:31653   */\n      dup3\n        /* \"#utility.yul\":31646:31667   */\n      or\n        /* \"#utility.yul\":31638:31667   */\n      swap1\n      pop\n        /* \"#utility.yul\":31378:31673   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31678:33073   */\n    tag_456:\n        /* \"#utility.yul\":31795:31832   */\n      tag_849\n        /* \"#utility.yul\":31828:31831   */\n      dup3\n        /* \"#utility.yul\":31795:31832   */\n      tag_474\n      jump\t// in\n    tag_849:\n        /* \"#utility.yul\":31897:31915   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":31889:31895   */\n      dup2\n        /* \"#utility.yul\":31886:31916   */\n      gt\n        /* \"#utility.yul\":31883:31939   */\n      iszero\n      tag_850\n      jumpi\n        /* \"#utility.yul\":31919:31937   */\n      tag_851\n      tag_540\n      jump\t// in\n    tag_851:\n        /* \"#utility.yul\":31883:31939   */\n    tag_850:\n        /* \"#utility.yul\":31963:32001   */\n      tag_852\n        /* \"#utility.yul\":31995:31999   */\n      dup3\n        /* \"#utility.yul\":31989:32000   */\n      sload\n        /* \"#utility.yul\":31963:32001   */\n      tag_169\n      jump\t// in\n    tag_852:\n        /* \"#utility.yul\":32048:32115   */\n      tag_853\n        /* \"#utility.yul\":32108:32114   */\n      dup3\n        /* \"#utility.yul\":32100:32106   */\n      dup3\n        /* \"#utility.yul\":32094:32098   */\n      dup6\n        /* \"#utility.yul\":32048:32115   */\n      tag_551\n      jump\t// in\n    tag_853:\n        /* \"#utility.yul\":32142:32143   */\n      0x00\n        /* \"#utility.yul\":32166:32170   */\n      0x20\n        /* \"#utility.yul\":32153:32170   */\n      swap1\n      pop\n        /* \"#utility.yul\":32198:32200   */\n      0x1f\n        /* \"#utility.yul\":32190:32196   */\n      dup4\n        /* \"#utility.yul\":32187:32201   */\n      gt\n        /* \"#utility.yul\":32215:32216   */\n      0x01\n        /* \"#utility.yul\":32210:32828   */\n      dup2\n      eq\n      tag_855\n      jumpi\n        /* \"#utility.yul\":32872:32873   */\n      0x00\n        /* \"#utility.yul\":32889:32895   */\n      dup5\n        /* \"#utility.yul\":32886:32963   */\n      iszero\n      tag_856\n      jumpi\n        /* \"#utility.yul\":32938:32947   */\n      dup3\n        /* \"#utility.yul\":32933:32936   */\n      dup8\n        /* \"#utility.yul\":32929:32948   */\n      add\n        /* \"#utility.yul\":32923:32949   */\n      mload\n        /* \"#utility.yul\":32914:32949   */\n      swap1\n      pop\n        /* \"#utility.yul\":32886:32963   */\n    tag_856:\n        /* \"#utility.yul\":32989:33056   */\n      tag_857\n        /* \"#utility.yul\":33049:33055   */\n      dup6\n        /* \"#utility.yul\":33042:33047   */\n      dup3\n        /* \"#utility.yul\":32989:33056   */\n      tag_554\n      jump\t// in\n    tag_857:\n        /* \"#utility.yul\":32983:32987   */\n      dup7\n        /* \"#utility.yul\":32976:33057   */\n      sstore\n        /* \"#utility.yul\":32845:33067   */\n      pop\n        /* \"#utility.yul\":32180:33067   */\n      jump(tag_854)\n        /* \"#utility.yul\":32210:32828   */\n    tag_855:\n        /* \"#utility.yul\":32262:32266   */\n      0x1f\n        /* \"#utility.yul\":32258:32267   */\n      not\n        /* \"#utility.yul\":32250:32256   */\n      dup5\n        /* \"#utility.yul\":32246:32268   */\n      and\n        /* \"#utility.yul\":32296:32333   */\n      tag_858\n        /* \"#utility.yul\":32328:32332   */\n      dup7\n        /* \"#utility.yul\":32296:32333   */\n      tag_541\n      jump\t// in\n    tag_858:\n        /* \"#utility.yul\":32355:32356   */\n      0x00\n        /* \"#utility.yul\":32369:32577   */\n    tag_859:\n        /* \"#utility.yul\":32383:32390   */\n      dup3\n        /* \"#utility.yul\":32380:32381   */\n      dup2\n        /* \"#utility.yul\":32377:32391   */\n      lt\n        /* \"#utility.yul\":32369:32577   */\n      iszero\n      tag_861\n      jumpi\n        /* \"#utility.yul\":32462:32471   */\n      dup5\n        /* \"#utility.yul\":32457:32460   */\n      dup10\n        /* \"#utility.yul\":32453:32472   */\n      add\n        /* \"#utility.yul\":32447:32473   */\n      mload\n        /* \"#utility.yul\":32439:32445   */\n      dup3\n        /* \"#utility.yul\":32432:32474   */\n      sstore\n        /* \"#utility.yul\":32513:32514   */\n      0x01\n        /* \"#utility.yul\":32505:32511   */\n      dup3\n        /* \"#utility.yul\":32501:32515   */\n      add\n        /* \"#utility.yul\":32491:32515   */\n      swap2\n      pop\n        /* \"#utility.yul\":32560:32562   */\n      0x20\n        /* \"#utility.yul\":32549:32558   */\n      dup6\n        /* \"#utility.yul\":32545:32563   */\n      add\n        /* \"#utility.yul\":32532:32563   */\n      swap5\n      pop\n        /* \"#utility.yul\":32406:32410   */\n      0x20\n        /* \"#utility.yul\":32403:32404   */\n      dup2\n        /* \"#utility.yul\":32399:32411   */\n      add\n        /* \"#utility.yul\":32394:32411   */\n      swap1\n      pop\n        /* \"#utility.yul\":32369:32577   */\n      jump(tag_859)\n    tag_861:\n        /* \"#utility.yul\":32605:32611   */\n      dup7\n        /* \"#utility.yul\":32596:32603   */\n      dup4\n        /* \"#utility.yul\":32593:32612   */\n      lt\n        /* \"#utility.yul\":32590:32769   */\n      iszero\n      tag_862\n      jumpi\n        /* \"#utility.yul\":32663:32672   */\n      dup5\n        /* \"#utility.yul\":32658:32661   */\n      dup10\n        /* \"#utility.yul\":32654:32673   */\n      add\n        /* \"#utility.yul\":32648:32674   */\n      mload\n        /* \"#utility.yul\":32706:32754   */\n      tag_863\n        /* \"#utility.yul\":32748:32752   */\n      0x1f\n        /* \"#utility.yul\":32740:32746   */\n      dup10\n        /* \"#utility.yul\":32736:32753   */\n      and\n        /* \"#utility.yul\":32725:32734   */\n      dup3\n        /* \"#utility.yul\":32706:32754   */\n      tag_553\n      jump\t// in\n    tag_863:\n        /* \"#utility.yul\":32698:32704   */\n      dup4\n        /* \"#utility.yul\":32691:32755   */\n      sstore\n        /* \"#utility.yul\":32613:32769   */\n      pop\n        /* \"#utility.yul\":32590:32769   */\n    tag_862:\n        /* \"#utility.yul\":32815:32816   */\n      0x01\n        /* \"#utility.yul\":32811:32812   */\n      0x02\n        /* \"#utility.yul\":32803:32809   */\n      dup9\n        /* \"#utility.yul\":32799:32813   */\n      mul\n        /* \"#utility.yul\":32795:32817   */\n      add\n        /* \"#utility.yul\":32789:32793   */\n      dup9\n        /* \"#utility.yul\":32782:32818   */\n      sstore\n        /* \"#utility.yul\":32217:32828   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":32180:33067   */\n    tag_854:\n      pop\n        /* \"#utility.yul\":31770:33073   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":31678:33073   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33079:33259   */\n    tag_555:\n        /* \"#utility.yul\":33127:33204   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":33124:33125   */\n      0x00\n        /* \"#utility.yul\":33117:33205   */\n      mstore\n        /* \"#utility.yul\":33224:33228   */\n      0x12\n        /* \"#utility.yul\":33221:33222   */\n      0x04\n        /* \"#utility.yul\":33214:33229   */\n      mstore\n        /* \"#utility.yul\":33248:33252   */\n      0x24\n        /* \"#utility.yul\":33245:33246   */\n      0x00\n        /* \"#utility.yul\":33238:33253   */\n      revert\n        /* \"#utility.yul\":33265:33450   */\n    tag_471:\n        /* \"#utility.yul\":33305:33306   */\n      0x00\n        /* \"#utility.yul\":33322:33342   */\n      tag_866\n        /* \"#utility.yul\":33340:33341   */\n      dup3\n        /* \"#utility.yul\":33322:33342   */\n      tag_486\n      jump\t// in\n    tag_866:\n        /* \"#utility.yul\":33317:33342   */\n      swap2\n      pop\n        /* \"#utility.yul\":33356:33376   */\n      tag_867\n        /* \"#utility.yul\":33374:33375   */\n      dup4\n        /* \"#utility.yul\":33356:33376   */\n      tag_486\n      jump\t// in\n    tag_867:\n        /* \"#utility.yul\":33351:33376   */\n      swap3\n      pop\n        /* \"#utility.yul\":33395:33396   */\n      dup3\n        /* \"#utility.yul\":33385:33420   */\n      tag_868\n      jumpi\n        /* \"#utility.yul\":33400:33418   */\n      tag_869\n      tag_555\n      jump\t// in\n    tag_869:\n        /* \"#utility.yul\":33385:33420   */\n    tag_868:\n        /* \"#utility.yul\":33442:33443   */\n      dup3\n        /* \"#utility.yul\":33439:33440   */\n      dup3\n        /* \"#utility.yul\":33435:33444   */\n      div\n        /* \"#utility.yul\":33430:33444   */\n      swap1\n      pop\n        /* \"#utility.yul\":33265:33450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a80e2191841344856faefab25e64a0e91ed1218c25f5d7b50a76234abf059cc164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1439": {
									"entryPoint": null,
									"id": 1439,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_416": {
									"entryPoint": 39,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 299,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:456:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "51:57:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "61:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "83:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:30:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "33:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "43:7:13",
														"type": ""
													}
												],
												"src": "7:101:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:52:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "194:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "216:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nodeType": "YulIdentifier",
																			"src": "199:16:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "199:23:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:36:13"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "165:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "172:3:13",
														"type": ""
													}
												],
												"src": "114:115:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "331:122:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "341:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "353:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "364:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "349:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "349:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "341:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "419:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "432:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "443:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "428:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "428:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "377:41:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "377:69:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "377:69:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "303:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "315:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "326:4:13",
														"type": ""
													}
												],
												"src": "235:218:13"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50620000216200002760201b60201c565b62000191565b5f620000386200012b60201b60201c565b9050805f0160089054906101000a900460ff161562000083576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff8016815f015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1614620001285767ffffffffffffffff815f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff6040516200011f919062000176565b60405180910390a15b50565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f67ffffffffffffffff82169050919050565b620001708162000152565b82525050565b5f6020820190506200018b5f83018462000165565b92915050565b613a87806200019f5f395ff3fe608060405234801561000f575f80fd5b506004361061020f575f3560e01c806375f0a87411610123578063be20b15d116100ab578063dd62ed3e1161007a578063dd62ed3e1461059f578063e7d88de5146105cf578063f2fde38b146105ed578063fe575a8714610609578063fedcb861146106395761020f565b8063be20b15d14610529578063c04a541414610545578063c816841b14610563578063c8c8ebe4146105815761020f565b806385fbae56116100f257806385fbae561461048557806388696f2f146104a15780638da5cb5b146104bd57806395d89b41146104db578063a9059cbb146104f95761020f565b806375f0a8741461042357806379cc6790146104415780638129fc1c1461045d5780638206cf5a146104675761020f565b806342966c68116101a65780635d098b38116101755780635d098b38146103955780636ddfa4b4146103b157806370a08231146103cd578063715018a6146103fd57806372ac2486146104075761020f565b806342966c681461032557806344337ea1146103415780634fe47f701461035d578063537df3b6146103795761020f565b806318160ddd116101e257806318160ddd1461029d57806323b872dd146102bb578063313ce567146102eb57806340c10f19146103095761020f565b806306fdde0314610213578063095ea7b31461023157806311e91b84146102615780631694505e1461027f575b5f80fd5b61021b610657565b6040516102289190612904565b60405180910390f35b61024b600480360381019061024691906129b5565b6106f5565b6040516102589190612a0d565b60405180910390f35b610269610717565b6040516102769190612a35565b60405180910390f35b61028761071d565b6040516102949190612aa9565b60405180910390f35b6102a5610742565b6040516102b29190612a35565b60405180910390f35b6102d560048036038101906102d09190612ac2565b610759565b6040516102e29190612a0d565b60405180910390f35b6102f3610787565b6040516103009190612b2d565b60405180910390f35b610323600480360381019061031e91906129b5565b61078f565b005b61033f600480360381019061033a9190612b46565b6107a5565b005b61035b60048036038101906103569190612b71565b6107b9565b005b61037760048036038101906103729190612b46565b610918565b005b610393600480360381019061038e9190612b71565b6109a5565b005b6103af60048036038101906103aa9190612b71565b610b02565b005b6103cb60048036038101906103c69190612b46565b610c10565b005b6103e760048036038101906103e29190612b71565b610ca0565b6040516103f49190612a35565b60405180910390f35b610405610cf3565b005b610421600480360381019061041c9190612b71565b610d06565b005b61042b610e17565b6040516104389190612bab565b60405180910390f35b61045b600480360381019061045691906129b5565b610e3a565b005b610465610e5a565b005b61046f6114b4565b60405161047c9190612a35565b60405180910390f35b61049f600480360381019061049a9190612b46565b6114ba565b005b6104bb60048036038101906104b69190612b46565b61154a565b005b6104c56115da565b6040516104d29190612bab565b60405180910390f35b6104e361160f565b6040516104f09190612904565b60405180910390f35b610513600480360381019061050e91906129b5565b6116ad565b6040516105209190612a0d565b60405180910390f35b610543600480360381019061053e9190612b71565b6116cf565b005b61054d6117e0565b60405161055a9190612bab565b60405180910390f35b61056b611805565b6040516105789190612bab565b60405180910390f35b61058961182a565b6040516105969190612a35565b60405180910390f35b6105b960048036038101906105b49190612bc4565b611830565b6040516105c69190612a35565b60405180910390f35b6105d76118c0565b6040516105e49190612a35565b60405180910390f35b61060760048036038101906106029190612b71565b6118c6565b005b610623600480360381019061061e9190612b71565b61194a565b6040516106309190612a0d565b60405180910390f35b61064161199c565b60405161064e9190612bab565b60405180910390f35b60605f6106626119c1565b905080600301805461067390612c2f565b80601f016020809104026020016040519081016040528092919081815260200182805461069f90612c2f565b80156106ea5780601f106106c1576101008083540402835291602001916106ea565b820191905f5260205f20905b8154815290600101906020018083116106cd57829003601f168201915b505050505091505090565b5f806106ff6119e8565b905061070c8185856119ef565b600191505092915050565b60045481565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8061074c6119c1565b9050806002015491505090565b5f806107636119e8565b9050610770858285611a01565b61077b858585611a93565b60019150509392505050565b5f6012905090565b610797611b83565b6107a18282611c0a565b5050565b6107b66107b06119e8565b82611c89565b50565b6107c1611b83565b60085f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084290612ca9565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661086a6119e8565b73ffffffffffffffffffffffffffffffffffffffff16036108c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b790612d11565b60405180910390fd5b600160085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610920611b83565b5f8111610962576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095990612d79565b60405180910390fd5b806006819055507f44d540c6079791f805bc9b5d5a643dbf1f545ec260212b2b2478ef9d9ed0768e60065460405161099a9190612a35565b60405180910390a150565b6109ad611b83565b60085f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610a36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2d90612de1565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610a556119e8565b73ffffffffffffffffffffffffffffffffffffffff1603610aab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa290612e6f565b60405180910390fd5b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610b0a611b83565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6f90612efd565b60405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2026f0b479f097ea9d4c74dac26e5271ba4d59931603970da5458ea8aa3dcf375f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610c059190612bab565b60405180910390a150565b610c18611b83565b612710811115610c5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5490612f8b565b60405180910390fd5b806005819055507f28ad5f14a54b644d089d89d6140175fbbf7199a6fa1275e827904c157f491546600554604051610c959190612a35565b60405180910390a150565b5f80610caa6119c1565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b610cfb611b83565b610d045f611d08565b565b610d0e611b83565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7390613019565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7404946ba3969d72cc11e8a0c21a8ab3b8dddeb41e78f235dfad9ffcda3f617c60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610e0c9190612bab565b60405180910390a150565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610e4c82610e466119e8565b83611a01565b610e568282611c89565b5050565b5f610e63611dd9565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610eab5750825b90505f60018367ffffffffffffffff16148015610ede57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610eec575080155b15610f23576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610f70576001855f0160086101000a81548160ff0219169083151502179055505b610f7933611e00565b610f81611e14565b610ff56040518060400160405280600981526020017f54726162616a6f323400000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f5432340000000000000000000000000000000000000000000000000000000000815250611e1e565b7307e43d33ce3ebe06a0bfaffc04aca37c4acbd3a55f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550735ed81f9bc2402a2bbd78e381c9aa1edd99b90a5560015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073d436c10d791c7a9558950a251a049871811bb07060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506110f8610787565b600a6111049190613193565b6305f5e10061111391906131dd565b600781905550600a60038190555060146004819055506096600581905550611139610787565b60ff16600a611148919061321e565b6301312d0061115791906131dd565b60068190555061116933600754611c0a565b5f73d99d1c33f9fc3444f8101754abc46c52416550d1905080600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561120a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061122e919061327c565b73ffffffffffffffffffffffffffffffffffffffff1663c9c65396308373ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611293573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112b7919061327c565b6040518363ffffffff1660e01b81526004016112d49291906132a7565b6020604051808303815f875af11580156112f0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611314919061327c565b600b5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061139f33600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6119ef565b6113eb30600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6119ef565b3373ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60075460405161144a9190612a35565b60405180910390a35083156114ad575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516114a4919061331a565b60405180910390a15b5050505050565b60035481565b6114c2611b83565b612710811115611507576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114fe90612f8b565b60405180910390fd5b806004819055507fd3f51aabcf3bcbd05f9260c8ccec9728da097c538dd797a90f527e255ae3083860045460405161153f9190612a35565b60405180910390a150565b611552611b83565b612710811115611597576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158e90612f8b565b60405180910390fd5b806003819055507f153e5299255e24f1fd2ceee40599bfdc41290fd92340ff6173fc24efd6c299a66003546040516115cf9190612a35565b60405180910390a150565b5f806115e4611e34565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f61161a6119c1565b905080600401805461162b90612c2f565b80601f016020809104026020016040519081016040528092919081815260200182805461165790612c2f565b80156116a25780601f10611679576101008083540402835291602001916116a2565b820191905f5260205f20905b81548152906001019060200180831161168557829003601f168201915b505050505091505090565b5f806116b76119e8565b90506116c4818585611a93565b600191505092915050565b6116d7611b83565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611745576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173c906133a3565b60405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5d4a0c152f269a59530b6c3a84f5a90ac341c463c9e6d5d0d04cf75596776e4f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516117d59190612bab565b60405180910390a150565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b5f8061183a6119c1565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b60055481565b6118ce611b83565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361193e575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016119359190612bab565b60405180910390fd5b61194781611d08565b50565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b6119fc8383836001611e5b565b505050565b5f611a0c8484611830565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611a8d5781811015611a7e578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611a75939291906133c1565b60405180910390fd5b611a8c84848484035f611e5b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b03575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611afa9190612bab565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b73575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611b6a9190612bab565b60405180910390fd5b611b7e838383612038565b505050565b611b8b6119e8565b73ffffffffffffffffffffffffffffffffffffffff16611ba96115da565b73ffffffffffffffffffffffffffffffffffffffff1614611c0857611bcc6119e8565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611bff9190612bab565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c7a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611c719190612bab565b60405180910390fd5b611c855f8383612038565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611cf9575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611cf09190612bab565b60405180910390fd5b611d04825f83612038565b5050565b5f611d11611e34565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611e0861250b565b611e118161254b565b50565b611e1c61250b565b565b611e2661250b565b611e3082826125cf565b5050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f611e646119c1565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611ed6575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611ecd9190612bab565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611f46575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611f3d9190612bab565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115612031578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516120289190612a35565b60405180910390a35b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036120a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161209d90613466565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612114576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161210b906134f4565b60405180910390fd5b5f8111612156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161214d90613582565b60405180910390fd5b60085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156121e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121d7906135ea565b60405180910390fd5b60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561226a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161226190613652565b60405180910390fd5b6122726115da565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806122dd57506122ae6115da565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061231357503073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b156123285761232383838361260b565b612506565b5f600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161490505f600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161490505f805f84806123da5750835b156124d157600654861115612424576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161241b906136e0565b60405180910390fd5b6124308660035461283a565b925061243e8660045461283a565b915061244c8660055461283a565b9050612478885f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff168561260b565b6124a48860015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168461260b565b6124d08860025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361260b565b5b8082846124de91906136fe565b6124e891906136fe565b866124f39190613731565b955061250088888861260b565b50505050505b505050565b61251361285c565b612549576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61255361250b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036125c3575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016125ba9190612bab565b60405180910390fd5b6125cc81611d08565b50565b6125d761250b565b5f6125e06119c1565b9050828160030190816125f39190613925565b50818160040190816126059190613925565b50505050565b5f6126146119c1565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036126685781816002015f82825461265c91906136fe565b9250508190555061273a565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050828110156126f3578481846040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016126ea939291906133c1565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036127835781816002015f82825403925050819055506127cf565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161282c9190612a35565b60405180910390a350505050565b5f612710828461284a91906131dd565b6128549190613a21565b905092915050565b5f612865611dd9565b5f0160089054906101000a900460ff16905090565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156128b1578082015181840152602081019050612896565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6128d68261287a565b6128e08185612884565b93506128f0818560208601612894565b6128f9816128bc565b840191505092915050565b5f6020820190508181035f83015261291c81846128cc565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61295182612928565b9050919050565b61296181612947565b811461296b575f80fd5b50565b5f8135905061297c81612958565b92915050565b5f819050919050565b61299481612982565b811461299e575f80fd5b50565b5f813590506129af8161298b565b92915050565b5f80604083850312156129cb576129ca612924565b5b5f6129d88582860161296e565b92505060206129e9858286016129a1565b9150509250929050565b5f8115159050919050565b612a07816129f3565b82525050565b5f602082019050612a205f8301846129fe565b92915050565b612a2f81612982565b82525050565b5f602082019050612a485f830184612a26565b92915050565b5f819050919050565b5f612a71612a6c612a6784612928565b612a4e565b612928565b9050919050565b5f612a8282612a57565b9050919050565b5f612a9382612a78565b9050919050565b612aa381612a89565b82525050565b5f602082019050612abc5f830184612a9a565b92915050565b5f805f60608486031215612ad957612ad8612924565b5b5f612ae68682870161296e565b9350506020612af78682870161296e565b9250506040612b08868287016129a1565b9150509250925092565b5f60ff82169050919050565b612b2781612b12565b82525050565b5f602082019050612b405f830184612b1e565b92915050565b5f60208284031215612b5b57612b5a612924565b5b5f612b68848285016129a1565b91505092915050565b5f60208284031215612b8657612b85612924565b5b5f612b938482850161296e565b91505092915050565b612ba581612947565b82525050565b5f602082019050612bbe5f830184612b9c565b92915050565b5f8060408385031215612bda57612bd9612924565b5b5f612be78582860161296e565b9250506020612bf88582860161296e565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612c4657607f821691505b602082108103612c5957612c58612c02565b5b50919050565b7f4163636f756e7420697320616c726561647920626c61636b6c697374656400005f82015250565b5f612c93601e83612884565b9150612c9e82612c5f565b602082019050919050565b5f6020820190508181035f830152612cc081612c87565b9050919050565b7f43616e6e6f7420626c61636b6c6973742073656c6600000000000000000000005f82015250565b5f612cfb601583612884565b9150612d0682612cc7565b602082019050919050565b5f6020820190508181035f830152612d2881612cef565b9050919050565b7f616d6f756e742073686f756c6420626520677265617465207468616e203000005f82015250565b5f612d63601e83612884565b9150612d6e82612d2f565b602082019050919050565b5f6020820190508181035f830152612d9081612d57565b9050919050565b7f4163636f756e74206973206e6f7420626c61636b6c69737465640000000000005f82015250565b5f612dcb601a83612884565b9150612dd682612d97565b602082019050919050565b5f6020820190508181035f830152612df881612dbf565b9050919050565b7f43616e6e6f742072656d6f76652073656c662066726f6d20626c61636b6c69735f8201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b5f612e59602183612884565b9150612e6482612dff565b604082019050919050565b5f6020820190508181035f830152612e8681612e4d565b9050919050565b7f4d61726b6574696e672077616c6c65742063616e6e6f74206265207a65726f205f8201527f6164647265737300000000000000000000000000000000000000000000000000602082015250565b5f612ee7602783612884565b9150612ef282612e8d565b604082019050919050565b5f6020820190508181035f830152612f1481612edb565b9050919050565b7f5461782070657263656e746167652063616e6e6f7420657863656564203130305f8201527f2500000000000000000000000000000000000000000000000000000000000000602082015250565b5f612f75602183612884565b9150612f8082612f1b565b604082019050919050565b5f6020820190508181035f830152612fa281612f69565b9050919050565b7f4465762077616c6c65742063616e6e6f74206265207a65726f206164647265735f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f613003602183612884565b915061300e82612fa9565b604082019050919050565b5f6020820190508181035f83015261303081612ff7565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156130b95780860481111561309557613094613037565b5b60018516156130a45780820291505b80810290506130b285613064565b9450613079565b94509492505050565b5f826130d1576001905061318c565b816130de575f905061318c565b81600181146130f457600281146130fe5761312d565b600191505061318c565b60ff8411156131105761310f613037565b5b8360020a91508482111561312757613126613037565b5b5061318c565b5060208310610133831016604e8410600b84101617156131625782820a90508381111561315d5761315c613037565b5b61318c565b61316f8484846001613070565b9250905081840481111561318657613185613037565b5b81810290505b9392505050565b5f61319d82612982565b91506131a883612b12565b92506131d57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846130c2565b905092915050565b5f6131e782612982565b91506131f283612982565b925082820261320081612982565b9150828204841483151761321757613216613037565b5b5092915050565b5f61322882612982565b915061323383612982565b92506132607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846130c2565b905092915050565b5f8151905061327681612958565b92915050565b5f6020828403121561329157613290612924565b5b5f61329e84828501613268565b91505092915050565b5f6040820190506132ba5f830185612b9c565b6132c76020830184612b9c565b9392505050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f6133046132ff6132fa846132ce565b612a4e565b6132d7565b9050919050565b613314816132ea565b82525050565b5f60208201905061332d5f83018461330b565b92915050565b7f737461696e6162696c6974792077616c6c65742063616e6e6f74206265207a655f8201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b5f61338d602a83612884565b915061339882613333565b604082019050919050565b5f6020820190508181035f8301526133ba81613381565b9050919050565b5f6060820190506133d45f830186612b9c565b6133e16020830185612a26565b6133ee6040830184612a26565b949350505050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f613450602583612884565b915061345b826133f6565b604082019050919050565b5f6020820190508181035f83015261347d81613444565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f6134de602383612884565b91506134e982613484565b604082019050919050565b5f6020820190508181035f83015261350b816134d2565b9050919050565b7f5472616e7366657220616d6f756e74206d7573742062652067726561746572205f8201527f7468616e207a65726f0000000000000000000000000000000000000000000000602082015250565b5f61356c602983612884565b915061357782613512565b604082019050919050565b5f6020820190508181035f83015261359981613560565b9050919050565b7f53656e64657220697320626c61636b6c697374656400000000000000000000005f82015250565b5f6135d4601583612884565b91506135df826135a0565b602082019050919050565b5f6020820190508181035f830152613601816135c8565b9050919050565b7f526563697069656e7420697320626c61636b6c697374656400000000000000005f82015250565b5f61363c601883612884565b915061364782613608565b602082019050919050565b5f6020820190508181035f83015261366981613630565b9050919050565b7f43616e6e6f742062757920262073656c6c206d6f7265207468616e206d6178205f8201527f6c696d6974000000000000000000000000000000000000000000000000000000602082015250565b5f6136ca602583612884565b91506136d582613670565b604082019050919050565b5f6020820190508181035f8301526136f7816136be565b9050919050565b5f61370882612982565b915061371383612982565b925082820190508082111561372b5761372a613037565b5b92915050565b5f61373b82612982565b915061374683612982565b925082820390508181111561375e5761375d613037565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026137ed7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826137b2565b6137f786836137b2565b95508019841693508086168417925050509392505050565b5f61382961382461381f84612982565b612a4e565b612982565b9050919050565b5f819050919050565b6138428361380f565b61385661384e82613830565b8484546137be565b825550505050565b5f90565b61386a61385e565b613875818484613839565b505050565b5b818110156138985761388d5f82613862565b60018101905061387b565b5050565b601f8211156138dd576138ae81613791565b6138b7846137a3565b810160208510156138c6578190505b6138da6138d2856137a3565b83018261387a565b50505b505050565b5f82821c905092915050565b5f6138fd5f19846008026138e2565b1980831691505092915050565b5f61391583836138ee565b9150826002028217905092915050565b61392e8261287a565b67ffffffffffffffff81111561394757613946613764565b5b6139518254612c2f565b61395c82828561389c565b5f60209050601f83116001811461398d575f841561397b578287015190505b613985858261390a565b8655506139ec565b601f19841661399b86613791565b5f5b828110156139c25784890151825560018201915060208501945060208101905061399d565b868310156139df57848901516139db601f8916826138ee565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f613a2b82612982565b9150613a3683612982565b925082613a4657613a456139f4565b5b82820490509291505056fea2646970667358221220a80e2191841344856faefab25e64a0e91ed1218c25f5d7b50a76234abf059cc164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x21 PUSH3 0x27 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x191 JUMP JUMPDEST PUSH0 PUSH3 0x38 PUSH3 0x12B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x83 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH3 0x128 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH3 0x11F SWAP2 SWAP1 PUSH3 0x176 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x170 DUP2 PUSH3 0x152 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x18B PUSH0 DUP4 ADD DUP5 PUSH3 0x165 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A87 DUP1 PUSH3 0x19F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75F0A874 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xBE20B15D GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x59F JUMPI DUP1 PUSH4 0xE7D88DE5 EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x609 JUMPI DUP1 PUSH4 0xFEDCB861 EQ PUSH2 0x639 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0xBE20B15D EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0xC04A5414 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0xC8C8EBE4 EQ PUSH2 0x581 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x85FBAE56 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x85FBAE56 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0x88696F2F EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4F9 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x75F0A874 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x8206CF5A EQ PUSH2 0x467 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x5D098B38 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x5D098B38 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x6DDFA4B4 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0x72AC2486 EQ PUSH2 0x407 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x44337EA1 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x4FE47F70 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x537DF3B6 EQ PUSH2 0x379 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x309 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x11E91B84 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x1694505E EQ PUSH2 0x27F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x21B PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x2904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x29B5 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x2A0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x2AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH2 0x742 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x2AC2 JUMP JUMPDEST PUSH2 0x759 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x2A0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F3 PUSH2 0x787 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x2B2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x29B5 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x2B46 JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x2B71 JUMP JUMPDEST PUSH2 0x7B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x377 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x2B46 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x393 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x2B71 JUMP JUMPDEST PUSH2 0x9A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x2B71 JUMP JUMPDEST PUSH2 0xB02 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x2B46 JUMP JUMPDEST PUSH2 0xC10 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x2B71 JUMP JUMPDEST PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x405 PUSH2 0xCF3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x421 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x2B71 JUMP JUMPDEST PUSH2 0xD06 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42B PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x29B5 JUMP JUMPDEST PUSH2 0xE3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x465 PUSH2 0xE5A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46F PUSH2 0x14B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x2B46 JUMP JUMPDEST PUSH2 0x14BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x2B46 JUMP JUMPDEST PUSH2 0x154A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C5 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x2904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x513 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x29B5 JUMP JUMPDEST PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x2A0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x543 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x2B71 JUMP JUMPDEST PUSH2 0x16CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x54D PUSH2 0x17E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56B PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x578 SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x589 PUSH2 0x182A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B4 SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH2 0x1830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D7 PUSH2 0x18C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E4 SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x607 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x2B71 JUMP JUMPDEST PUSH2 0x18C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x623 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x2B71 JUMP JUMPDEST PUSH2 0x194A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x630 SWAP2 SWAP1 PUSH2 0x2A0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x641 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x64E SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x662 PUSH2 0x19C1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x673 SWAP1 PUSH2 0x2C2F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x69F SWAP1 PUSH2 0x2C2F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6FF PUSH2 0x19E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x70C DUP2 DUP6 DUP6 PUSH2 0x19EF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x74C PUSH2 0x19C1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x763 PUSH2 0x19E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x770 DUP6 DUP3 DUP6 PUSH2 0x1A01 JUMP JUMPDEST PUSH2 0x77B DUP6 DUP6 DUP6 PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x797 PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0x7A1 DUP3 DUP3 PUSH2 0x1C0A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7B6 PUSH2 0x7B0 PUSH2 0x19E8 JUMP JUMPDEST DUP3 PUSH2 0x1C89 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7C1 PUSH2 0x1B83 JUMP JUMPDEST PUSH1 0x8 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x842 SWAP1 PUSH2 0x2CA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x86A PUSH2 0x19E8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B7 SWAP1 PUSH2 0x2D11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x920 PUSH2 0x1B83 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x962 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x959 SWAP1 PUSH2 0x2D79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH32 0x44D540C6079791F805BC9B5D5A643DBF1F545EC260212B2B2478EF9D9ED0768E PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x99A SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x9AD PUSH2 0x1B83 JUMP JUMPDEST PUSH1 0x8 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP1 PUSH2 0x2DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA55 PUSH2 0x19E8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA2 SWAP1 PUSH2 0x2E6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xB0A PUSH2 0x1B83 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6F SWAP1 PUSH2 0x2EFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2026F0B479F097EA9D4C74DAC26E5271BA4D59931603970DA5458EA8AA3DCF37 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0xC05 SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xC18 PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xC5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC54 SWAP1 PUSH2 0x2F8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0x28AD5F14A54B644D089D89D6140175FBBF7199A6FA1275E827904C157F491546 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH2 0xC95 SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCAA PUSH2 0x19C1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCFB PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0xD04 PUSH0 PUSH2 0x1D08 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD0E PUSH2 0x1B83 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD73 SWAP1 PUSH2 0x3019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7404946BA3969D72CC11E8A0C21A8AB3B8DDDEB41E78F235DFAD9FFCDA3F617C PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0xE0C SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xE4C DUP3 PUSH2 0xE46 PUSH2 0x19E8 JUMP JUMPDEST DUP4 PUSH2 0x1A01 JUMP JUMPDEST PUSH2 0xE56 DUP3 DUP3 PUSH2 0x1C89 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE63 PUSH2 0x1DD9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xEAB JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xEDE JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xEEC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xF23 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xF70 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xF79 CALLER PUSH2 0x1E00 JUMP JUMPDEST PUSH2 0xF81 PUSH2 0x1E14 JUMP JUMPDEST PUSH2 0xFF5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54726162616A6F32340000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5432340000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1E1E JUMP JUMPDEST PUSH20 0x7E43D33CE3EBE06A0BFAFFC04ACA37C4ACBD3A5 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x5ED81F9BC2402A2BBD78E381C9AA1EDD99B90A55 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xD436C10D791C7A9558950A251A049871811BB070 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x10F8 PUSH2 0x787 JUMP JUMPDEST PUSH1 0xA PUSH2 0x1104 SWAP2 SWAP1 PUSH2 0x3193 JUMP JUMPDEST PUSH4 0x5F5E100 PUSH2 0x1113 SWAP2 SWAP1 PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x14 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x96 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x1139 PUSH2 0x787 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x1148 SWAP2 SWAP1 PUSH2 0x321E JUMP JUMPDEST PUSH4 0x1312D00 PUSH2 0x1157 SWAP2 SWAP1 PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x1169 CALLER PUSH1 0x7 SLOAD PUSH2 0x1C0A JUMP JUMPDEST PUSH0 PUSH20 0xD99D1C33F9FC3444F8101754ABC46C52416550D1 SWAP1 POP DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x120A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x122E SWAP2 SWAP1 PUSH2 0x327C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC9C65396 ADDRESS DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1293 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12B7 SWAP2 SWAP1 PUSH2 0x327C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D4 SWAP3 SWAP2 SWAP1 PUSH2 0x32A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12F0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1314 SWAP2 SWAP1 PUSH2 0x327C JUMP JUMPDEST PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x139F CALLER PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x19EF JUMP JUMPDEST PUSH2 0x13EB ADDRESS PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x19EF JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH2 0x144A SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP4 ISZERO PUSH2 0x14AD JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x14A4 SWAP2 SWAP1 PUSH2 0x331A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x14C2 PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x1507 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FE SWAP1 PUSH2 0x2F8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xD3F51AABCF3BCBD05F9260C8CCEC9728DA097C538DD797A90F527E255AE30838 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x153F SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1552 PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x1597 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x158E SWAP1 PUSH2 0x2F8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x153E5299255E24F1FD2CEEE40599BFDC41290FD92340FF6173FC24EFD6C299A6 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH2 0x15CF SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x15E4 PUSH2 0x1E34 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x161A PUSH2 0x19C1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x162B SWAP1 PUSH2 0x2C2F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1657 SWAP1 PUSH2 0x2C2F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1679 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16A2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1685 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x16B7 PUSH2 0x19E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x16C4 DUP2 DUP6 DUP6 PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D7 PUSH2 0x1B83 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1745 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x173C SWAP1 PUSH2 0x33A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x5D4A0C152F269A59530B6C3A84F5A90AC341C463C9E6D5D0D04CF75596776E4F PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x17D5 SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x183A PUSH2 0x19C1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18CE PUSH2 0x1B83 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x193E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1935 SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1947 DUP2 PUSH2 0x1D08 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x19FC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1E5B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A0C DUP5 DUP5 PUSH2 0x1830 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1A8D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1A7E JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A75 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x33C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A8C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1E5B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B03 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AFA SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B73 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6A SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B7E DUP4 DUP4 DUP4 PUSH2 0x2038 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1B8B PUSH2 0x19E8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BA9 PUSH2 0x15DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C08 JUMPI PUSH2 0x1BCC PUSH2 0x19E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BFF SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C7A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C71 SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C85 PUSH0 DUP4 DUP4 PUSH2 0x2038 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CF9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF0 SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D04 DUP3 PUSH0 DUP4 PUSH2 0x2038 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D11 PUSH2 0x1E34 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E08 PUSH2 0x250B JUMP JUMPDEST PUSH2 0x1E11 DUP2 PUSH2 0x254B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E1C PUSH2 0x250B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1E26 PUSH2 0x250B JUMP JUMPDEST PUSH2 0x1E30 DUP3 DUP3 PUSH2 0x25CF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1E64 PUSH2 0x19C1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ED6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ECD SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F46 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3D SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x2031 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2028 SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x209D SWAP1 PUSH2 0x3466 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2114 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x210B SWAP1 PUSH2 0x34F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x2156 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x214D SWAP1 PUSH2 0x3582 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x21E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21D7 SWAP1 PUSH2 0x35EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x226A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2261 SWAP1 PUSH2 0x3652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2272 PUSH2 0x15DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x22DD JUMPI POP PUSH2 0x22AE PUSH2 0x15DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x2313 JUMPI POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x2328 JUMPI PUSH2 0x2323 DUP4 DUP4 DUP4 PUSH2 0x260B JUMP JUMPDEST PUSH2 0x2506 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP1 PUSH0 DUP5 DUP1 PUSH2 0x23DA JUMPI POP DUP4 JUMPDEST ISZERO PUSH2 0x24D1 JUMPI PUSH1 0x6 SLOAD DUP7 GT ISZERO PUSH2 0x2424 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x241B SWAP1 PUSH2 0x36E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2430 DUP7 PUSH1 0x3 SLOAD PUSH2 0x283A JUMP JUMPDEST SWAP3 POP PUSH2 0x243E DUP7 PUSH1 0x4 SLOAD PUSH2 0x283A JUMP JUMPDEST SWAP2 POP PUSH2 0x244C DUP7 PUSH1 0x5 SLOAD PUSH2 0x283A JUMP JUMPDEST SWAP1 POP PUSH2 0x2478 DUP9 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x260B JUMP JUMPDEST PUSH2 0x24A4 DUP9 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x260B JUMP JUMPDEST PUSH2 0x24D0 DUP9 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x260B JUMP JUMPDEST JUMPDEST DUP1 DUP3 DUP5 PUSH2 0x24DE SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST PUSH2 0x24E8 SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST DUP7 PUSH2 0x24F3 SWAP2 SWAP1 PUSH2 0x3731 JUMP JUMPDEST SWAP6 POP PUSH2 0x2500 DUP9 DUP9 DUP9 PUSH2 0x260B JUMP JUMPDEST POP POP POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2513 PUSH2 0x285C JUMP JUMPDEST PUSH2 0x2549 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2553 PUSH2 0x250B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x25C3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25BA SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25CC DUP2 PUSH2 0x1D08 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x25D7 PUSH2 0x250B JUMP JUMPDEST PUSH0 PUSH2 0x25E0 PUSH2 0x19C1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x25F3 SWAP2 SWAP1 PUSH2 0x3925 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x2605 SWAP2 SWAP1 PUSH2 0x3925 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2614 PUSH2 0x19C1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2668 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x265C SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x273A JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x26F3 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26EA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x33C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2783 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x27CF JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x282C SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2710 DUP3 DUP5 PUSH2 0x284A SWAP2 SWAP1 PUSH2 0x31DD JUMP JUMPDEST PUSH2 0x2854 SWAP2 SWAP1 PUSH2 0x3A21 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2865 PUSH2 0x1DD9 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28B1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2896 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28D6 DUP3 PUSH2 0x287A JUMP JUMPDEST PUSH2 0x28E0 DUP2 DUP6 PUSH2 0x2884 JUMP JUMPDEST SWAP4 POP PUSH2 0x28F0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2894 JUMP JUMPDEST PUSH2 0x28F9 DUP2 PUSH2 0x28BC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x291C DUP2 DUP5 PUSH2 0x28CC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2951 DUP3 PUSH2 0x2928 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2961 DUP2 PUSH2 0x2947 JUMP JUMPDEST DUP2 EQ PUSH2 0x296B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x297C DUP2 PUSH2 0x2958 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2994 DUP2 PUSH2 0x2982 JUMP JUMPDEST DUP2 EQ PUSH2 0x299E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29AF DUP2 PUSH2 0x298B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29CB JUMPI PUSH2 0x29CA PUSH2 0x2924 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29D8 DUP6 DUP3 DUP7 ADD PUSH2 0x296E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29E9 DUP6 DUP3 DUP7 ADD PUSH2 0x29A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A07 DUP2 PUSH2 0x29F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A20 PUSH0 DUP4 ADD DUP5 PUSH2 0x29FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A2F DUP2 PUSH2 0x2982 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A48 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A71 PUSH2 0x2A6C PUSH2 0x2A67 DUP5 PUSH2 0x2928 JUMP JUMPDEST PUSH2 0x2A4E JUMP JUMPDEST PUSH2 0x2928 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A82 DUP3 PUSH2 0x2A57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A93 DUP3 PUSH2 0x2A78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AA3 DUP2 PUSH2 0x2A89 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2ABC PUSH0 DUP4 ADD DUP5 PUSH2 0x2A9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AD9 JUMPI PUSH2 0x2AD8 PUSH2 0x2924 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2AE6 DUP7 DUP3 DUP8 ADD PUSH2 0x296E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2AF7 DUP7 DUP3 DUP8 ADD PUSH2 0x296E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2B08 DUP7 DUP3 DUP8 ADD PUSH2 0x29A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B27 DUP2 PUSH2 0x2B12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B40 PUSH0 DUP4 ADD DUP5 PUSH2 0x2B1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B5B JUMPI PUSH2 0x2B5A PUSH2 0x2924 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B68 DUP5 DUP3 DUP6 ADD PUSH2 0x29A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B86 JUMPI PUSH2 0x2B85 PUSH2 0x2924 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B93 DUP5 DUP3 DUP6 ADD PUSH2 0x296E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BA5 DUP2 PUSH2 0x2947 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BBE PUSH0 DUP4 ADD DUP5 PUSH2 0x2B9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BDA JUMPI PUSH2 0x2BD9 PUSH2 0x2924 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BE7 DUP6 DUP3 DUP7 ADD PUSH2 0x296E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2BF8 DUP6 DUP3 DUP7 ADD PUSH2 0x296E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2C46 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2C59 JUMPI PUSH2 0x2C58 PUSH2 0x2C02 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E7420697320616C726561647920626C61636B6C69737465640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C93 PUSH1 0x1E DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C9E DUP3 PUSH2 0x2C5F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CC0 DUP2 PUSH2 0x2C87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420626C61636B6C6973742073656C660000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CFB PUSH1 0x15 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D06 DUP3 PUSH2 0x2CC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D28 DUP2 PUSH2 0x2CEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616D6F756E742073686F756C6420626520677265617465207468616E20300000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D63 PUSH1 0x1E DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D6E DUP3 PUSH2 0x2D2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D90 DUP2 PUSH2 0x2D57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E74206973206E6F7420626C61636B6C6973746564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DCB PUSH1 0x1A DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DD6 DUP3 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DF8 DUP2 PUSH2 0x2DBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742072656D6F76652073656C662066726F6D20626C61636B6C6973 PUSH0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E59 PUSH1 0x21 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E64 DUP3 PUSH2 0x2DFF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E86 DUP2 PUSH2 0x2E4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D61726B6574696E672077616C6C65742063616E6E6F74206265207A65726F20 PUSH0 DUP3 ADD MSTORE PUSH32 0x6164647265737300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EE7 PUSH1 0x27 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EF2 DUP3 PUSH2 0x2E8D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F14 DUP2 PUSH2 0x2EDB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5461782070657263656E746167652063616E6E6F742065786365656420313030 PUSH0 DUP3 ADD MSTORE PUSH32 0x2500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F75 PUSH1 0x21 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F80 DUP3 PUSH2 0x2F1B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2FA2 DUP2 PUSH2 0x2F69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465762077616C6C65742063616E6E6F74206265207A65726F20616464726573 PUSH0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3003 PUSH1 0x21 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x300E DUP3 PUSH2 0x2FA9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3030 DUP2 PUSH2 0x2FF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x30B9 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x3095 JUMPI PUSH2 0x3094 PUSH2 0x3037 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x30A4 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x30B2 DUP6 PUSH2 0x3064 JUMP JUMPDEST SWAP5 POP PUSH2 0x3079 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x30D1 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x318C JUMP JUMPDEST DUP2 PUSH2 0x30DE JUMPI PUSH0 SWAP1 POP PUSH2 0x318C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x30F4 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x30FE JUMPI PUSH2 0x312D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x318C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3110 JUMPI PUSH2 0x310F PUSH2 0x3037 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x3127 JUMPI PUSH2 0x3126 PUSH2 0x3037 JUMP JUMPDEST JUMPDEST POP PUSH2 0x318C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x3162 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x315D JUMPI PUSH2 0x315C PUSH2 0x3037 JUMP JUMPDEST JUMPDEST PUSH2 0x318C JUMP JUMPDEST PUSH2 0x316F DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x3070 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x3186 JUMPI PUSH2 0x3185 PUSH2 0x3037 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x319D DUP3 PUSH2 0x2982 JUMP JUMPDEST SWAP2 POP PUSH2 0x31A8 DUP4 PUSH2 0x2B12 JUMP JUMPDEST SWAP3 POP PUSH2 0x31D5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x30C2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31E7 DUP3 PUSH2 0x2982 JUMP JUMPDEST SWAP2 POP PUSH2 0x31F2 DUP4 PUSH2 0x2982 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3200 DUP2 PUSH2 0x2982 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3217 JUMPI PUSH2 0x3216 PUSH2 0x3037 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3228 DUP3 PUSH2 0x2982 JUMP JUMPDEST SWAP2 POP PUSH2 0x3233 DUP4 PUSH2 0x2982 JUMP JUMPDEST SWAP3 POP PUSH2 0x3260 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x30C2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3276 DUP2 PUSH2 0x2958 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3291 JUMPI PUSH2 0x3290 PUSH2 0x2924 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x329E DUP5 DUP3 DUP6 ADD PUSH2 0x3268 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x32BA PUSH0 DUP4 ADD DUP6 PUSH2 0x2B9C JUMP JUMPDEST PUSH2 0x32C7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B9C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3304 PUSH2 0x32FF PUSH2 0x32FA DUP5 PUSH2 0x32CE JUMP JUMPDEST PUSH2 0x2A4E JUMP JUMPDEST PUSH2 0x32D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3314 DUP2 PUSH2 0x32EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x332D PUSH0 DUP4 ADD DUP5 PUSH2 0x330B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x737461696E6162696C6974792077616C6C65742063616E6E6F74206265207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x338D PUSH1 0x2A DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x3398 DUP3 PUSH2 0x3333 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x33BA DUP2 PUSH2 0x3381 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x33D4 PUSH0 DUP4 ADD DUP7 PUSH2 0x2B9C JUMP JUMPDEST PUSH2 0x33E1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2A26 JUMP JUMPDEST PUSH2 0x33EE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2A26 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3450 PUSH1 0x25 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x345B DUP3 PUSH2 0x33F6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x347D DUP2 PUSH2 0x3444 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x34DE PUSH1 0x23 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x34E9 DUP3 PUSH2 0x3484 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x350B DUP2 PUSH2 0x34D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH0 DUP3 ADD MSTORE PUSH32 0x7468616E207A65726F0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x356C PUSH1 0x29 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x3577 DUP3 PUSH2 0x3512 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3599 DUP2 PUSH2 0x3560 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E64657220697320626C61636B6C69737465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x35D4 PUSH1 0x15 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x35DF DUP3 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3601 DUP2 PUSH2 0x35C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526563697069656E7420697320626C61636B6C69737465640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x363C PUSH1 0x18 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x3647 DUP3 PUSH2 0x3608 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3669 DUP2 PUSH2 0x3630 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742062757920262073656C6C206D6F7265207468616E206D617820 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C696D6974000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x36CA PUSH1 0x25 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x36D5 DUP3 PUSH2 0x3670 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x36F7 DUP2 PUSH2 0x36BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3708 DUP3 PUSH2 0x2982 JUMP JUMPDEST SWAP2 POP PUSH2 0x3713 DUP4 PUSH2 0x2982 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x372B JUMPI PUSH2 0x372A PUSH2 0x3037 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x373B DUP3 PUSH2 0x2982 JUMP JUMPDEST SWAP2 POP PUSH2 0x3746 DUP4 PUSH2 0x2982 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x375E JUMPI PUSH2 0x375D PUSH2 0x3037 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x37ED PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x37B2 JUMP JUMPDEST PUSH2 0x37F7 DUP7 DUP4 PUSH2 0x37B2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3829 PUSH2 0x3824 PUSH2 0x381F DUP5 PUSH2 0x2982 JUMP JUMPDEST PUSH2 0x2A4E JUMP JUMPDEST PUSH2 0x2982 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3842 DUP4 PUSH2 0x380F JUMP JUMPDEST PUSH2 0x3856 PUSH2 0x384E DUP3 PUSH2 0x3830 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x37BE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x386A PUSH2 0x385E JUMP JUMPDEST PUSH2 0x3875 DUP2 DUP5 DUP5 PUSH2 0x3839 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3898 JUMPI PUSH2 0x388D PUSH0 DUP3 PUSH2 0x3862 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x387B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x38DD JUMPI PUSH2 0x38AE DUP2 PUSH2 0x3791 JUMP JUMPDEST PUSH2 0x38B7 DUP5 PUSH2 0x37A3 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x38C6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x38DA PUSH2 0x38D2 DUP6 PUSH2 0x37A3 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x387A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x38FD PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x38E2 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3915 DUP4 DUP4 PUSH2 0x38EE JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x392E DUP3 PUSH2 0x287A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3947 JUMPI PUSH2 0x3946 PUSH2 0x3764 JUMP JUMPDEST JUMPDEST PUSH2 0x3951 DUP3 SLOAD PUSH2 0x2C2F JUMP JUMPDEST PUSH2 0x395C DUP3 DUP3 DUP6 PUSH2 0x389C JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x398D JUMPI PUSH0 DUP5 ISZERO PUSH2 0x397B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3985 DUP6 DUP3 PUSH2 0x390A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x39EC JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x399B DUP7 PUSH2 0x3791 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x39C2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x399D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x39DF JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x39DB PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x38EE JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3A2B DUP3 PUSH2 0x2982 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A36 DUP4 PUSH2 0x2982 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3A46 JUMPI PUSH2 0x3A45 PUSH2 0x39F4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xE 0x21 SWAP2 DUP5 SGT PREVRANDAO DUP6 PUSH16 0xAEFAB25E64A0E91ED1218C25F5D7B50A PUSH23 0x234ABF059CC164736F6C63430008140033000000000000 ",
							"sourceMap": "2426:12103:8:-:0;;;2592:55;;;;;;;;;;2617:22;:20;;;:22;;:::i;:::-;2426:12103;;7711:422:1;7826:30;7859:26;:24;;;:26;;:::i;:::-;7826:59;;7900:1;:15;;;;;;;;;;;;7896:76;;;7938:23;;;;;;;;;;;;;;7896:76;8003:16;7985:34;;:1;:14;;;;;;;;;;;;:34;;;7981:146;;8052:16;8035:1;:14;;;:33;;;;;;;;;;;;;;;;;;8087:29;8099:16;8087:29;;;;;;:::i;:::-;;;;;;;;7981:146;7760:373;7711:422::o;8737:170::-;8795:30;8870:21;8860:31;;8737:170;:::o;7:101:13:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;2426:12103:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__ERC20Burnable_init_1086": {
									"entryPoint": 7700,
									"id": 1086,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_516": {
									"entryPoint": 7710,
									"id": 516,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_544": {
									"entryPoint": 9679,
									"id": 544,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 7680,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 9547,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_approve_1016": {
									"entryPoint": 7771,
									"id": 1016,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_948": {
									"entryPoint": 6639,
									"id": 948,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_930": {
									"entryPoint": 7305,
									"id": 930,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_calculateTax_2098": {
									"entryPoint": 10298,
									"id": 2098,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_checkInitializing_370": {
									"entryPoint": 9483,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 7043,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getERC20Storage_500": {
									"entryPoint": 6593,
									"id": 500,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 7641,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 7732,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 10332,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_897": {
									"entryPoint": 7178,
									"id": 897,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1155": {
									"entryPoint": 6632,
									"id": 1155,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1064": {
									"entryPoint": 6657,
									"id": 1064,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 7432,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_772": {
									"entryPoint": 6803,
									"id": 772,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_2079": {
									"entryPoint": 8248,
									"id": 2079,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_864": {
									"entryPoint": 9739,
									"id": 864,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addToBlacklist_1859": {
									"entryPoint": 1977,
									"id": 1859,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_669": {
									"entryPoint": 6192,
									"id": 669,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_693": {
									"entryPoint": 1781,
									"id": 693,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_621": {
									"entryPoint": 3232,
									"id": 621,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1126": {
									"entryPoint": 3642,
									"id": 1126,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1105": {
									"entryPoint": 1957,
									"id": 1105,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_585": {
									"entryPoint": 1927,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@developmentWalletTax_1449": {
									"entryPoint": 1815,
									"id": 1449,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@developmentWallet_1443": {
									"entryPoint": 6112,
									"id": 1443,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_1636": {
									"entryPoint": 3674,
									"id": 1636,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isBlacklisted_1902": {
									"entryPoint": 6474,
									"id": 1902,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@marketingWalletTax_1447": {
									"entryPoint": 5300,
									"id": 1447,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@marketingWallet_1441": {
									"entryPoint": 3607,
									"id": 1441,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxTransactionAmount_1453": {
									"entryPoint": 6186,
									"id": 1453,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1652": {
									"entryPoint": 1935,
									"id": 1652,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_560": {
									"entryPoint": 1623,
									"id": 560,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_105": {
									"entryPoint": 5594,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeFromBlacklist_1889": {
									"entryPoint": 2469,
									"id": 1889,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_136": {
									"entryPoint": 3315,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setDevelopmentWalletTax_1700": {
									"entryPoint": 5306,
									"id": 1700,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setDevelopmentWallet_1801": {
									"entryPoint": 3334,
									"id": 1801,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMarketingWalletTax_1676": {
									"entryPoint": 5450,
									"id": 1676,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMarketingWallet_1774": {
									"entryPoint": 2818,
									"id": 1774,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMaxAmount_1747": {
									"entryPoint": 2328,
									"id": 1747,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSustainabilityWalletTax_1723": {
									"entryPoint": 3088,
									"id": 1723,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSustainabilityWallet_1828": {
									"entryPoint": 5839,
									"id": 1828,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sustainabilityWalletTax_1451": {
									"entryPoint": 6336,
									"id": 1451,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sustainabilityWallet_1445": {
									"entryPoint": 6556,
									"id": 1445,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_576": {
									"entryPoint": 5647,
									"id": 576,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_601": {
									"entryPoint": 1858,
									"id": 601,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_725": {
									"entryPoint": 1881,
									"id": 725,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_164": {
									"entryPoint": 6342,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_645": {
									"entryPoint": 5805,
									"id": 645,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uniswapPair_1470": {
									"entryPoint": 6149,
									"id": 1470,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswapV2Router_1468": {
									"entryPoint": 1821,
									"id": 1468,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 10606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 12904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 11121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 12924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 11204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 10946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 10677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 11078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 11164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 10750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IUniswapV2Router02_$2800_to_t_address_fromStack": {
									"entryPoint": 10906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 13067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_219bea5a61efa3b24140009507cd3511599910dbff559ec8c9faf0a37bd765f6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30746d5fd3aefc8393bb6dc5cb0e9157927b231c1b6a9f1c23804427d78f58e9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3c55b8f56c3715bd9a22d992ef46e98dbd5578d1c853a2ff1e6c29147cf488a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3f12d94dd452ac2a3ca7cab5d5d89cd55e903d07a3231732454f5351055f47ba_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4e23601e5f0eff9b92f6d8acd455a927d51dd1f6d23ed8a0b187a03c322e2eb3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_772c14a65a109aa6926c7b0454d5343eee60cf1188cabde66bc21bf88396e37f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_aa39be2dce503f936b45247ea43a2cf859da154cbb440268f1e122cce235bd49_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ab50c48371346557ee1e1a620334035014c71e69572d4d3f31f134c125e07703_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b4c7ac7c638c2c8267bea1b1928e0f2a3c289eeb7ccb96778d2551c9fe24c37c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c980fa47fa3eacfad4b8fb78485548f91ccfcb341cc7d44b4581776d57ff05ba_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 11038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 11179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 12967,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13249,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 10765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV2Router02_$2800__to_t_address__fromStack_reversed": {
									"entryPoint": 10921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 13082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_219bea5a61efa3b24140009507cd3511599910dbff559ec8c9faf0a37bd765f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30746d5fd3aefc8393bb6dc5cb0e9157927b231c1b6a9f1c23804427d78f58e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3c55b8f56c3715bd9a22d992ef46e98dbd5578d1c853a2ff1e6c29147cf488a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3f12d94dd452ac2a3ca7cab5d5d89cd55e903d07a3231732454f5351055f47ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4e23601e5f0eff9b92f6d8acd455a927d51dd1f6d23ed8a0b187a03c322e2eb3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_772c14a65a109aa6926c7b0454d5343eee60cf1188cabde66bc21bf88396e37f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aa39be2dce503f936b45247ea43a2cf859da154cbb440268f1e122cce235bd49__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ab50c48371346557ee1e1a620334035014c71e69572d4d3f31f134c125e07703__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b4c7ac7c638c2c8267bea1b1928e0f2a3c289eeb7ccb96778d2551c9fe24c37c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c980fa47fa3eacfad4b8fb78485548f91ccfcb341cc7d44b4581776d57ff05ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 11053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 14225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 14078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 14881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 12400,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 12830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 12691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 12482,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 12765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 14129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 14492,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 10567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 13006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 13015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 11026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 14458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_IUniswapV2Router02_$2800_to_t_address": {
									"entryPoint": 10889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 13034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 10872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 10839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 14351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 14629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10388,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 14243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 11311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 14602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 10830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 14574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 12343,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 14836,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 11266,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 14180,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 14384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 10532,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 14258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 12388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 14562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 14434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 13444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_219bea5a61efa3b24140009507cd3511599910dbff559ec8c9faf0a37bd765f6": {
									"entryPoint": 13107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_30746d5fd3aefc8393bb6dc5cb0e9157927b231c1b6a9f1c23804427d78f58e9": {
									"entryPoint": 11463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3c55b8f56c3715bd9a22d992ef46e98dbd5578d1c853a2ff1e6c29147cf488a8": {
									"entryPoint": 11567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3f12d94dd452ac2a3ca7cab5d5d89cd55e903d07a3231732454f5351055f47ba": {
									"entryPoint": 13832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4e23601e5f0eff9b92f6d8acd455a927d51dd1f6d23ed8a0b187a03c322e2eb3": {
									"entryPoint": 11917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a": {
									"entryPoint": 11359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_772c14a65a109aa6926c7b0454d5343eee60cf1188cabde66bc21bf88396e37f": {
									"entryPoint": 13728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785": {
									"entryPoint": 13586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9": {
									"entryPoint": 11671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_aa39be2dce503f936b45247ea43a2cf859da154cbb440268f1e122cce235bd49": {
									"entryPoint": 11775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ab50c48371346557ee1e1a620334035014c71e69572d4d3f31f134c125e07703": {
									"entryPoint": 12201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b4c7ac7c638c2c8267bea1b1928e0f2a3c289eeb7ccb96778d2551c9fe24c37c": {
									"entryPoint": 13936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 13302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c980fa47fa3eacfad4b8fb78485548f91ccfcb341cc7d44b4581776d57ff05ba": {
									"entryPoint": 12059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 14270,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 14393,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 14430,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:33453:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:13",
														"type": ""
													}
												],
												"src": "7:99:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:13",
														"type": ""
													}
												],
												"src": "112:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:13",
																"statements": []
															},
															"src": "378:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:13",
														"type": ""
													}
												],
												"src": "287:246:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:13",
														"type": ""
													}
												],
												"src": "539:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:13",
														"type": ""
													}
												],
												"src": "647:377:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:13",
														"type": ""
													}
												],
												"src": "1030:313:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:13",
														"type": ""
													}
												],
												"src": "1349:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:13",
														"type": ""
													}
												],
												"src": "1676:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:13",
														"type": ""
													}
												],
												"src": "1808:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:13"
															},
															"nodeType": "YulIf",
															"src": "1963:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:13",
														"type": ""
													}
												],
												"src": "1910:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:13",
														"type": ""
													}
												],
												"src": "2038:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:13",
														"type": ""
													}
												],
												"src": "2183:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:13"
															},
															"nodeType": "YulIf",
															"src": "2319:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:13",
														"type": ""
													}
												],
												"src": "2266:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:13",
														"type": ""
													}
												],
												"src": "2394:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:13"
															},
															"nodeType": "YulIf",
															"src": "2632:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:13",
														"type": ""
													}
												],
												"src": "2539:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:13",
														"type": ""
													}
												],
												"src": "3019:90:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:13",
														"type": ""
													}
												],
												"src": "3115:109:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:13",
														"type": ""
													}
												],
												"src": "3230:210:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:13",
														"type": ""
													}
												],
												"src": "3446:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:13",
														"type": ""
													}
												],
												"src": "3570:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3830:28:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3840:12:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3847:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3840:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3816:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3826:3:13",
														"type": ""
													}
												],
												"src": "3798:60:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3924:82:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3934:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3992:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "3974:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3974:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3965:8:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3965:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3947:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3947:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3934:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3904:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3914:9:13",
														"type": ""
													}
												],
												"src": "3864:142:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4072:66:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4082:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4126:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4095:30:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4095:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4082:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4052:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4062:9:13",
														"type": ""
													}
												],
												"src": "4012:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4231:66:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4241:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4254:30:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4254:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4241:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IUniswapV2Router02_$2800_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4211:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4221:9:13",
														"type": ""
													}
												],
												"src": "4144:153:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4395:93:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4412:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4475:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IUniswapV2Router02_$2800_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4417:57:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4417:64:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4405:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4405:77:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4405:77:13"
														}
													]
												},
												"name": "abi_encode_t_contract$_IUniswapV2Router02_$2800_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4383:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4390:3:13",
														"type": ""
													}
												],
												"src": "4303:185:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4619:151:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4629:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4641:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4652:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4637:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4637:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4629:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4736:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4749:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4760:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4745:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4745:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IUniswapV2Router02_$2800_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4665:70:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4665:98:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4665:98:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Router02_$2800__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4591:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4603:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4614:4:13",
														"type": ""
													}
												],
												"src": "4494:276:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4876:519:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4922:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4924:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4924:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4924:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4897:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4906:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4893:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4893:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4918:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4889:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4889:32:13"
															},
															"nodeType": "YulIf",
															"src": "4886:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "5015:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5030:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5044:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5034:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5059:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5094:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5105:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5090:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5090:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5114:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5069:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5069:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5059:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5142:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5157:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5171:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5161:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5187:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5222:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5233:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5218:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5218:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5242:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5197:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5197:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5187:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5270:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5285:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5299:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5289:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5315:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5350:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5361:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5346:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5346:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5370:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5325:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5325:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5315:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4830:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4841:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4853:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4861:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4869:6:13",
														"type": ""
													}
												],
												"src": "4776:619:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5444:43:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5454:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5469:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5476:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5465:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5465:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5454:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5426:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5436:7:13",
														"type": ""
													}
												],
												"src": "5401:86:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5554:51:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5571:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5592:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5576:15:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5576:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5564:35:13"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5542:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5549:3:13",
														"type": ""
													}
												],
												"src": "5493:112:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5705:120:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5715:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5727:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5738:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5723:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5723:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5715:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5791:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5804:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5815:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5800:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5800:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5751:39:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5751:67:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5751:67:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5677:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5689:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5700:4:13",
														"type": ""
													}
												],
												"src": "5611:214:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5897:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5943:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5945:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5945:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5945:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5918:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5927:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5914:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5914:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5939:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5910:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5910:32:13"
															},
															"nodeType": "YulIf",
															"src": "5907:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "6036:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6051:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6065:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6055:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6080:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6115:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6126:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6111:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6111:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6135:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6090:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6090:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6080:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5867:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5878:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5890:6:13",
														"type": ""
													}
												],
												"src": "5831:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6232:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6278:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6280:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6280:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6280:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6253:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6262:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6249:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6249:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6274:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6245:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6245:32:13"
															},
															"nodeType": "YulIf",
															"src": "6242:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "6371:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6386:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6400:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6390:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6415:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6450:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6461:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6446:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6446:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6470:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6425:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6425:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6415:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6202:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6213:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6225:6:13",
														"type": ""
													}
												],
												"src": "6166:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6566:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6583:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6606:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6588:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6588:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6576:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6576:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6554:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6561:3:13",
														"type": ""
													}
												],
												"src": "6501:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6723:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6733:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6745:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6756:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6741:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6741:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6733:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6813:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6826:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6837:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6822:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6822:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6769:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6769:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6769:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6695:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6707:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6718:4:13",
														"type": ""
													}
												],
												"src": "6625:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6936:391:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6982:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6984:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6984:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6984:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6957:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6966:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6953:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6953:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6978:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6949:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6949:32:13"
															},
															"nodeType": "YulIf",
															"src": "6946:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "7075:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7090:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7104:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7094:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7119:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7154:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7165:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7150:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7150:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7174:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7129:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7129:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7119:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7202:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7217:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7221:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7247:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7282:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7293:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7278:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7278:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7302:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7257:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7257:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7247:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6898:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6909:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6921:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6929:6:13",
														"type": ""
													}
												],
												"src": "6853:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7361:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7378:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7381:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7371:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7371:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7371:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7475:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7478:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7468:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7468:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7468:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7499:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7502:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7492:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7492:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7492:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "7333:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7570:269:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7580:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7594:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7600:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7590:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7590:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7580:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7611:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7641:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7647:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7637:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7637:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7615:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7688:51:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7702:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7716:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7724:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7712:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7712:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7702:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7668:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7661:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7661:26:13"
															},
															"nodeType": "YulIf",
															"src": "7658:81:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7791:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "7805:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7805:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7805:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7755:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7778:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7786:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7775:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7775:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7752:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7752:38:13"
															},
															"nodeType": "YulIf",
															"src": "7749:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7554:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7563:6:13",
														"type": ""
													}
												],
												"src": "7519:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7951:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7973:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7981:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7969:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7969:14:13"
																	},
																	{
																		"hexValue": "4163636f756e7420697320616c726561647920626c61636b6c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7985:32:13",
																		"type": "",
																		"value": "Account is already blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7962:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7962:56:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7962:56:13"
														}
													]
												},
												"name": "store_literal_in_memory_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7943:6:13",
														"type": ""
													}
												],
												"src": "7845:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8177:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8187:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8253:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8258:2:13",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8194:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8194:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8187:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8359:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a",
																	"nodeType": "YulIdentifier",
																	"src": "8270:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8270:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8270:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8372:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8383:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8388:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8379:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8379:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8372:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8165:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8173:3:13",
														"type": ""
													}
												],
												"src": "8031:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8574:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8584:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8596:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8607:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8592:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8592:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8584:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8631:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8642:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8627:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8627:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8650:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8656:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8646:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8646:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8620:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8620:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8620:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8676:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8810:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8684:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8684:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8676:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8554:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8569:4:13",
														"type": ""
													}
												],
												"src": "8403:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8934:65:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8956:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8964:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8952:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8952:14:13"
																	},
																	{
																		"hexValue": "43616e6e6f7420626c61636b6c6973742073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8968:23:13",
																		"type": "",
																		"value": "Cannot blacklist self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8945:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8945:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8945:47:13"
														}
													]
												},
												"name": "store_literal_in_memory_30746d5fd3aefc8393bb6dc5cb0e9157927b231c1b6a9f1c23804427d78f58e9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8926:6:13",
														"type": ""
													}
												],
												"src": "8828:171:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9151:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9161:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9227:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9232:2:13",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9168:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9168:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9161:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9333:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30746d5fd3aefc8393bb6dc5cb0e9157927b231c1b6a9f1c23804427d78f58e9",
																	"nodeType": "YulIdentifier",
																	"src": "9244:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9244:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9244:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9346:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9357:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9362:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9353:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9353:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9346:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30746d5fd3aefc8393bb6dc5cb0e9157927b231c1b6a9f1c23804427d78f58e9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9139:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9147:3:13",
														"type": ""
													}
												],
												"src": "9005:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9548:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9558:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9570:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9581:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9566:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9566:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9558:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9605:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9616:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9601:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9601:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9624:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9630:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9620:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9620:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9594:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9594:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9594:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9650:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9784:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30746d5fd3aefc8393bb6dc5cb0e9157927b231c1b6a9f1c23804427d78f58e9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9658:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9658:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9650:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30746d5fd3aefc8393bb6dc5cb0e9157927b231c1b6a9f1c23804427d78f58e9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9528:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9543:4:13",
														"type": ""
													}
												],
												"src": "9377:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9908:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9930:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9938:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9926:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9926:14:13"
																	},
																	{
																		"hexValue": "616d6f756e742073686f756c6420626520677265617465207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9942:32:13",
																		"type": "",
																		"value": "amount should be greate than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9919:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9919:56:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9919:56:13"
														}
													]
												},
												"name": "store_literal_in_memory_3c55b8f56c3715bd9a22d992ef46e98dbd5578d1c853a2ff1e6c29147cf488a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9900:6:13",
														"type": ""
													}
												],
												"src": "9802:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10134:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10144:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10210:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10215:2:13",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10151:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10151:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10144:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10316:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3c55b8f56c3715bd9a22d992ef46e98dbd5578d1c853a2ff1e6c29147cf488a8",
																	"nodeType": "YulIdentifier",
																	"src": "10227:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10227:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10227:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10329:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10340:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10345:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10336:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10336:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10329:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3c55b8f56c3715bd9a22d992ef46e98dbd5578d1c853a2ff1e6c29147cf488a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10122:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10130:3:13",
														"type": ""
													}
												],
												"src": "9988:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10531:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10541:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10553:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10564:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10549:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10549:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10541:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10588:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10599:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10584:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10584:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10607:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10613:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10603:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10603:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10577:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10577:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10577:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10633:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10767:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3c55b8f56c3715bd9a22d992ef46e98dbd5578d1c853a2ff1e6c29147cf488a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10641:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10641:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10633:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3c55b8f56c3715bd9a22d992ef46e98dbd5578d1c853a2ff1e6c29147cf488a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10511:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10526:4:13",
														"type": ""
													}
												],
												"src": "10360:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10891:70:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10913:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10921:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10909:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10909:14:13"
																	},
																	{
																		"hexValue": "4163636f756e74206973206e6f7420626c61636b6c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10925:28:13",
																		"type": "",
																		"value": "Account is not blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10902:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10902:52:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10902:52:13"
														}
													]
												},
												"name": "store_literal_in_memory_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10883:6:13",
														"type": ""
													}
												],
												"src": "10785:176:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11113:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11123:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11189:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11194:2:13",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11130:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11130:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11123:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11295:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9",
																	"nodeType": "YulIdentifier",
																	"src": "11206:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11206:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11206:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11308:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11319:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11324:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11315:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11315:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11308:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11101:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11109:3:13",
														"type": ""
													}
												],
												"src": "10967:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11510:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11520:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11532:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11543:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11528:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11528:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11520:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11567:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11578:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11563:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11563:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11586:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11592:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11582:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11582:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11556:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11556:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11556:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11612:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11746:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11620:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11620:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11612:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11490:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11505:4:13",
														"type": ""
													}
												],
												"src": "11339:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11870:114:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11892:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11900:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11888:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11888:14:13"
																	},
																	{
																		"hexValue": "43616e6e6f742072656d6f76652073656c662066726f6d20626c61636b6c6973",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11904:34:13",
																		"type": "",
																		"value": "Cannot remove self from blacklis"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11881:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11881:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11881:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11960:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11968:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11956:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11956:15:13"
																	},
																	{
																		"hexValue": "74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11973:3:13",
																		"type": "",
																		"value": "t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11949:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11949:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11949:28:13"
														}
													]
												},
												"name": "store_literal_in_memory_aa39be2dce503f936b45247ea43a2cf859da154cbb440268f1e122cce235bd49",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11862:6:13",
														"type": ""
													}
												],
												"src": "11764:220:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12136:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12146:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12212:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12217:2:13",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12153:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12153:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12146:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12318:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_aa39be2dce503f936b45247ea43a2cf859da154cbb440268f1e122cce235bd49",
																	"nodeType": "YulIdentifier",
																	"src": "12229:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12229:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12229:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12331:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12342:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12347:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12338:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12338:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12331:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_aa39be2dce503f936b45247ea43a2cf859da154cbb440268f1e122cce235bd49_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12124:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12132:3:13",
														"type": ""
													}
												],
												"src": "11990:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12533:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12543:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12555:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12566:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12551:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12551:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12543:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12590:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12601:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12586:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12586:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12609:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12615:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12605:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12605:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12579:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12579:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12579:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12635:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12769:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_aa39be2dce503f936b45247ea43a2cf859da154cbb440268f1e122cce235bd49_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12643:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12643:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12635:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aa39be2dce503f936b45247ea43a2cf859da154cbb440268f1e122cce235bd49__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12513:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12528:4:13",
														"type": ""
													}
												],
												"src": "12362:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12893:120:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12915:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12923:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12911:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12911:14:13"
																	},
																	{
																		"hexValue": "4d61726b6574696e672077616c6c65742063616e6e6f74206265207a65726f20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12927:34:13",
																		"type": "",
																		"value": "Marketing wallet cannot be zero "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12904:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12904:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12904:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12983:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12991:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12979:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12979:15:13"
																	},
																	{
																		"hexValue": "61646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12996:9:13",
																		"type": "",
																		"value": "address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12972:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12972:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12972:34:13"
														}
													]
												},
												"name": "store_literal_in_memory_4e23601e5f0eff9b92f6d8acd455a927d51dd1f6d23ed8a0b187a03c322e2eb3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12885:6:13",
														"type": ""
													}
												],
												"src": "12787:226:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13165:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13175:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13241:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13246:2:13",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13182:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13182:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13175:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13347:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4e23601e5f0eff9b92f6d8acd455a927d51dd1f6d23ed8a0b187a03c322e2eb3",
																	"nodeType": "YulIdentifier",
																	"src": "13258:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13258:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13258:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13360:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13371:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13376:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13367:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13367:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13360:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4e23601e5f0eff9b92f6d8acd455a927d51dd1f6d23ed8a0b187a03c322e2eb3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13153:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13161:3:13",
														"type": ""
													}
												],
												"src": "13019:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13562:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13572:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13584:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13595:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13580:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13580:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13572:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13619:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13630:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13615:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13615:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13638:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13644:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13634:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13634:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13608:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13608:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13608:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13664:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13798:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4e23601e5f0eff9b92f6d8acd455a927d51dd1f6d23ed8a0b187a03c322e2eb3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13672:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13672:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13664:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4e23601e5f0eff9b92f6d8acd455a927d51dd1f6d23ed8a0b187a03c322e2eb3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13542:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13557:4:13",
														"type": ""
													}
												],
												"src": "13391:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13922:114:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13944:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13952:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13940:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13940:14:13"
																	},
																	{
																		"hexValue": "5461782070657263656e746167652063616e6e6f742065786365656420313030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13956:34:13",
																		"type": "",
																		"value": "Tax percentage cannot exceed 100"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13933:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13933:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13933:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14012:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14020:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14008:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14008:15:13"
																	},
																	{
																		"hexValue": "25",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14025:3:13",
																		"type": "",
																		"value": "%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14001:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14001:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14001:28:13"
														}
													]
												},
												"name": "store_literal_in_memory_c980fa47fa3eacfad4b8fb78485548f91ccfcb341cc7d44b4581776d57ff05ba",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13914:6:13",
														"type": ""
													}
												],
												"src": "13816:220:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14188:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14198:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14264:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14269:2:13",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14205:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14205:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14198:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14370:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c980fa47fa3eacfad4b8fb78485548f91ccfcb341cc7d44b4581776d57ff05ba",
																	"nodeType": "YulIdentifier",
																	"src": "14281:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14281:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14281:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14383:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14394:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14399:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14390:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14390:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14383:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c980fa47fa3eacfad4b8fb78485548f91ccfcb341cc7d44b4581776d57ff05ba_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14176:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14184:3:13",
														"type": ""
													}
												],
												"src": "14042:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14585:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14595:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14607:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14618:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14603:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14603:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14595:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14642:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14653:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14638:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14638:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14661:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14667:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14657:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14657:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14631:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14631:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14631:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14687:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14821:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c980fa47fa3eacfad4b8fb78485548f91ccfcb341cc7d44b4581776d57ff05ba_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14695:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14695:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14687:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c980fa47fa3eacfad4b8fb78485548f91ccfcb341cc7d44b4581776d57ff05ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14565:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14580:4:13",
														"type": ""
													}
												],
												"src": "14414:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14945:114:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14967:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14975:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14963:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14963:14:13"
																	},
																	{
																		"hexValue": "4465762077616c6c65742063616e6e6f74206265207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14979:34:13",
																		"type": "",
																		"value": "Dev wallet cannot be zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14956:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14956:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14956:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15035:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15043:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15031:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15031:15:13"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15048:3:13",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15024:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15024:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15024:28:13"
														}
													]
												},
												"name": "store_literal_in_memory_ab50c48371346557ee1e1a620334035014c71e69572d4d3f31f134c125e07703",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14937:6:13",
														"type": ""
													}
												],
												"src": "14839:220:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15211:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15221:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15287:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15292:2:13",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15228:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15228:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15221:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15393:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ab50c48371346557ee1e1a620334035014c71e69572d4d3f31f134c125e07703",
																	"nodeType": "YulIdentifier",
																	"src": "15304:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15304:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15304:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15406:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15417:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15422:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15413:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15413:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15406:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ab50c48371346557ee1e1a620334035014c71e69572d4d3f31f134c125e07703_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15199:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15207:3:13",
														"type": ""
													}
												],
												"src": "15065:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15608:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15618:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15630:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15641:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15626:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15626:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15618:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15665:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15676:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15661:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15661:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15684:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15690:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15680:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15680:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15654:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15654:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15654:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15710:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15844:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ab50c48371346557ee1e1a620334035014c71e69572d4d3f31f134c125e07703_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15718:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15718:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15710:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ab50c48371346557ee1e1a620334035014c71e69572d4d3f31f134c125e07703__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15588:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15603:4:13",
														"type": ""
													}
												],
												"src": "15437:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15890:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15907:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15910:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15900:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15900:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15900:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16004:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16007:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15997:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15997:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15997:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16028:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16031:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16021:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16021:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16021:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "15862:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16099:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16109:34:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16134:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16137:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "16130:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16130:13:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "16109:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16080:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "16090:8:13",
														"type": ""
													}
												],
												"src": "16048:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16229:775:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16239:15:13",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "16248:6:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "16239:5:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16263:14:13",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "16272:5:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "16263:4:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16321:677:13",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "16409:22:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "16411:16:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16411:18:13"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "16411:18:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "16387:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "16397:3:13"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "16402:4:13"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "16393:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16393:14:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "16384:2:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16384:24:13"
																		},
																		"nodeType": "YulIf",
																		"src": "16381:50:13"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "16476:419:13",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "16856:25:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "16869:5:13"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "16876:4:13"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "16865:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16865:16:13"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "16856:5:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "16451:8:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16461:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "16447:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16447:16:13"
																		},
																		"nodeType": "YulIf",
																		"src": "16444:451:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "16908:23:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "16920:4:13"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "16926:4:13"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "16916:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16916:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "16908:4:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "16944:44:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "16979:8:13"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "16956:22:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16956:32:13"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "16944:8:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "16297:8:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16307:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16294:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16294:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "16310:2:13",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "16290:3:13",
																"statements": []
															},
															"src": "16286:712:13"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "16184:6:13",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "16192:5:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "16199:8:13",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "16209:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "16217:5:13",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "16224:4:13",
														"type": ""
													}
												],
												"src": "16156:848:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17070:1013:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17265:20:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "17267:10:13",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "17276:1:13",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "17267:5:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "17278:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "17255:8:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17248:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17248:16:13"
															},
															"nodeType": "YulIf",
															"src": "17245:40:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17310:20:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "17312:10:13",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "17321:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "17312:5:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "17323:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "17304:4:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17297:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17297:12:13"
															},
															"nodeType": "YulIf",
															"src": "17294:36:13"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "17440:20:13",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "17442:10:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17451:1:13",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "17442:5:13"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "17453:5:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "17433:27:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17438:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "17484:176:13",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "17519:22:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "17521:16:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "17521:18:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "17521:18:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "17504:8:13"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17514:3:13",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "17501:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17501:17:13"
																				},
																				"nodeType": "YulIf",
																				"src": "17498:43:13"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "17554:25:13",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17567:1:13",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "17570:8:13"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "17563:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17563:16:13"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "17554:5:13"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "17610:22:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "17612:16:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "17612:18:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "17612:18:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "17598:5:13"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "17605:3:13"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "17595:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17595:14:13"
																				},
																				"nodeType": "YulIf",
																				"src": "17592:40:13"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "17645:5:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "17469:191:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17474:1:13",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "17390:4:13"
															},
															"nodeType": "YulSwitch",
															"src": "17383:277:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17792:123:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "17806:28:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "17819:4:13"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "17825:8:13"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "17815:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17815:19:13"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "17806:5:13"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "17865:22:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "17867:16:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17867:18:13"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "17867:18:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "17853:5:13"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "17860:3:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "17850:2:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17850:14:13"
																		},
																		"nodeType": "YulIf",
																		"src": "17847:40:13"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "17900:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "17695:4:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17701:2:13",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "17692:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17692:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "17709:8:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17719:2:13",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "17706:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17706:16:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17688:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17688:35:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "17744:4:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17750:3:13",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "17741:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17741:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "17759:8:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17769:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "17756:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17756:16:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17737:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17737:36:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "17672:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17672:111:13"
															},
															"nodeType": "YulIf",
															"src": "17669:246:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17925:57:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17959:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "17962:4:13"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "17968:8:13"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "17978:3:13"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "17940:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17940:42:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "17925:5:13"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "17932:4:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18021:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18023:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18023:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18023:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "17998:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "18009:3:13"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "18014:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "18005:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18005:14:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17995:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17995:25:13"
															},
															"nodeType": "YulIf",
															"src": "17992:51:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18052:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "18065:5:13"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "18072:4:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "18061:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18061:16:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "18052:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "17040:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "17046:8:13",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "17056:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "17064:5:13",
														"type": ""
													}
												],
												"src": "17010:1073:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18153:217:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18163:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "18189:4:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18171:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18171:23:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "18163:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18203:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "18231:8:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "18215:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18215:25:13"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "18203:8:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18250:113:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "18280:4:13"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "18286:8:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18296:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "18259:20:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18259:104:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "18250:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "18128:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "18134:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "18147:5:13",
														"type": ""
													}
												],
												"src": "18089:281:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18424:362:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18434:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18457:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18439:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18439:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18434:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18468:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18491:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18473:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18473:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18468:1:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18502:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18525:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18528:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "18521:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18521:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "18506:11:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18539:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "18568:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18550:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18550:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "18539:7:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18757:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18759:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18759:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18759:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "18690:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "18683:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18683:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "18713:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "18720:7:13"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "18729:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "18716:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18716:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "18710:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18710:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "18663:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18663:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18643:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18643:113:13"
															},
															"nodeType": "YulIf",
															"src": "18640:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18407:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18410:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "18416:7:13",
														"type": ""
													}
												],
												"src": "18376:410:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18858:219:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18868:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "18894:4:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18876:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18876:23:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "18868:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18908:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "18938:8:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18920:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18920:27:13"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "18908:8:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18957:113:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "18987:4:13"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "18993:8:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19003:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "18966:20:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18966:104:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "18957:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "18833:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "18839:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "18852:5:13",
														"type": ""
													}
												],
												"src": "18792:285:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19146:80:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19156:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19171:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19165:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19165:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "19156:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19214:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "19187:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19187:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19187:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "19124:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19132:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19140:5:13",
														"type": ""
													}
												],
												"src": "19083:143:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19309:274:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19355:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19357:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19357:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19357:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19330:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19339:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19326:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19326:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19351:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19322:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19322:32:13"
															},
															"nodeType": "YulIf",
															"src": "19319:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "19448:128:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19463:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19477:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19467:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19492:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19538:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19549:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19534:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19534:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19558:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "19502:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19502:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "19492:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19279:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19290:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19302:6:13",
														"type": ""
													}
												],
												"src": "19232:351:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19715:206:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19725:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19737:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19748:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19733:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19733:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19725:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19805:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19818:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19829:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19814:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19814:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19761:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19761:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19761:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19886:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19899:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19910:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19895:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19895:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19842:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19842:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19842:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19679:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19691:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19699:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19710:4:13",
														"type": ""
													}
												],
												"src": "19589:332:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19980:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19990:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "20001:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19990:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19962:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19972:7:13",
														"type": ""
													}
												],
												"src": "19927:85:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20062:57:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20072:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20087:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20094:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20083:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20083:30:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20072:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20044:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20054:7:13",
														"type": ""
													}
												],
												"src": "20018:101:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20192:89:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20202:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20267:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "20241:25:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20241:32:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "20232:8:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20232:42:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "20215:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20215:60:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20202:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20172:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20182:9:13",
														"type": ""
													}
												],
												"src": "20125:156:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20359:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20376:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20419:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nodeType": "YulIdentifier",
																			"src": "20381:37:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20381:44:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20369:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20369:57:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20369:57:13"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20347:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20354:3:13",
														"type": ""
													}
												],
												"src": "20287:145:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20543:131:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20553:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20565:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20576:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20561:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20561:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20553:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20640:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20653:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20664:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20649:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20649:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20589:50:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20589:78:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20589:78:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20515:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20527:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20538:4:13",
														"type": ""
													}
												],
												"src": "20438:236:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20786:123:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20808:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20816:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20804:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20804:14:13"
																	},
																	{
																		"hexValue": "737461696e6162696c6974792077616c6c65742063616e6e6f74206265207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20820:34:13",
																		"type": "",
																		"value": "stainability wallet cannot be ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20797:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20797:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20797:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20876:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20884:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20872:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20872:15:13"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20889:12:13",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20865:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20865:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20865:37:13"
														}
													]
												},
												"name": "store_literal_in_memory_219bea5a61efa3b24140009507cd3511599910dbff559ec8c9faf0a37bd765f6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20778:6:13",
														"type": ""
													}
												],
												"src": "20680:229:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21061:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21071:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21137:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21142:2:13",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21078:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21078:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21071:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21243:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_219bea5a61efa3b24140009507cd3511599910dbff559ec8c9faf0a37bd765f6",
																	"nodeType": "YulIdentifier",
																	"src": "21154:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21154:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21154:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21256:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21267:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21272:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21263:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21263:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21256:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_219bea5a61efa3b24140009507cd3511599910dbff559ec8c9faf0a37bd765f6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21049:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21057:3:13",
														"type": ""
													}
												],
												"src": "20915:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21458:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21468:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21480:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21491:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21476:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21476:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21468:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21515:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21526:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21511:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21511:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21534:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21540:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21530:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21530:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21504:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21504:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21504:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21560:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21694:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_219bea5a61efa3b24140009507cd3511599910dbff559ec8c9faf0a37bd765f6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21568:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21568:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21560:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_219bea5a61efa3b24140009507cd3511599910dbff559ec8c9faf0a37bd765f6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21438:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21453:4:13",
														"type": ""
													}
												],
												"src": "21287:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21866:288:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21876:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21888:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21899:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21884:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21884:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21876:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21956:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21969:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21980:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21965:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21965:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21912:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21912:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21912:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22037:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22050:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22061:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22046:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22046:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21993:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21993:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21993:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "22119:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22132:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22143:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22128:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22128:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22075:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22075:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22075:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21822:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "21834:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21842:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21850:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21861:4:13",
														"type": ""
													}
												],
												"src": "21712:442:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22266:118:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22288:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22296:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22284:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22284:14:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22300:34:13",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22277:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22277:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22277:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22356:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22364:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22352:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22352:15:13"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22369:7:13",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22345:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22345:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22345:32:13"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22258:6:13",
														"type": ""
													}
												],
												"src": "22160:224:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22536:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22546:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22612:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22617:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22553:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22553:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22546:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22718:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "22629:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22629:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22629:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22731:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22742:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22747:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22738:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22738:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22731:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22524:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22532:3:13",
														"type": ""
													}
												],
												"src": "22390:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22933:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22943:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22955:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22966:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22951:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22951:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22943:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22990:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23001:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22986:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22986:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23009:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23015:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23005:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23005:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22979:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22979:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22979:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23035:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23169:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23043:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23043:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23035:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22913:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22928:4:13",
														"type": ""
													}
												],
												"src": "22762:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23293:116:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23315:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23323:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23311:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23311:14:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23327:34:13",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23304:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23304:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23304:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23383:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23391:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23379:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23379:15:13"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23396:5:13",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23372:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23372:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23372:30:13"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23285:6:13",
														"type": ""
													}
												],
												"src": "23187:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23561:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23571:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23637:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23642:2:13",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23578:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23578:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23571:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23743:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "23654:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23654:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23654:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23756:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23767:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23772:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23763:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23763:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23756:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23549:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23557:3:13",
														"type": ""
													}
												],
												"src": "23415:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23958:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23968:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23980:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23991:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23976:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23976:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23968:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24015:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24026:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24011:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24011:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24034:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24040:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24030:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24030:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24004:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24004:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24004:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24060:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24194:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24068:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24068:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24060:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23938:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23953:4:13",
														"type": ""
													}
												],
												"src": "23787:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24318:122:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24340:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24348:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24336:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24336:14:13"
																	},
																	{
																		"hexValue": "5472616e7366657220616d6f756e74206d757374206265206772656174657220",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24352:34:13",
																		"type": "",
																		"value": "Transfer amount must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24329:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24329:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24329:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24408:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24416:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24404:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24404:15:13"
																	},
																	{
																		"hexValue": "7468616e207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24421:11:13",
																		"type": "",
																		"value": "than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24397:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24397:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24397:36:13"
														}
													]
												},
												"name": "store_literal_in_memory_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24310:6:13",
														"type": ""
													}
												],
												"src": "24212:228:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24592:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24602:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24668:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24673:2:13",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24609:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24609:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24602:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24774:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																	"nodeType": "YulIdentifier",
																	"src": "24685:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24685:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24685:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24787:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24798:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24803:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24794:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24794:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24787:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24580:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24588:3:13",
														"type": ""
													}
												],
												"src": "24446:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24989:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24999:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25011:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25022:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25007:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25007:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24999:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25046:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25057:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25042:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25042:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25065:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25071:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25061:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25061:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25035:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25035:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25035:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25091:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25225:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25099:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25099:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25091:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24969:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24984:4:13",
														"type": ""
													}
												],
												"src": "24818:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25349:65:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25371:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25379:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25367:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25367:14:13"
																	},
																	{
																		"hexValue": "53656e64657220697320626c61636b6c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25383:23:13",
																		"type": "",
																		"value": "Sender is blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25360:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25360:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25360:47:13"
														}
													]
												},
												"name": "store_literal_in_memory_772c14a65a109aa6926c7b0454d5343eee60cf1188cabde66bc21bf88396e37f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25341:6:13",
														"type": ""
													}
												],
												"src": "25243:171:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25566:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25576:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25642:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25647:2:13",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25583:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25583:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25576:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25748:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_772c14a65a109aa6926c7b0454d5343eee60cf1188cabde66bc21bf88396e37f",
																	"nodeType": "YulIdentifier",
																	"src": "25659:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25659:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25659:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25761:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25772:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25777:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25768:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25768:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25761:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_772c14a65a109aa6926c7b0454d5343eee60cf1188cabde66bc21bf88396e37f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25554:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25562:3:13",
														"type": ""
													}
												],
												"src": "25420:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25963:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25973:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25985:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25996:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25981:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25981:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25973:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26020:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26031:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26016:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26016:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26039:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26045:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26035:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26035:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26009:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26009:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26009:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26065:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26199:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_772c14a65a109aa6926c7b0454d5343eee60cf1188cabde66bc21bf88396e37f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26073:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26073:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26065:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_772c14a65a109aa6926c7b0454d5343eee60cf1188cabde66bc21bf88396e37f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25943:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25958:4:13",
														"type": ""
													}
												],
												"src": "25792:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26323:68:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26345:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26353:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26341:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26341:14:13"
																	},
																	{
																		"hexValue": "526563697069656e7420697320626c61636b6c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26357:26:13",
																		"type": "",
																		"value": "Recipient is blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26334:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26334:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26334:50:13"
														}
													]
												},
												"name": "store_literal_in_memory_3f12d94dd452ac2a3ca7cab5d5d89cd55e903d07a3231732454f5351055f47ba",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26315:6:13",
														"type": ""
													}
												],
												"src": "26217:174:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26543:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26553:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26619:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26624:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26560:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26560:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26553:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26725:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3f12d94dd452ac2a3ca7cab5d5d89cd55e903d07a3231732454f5351055f47ba",
																	"nodeType": "YulIdentifier",
																	"src": "26636:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26636:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26636:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26738:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26749:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26754:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26745:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26745:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26738:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3f12d94dd452ac2a3ca7cab5d5d89cd55e903d07a3231732454f5351055f47ba_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26531:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26539:3:13",
														"type": ""
													}
												],
												"src": "26397:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26940:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26950:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26962:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26973:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26958:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26958:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26950:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26997:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27008:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26993:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26993:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27016:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27022:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27012:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27012:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26986:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26986:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26986:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27042:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27176:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3f12d94dd452ac2a3ca7cab5d5d89cd55e903d07a3231732454f5351055f47ba_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27050:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27050:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27042:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f12d94dd452ac2a3ca7cab5d5d89cd55e903d07a3231732454f5351055f47ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26920:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26935:4:13",
														"type": ""
													}
												],
												"src": "26769:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27300:118:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27322:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27330:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27318:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27318:14:13"
																	},
																	{
																		"hexValue": "43616e6e6f742062757920262073656c6c206d6f7265207468616e206d617820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27334:34:13",
																		"type": "",
																		"value": "Cannot buy & sell more than max "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27311:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27311:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27311:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27390:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27398:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27386:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27386:15:13"
																	},
																	{
																		"hexValue": "6c696d6974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27403:7:13",
																		"type": "",
																		"value": "limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27379:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27379:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27379:32:13"
														}
													]
												},
												"name": "store_literal_in_memory_b4c7ac7c638c2c8267bea1b1928e0f2a3c289eeb7ccb96778d2551c9fe24c37c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27292:6:13",
														"type": ""
													}
												],
												"src": "27194:224:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27570:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27580:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27646:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27651:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27587:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27587:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27580:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27752:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b4c7ac7c638c2c8267bea1b1928e0f2a3c289eeb7ccb96778d2551c9fe24c37c",
																	"nodeType": "YulIdentifier",
																	"src": "27663:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27663:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27663:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27765:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27776:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27781:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27772:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27772:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27765:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b4c7ac7c638c2c8267bea1b1928e0f2a3c289eeb7ccb96778d2551c9fe24c37c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27558:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27566:3:13",
														"type": ""
													}
												],
												"src": "27424:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27967:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27977:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27989:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28000:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27985:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27985:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27977:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28024:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28035:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28020:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28020:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28043:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28049:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28039:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28039:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28013:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28013:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28013:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28069:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28203:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b4c7ac7c638c2c8267bea1b1928e0f2a3c289eeb7ccb96778d2551c9fe24c37c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28077:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28077:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28069:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b4c7ac7c638c2c8267bea1b1928e0f2a3c289eeb7ccb96778d2551c9fe24c37c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27947:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27962:4:13",
														"type": ""
													}
												],
												"src": "27796:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28265:147:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28275:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28298:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "28280:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28280:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "28275:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28309:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "28332:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "28314:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28314:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "28309:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28343:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28354:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "28357:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28350:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28350:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "28343:3:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28383:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "28385:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28385:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28385:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28375:1:13"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "28378:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "28372:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28372:10:13"
															},
															"nodeType": "YulIf",
															"src": "28369:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "28252:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "28255:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "28261:3:13",
														"type": ""
													}
												],
												"src": "28221:191:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28463:149:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28473:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28496:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "28478:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28478:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "28473:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28507:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "28530:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "28512:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28512:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "28507:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28541:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28553:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "28556:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "28549:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28549:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "28541:4:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28583:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "28585:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28585:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28585:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "28574:4:13"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "28580:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "28571:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28571:11:13"
															},
															"nodeType": "YulIf",
															"src": "28568:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "28449:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "28452:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "28458:4:13",
														"type": ""
													}
												],
												"src": "28418:194:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28646:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28663:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28666:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28656:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28656:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28656:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28760:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28763:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28753:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28753:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28753:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28784:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28787:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "28777:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28777:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28777:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "28618:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28858:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28868:11:13",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "28876:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "28868:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28896:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "28899:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28889:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28889:14:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28889:14:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28912:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28930:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28933:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "28920:9:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28920:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "28912:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "28845:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "28853:4:13",
														"type": ""
													}
												],
												"src": "28804:141:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28995:49:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29005:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "29023:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29030:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29019:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29019:14:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29035:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "29015:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29015:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "29005:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28978:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "28988:6:13",
														"type": ""
													}
												],
												"src": "28951:93:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29103:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29113:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "29138:4:13"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29144:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "29134:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29134:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "29113:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "29078:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29084:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "29094:8:13",
														"type": ""
													}
												],
												"src": "29050:107:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29239:317:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29249:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "29270:10:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29282:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "29266:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29266:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "29253:9:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29293:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "29324:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29335:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "29305:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29305:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "29297:4:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29411:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "29442:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "29453:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "29423:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29423:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "29411:8:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29471:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29484:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "29495:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "29491:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29491:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "29480:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29480:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "29471:5:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29510:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29523:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "29534:8:13"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "29544:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "29530:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29530:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "29520:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29520:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "29510:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29200:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "29207:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "29219:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "29232:6:13",
														"type": ""
													}
												],
												"src": "29163:393:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29622:82:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29632:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "29690:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "29672:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29672:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "29663:8:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29663:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "29645:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29645:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "29632:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29602:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "29612:9:13",
														"type": ""
													}
												],
												"src": "29562:142:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29757:28:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29767:12:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "29774:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "29767:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29743:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "29753:3:13",
														"type": ""
													}
												],
												"src": "29710:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29867:193:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29877:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "29932:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "29901:30:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29901:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "29881:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "29956:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "29996:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "29990:5:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29990:11:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "30003:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "30035:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "30011:23:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30011:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "29962:27:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29962:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "29949:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29949:105:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29949:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "29844:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "29850:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "29858:7:13",
														"type": ""
													}
												],
												"src": "29791:269:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30115:24:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30125:8:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "30132:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "30125:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "30111:3:13",
														"type": ""
													}
												],
												"src": "30066:73:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30198:136:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30208:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "30222:30:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "30222:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "30212:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "30307:4:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "30313:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "30321:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "30263:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "30263:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30263:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "30184:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "30190:6:13",
														"type": ""
													}
												],
												"src": "30145:189:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30390:136:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30457:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "30501:5:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30508:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "30471:29:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30471:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30471:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "30410:5:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "30417:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "30407:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "30407:14:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "30422:26:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "30424:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "30437:5:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30444:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "30433:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30433:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "30424:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "30404:2:13",
																"statements": []
															},
															"src": "30400:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "30378:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "30385:3:13",
														"type": ""
													}
												],
												"src": "30340:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30611:464:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30637:431:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "30651:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "30699:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "30667:31:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30667:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "30655:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "30718:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "30741:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "30769:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "30751:17:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30751:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "30737:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30737:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "30722:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "30938:27:13",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "30940:23:13",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "30955:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "30940:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "30922:10:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30934:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "30919:2:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30919:18:13"
																		},
																		"nodeType": "YulIf",
																		"src": "30916:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "31007:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "31024:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "31052:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "31034:17:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "31034:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "31020:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "31020:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "30978:28:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30978:80:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30978:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "30628:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30633:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "30625:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "30625:11:13"
															},
															"nodeType": "YulIf",
															"src": "30622:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "30587:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "30594:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "30599:10:13",
														"type": ""
													}
												],
												"src": "30532:543:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31144:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31154:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "31179:4:13"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "31185:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "31175:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31175:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "31154:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "31119:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31125:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "31135:8:13",
														"type": ""
													}
												],
												"src": "31081:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31255:118:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31265:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "31314:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "31317:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "31310:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31310:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "31329:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "31325:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31325:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "31281:28:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31281:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "31277:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31277:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "31269:4:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "31342:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "31356:4:13"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "31362:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "31352:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31352:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "31342:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "31232:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "31238:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "31248:6:13",
														"type": ""
													}
												],
												"src": "31204:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31459:214:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31592:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "31619:4:13"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "31625:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "31600:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31600:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "31592:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "31638:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "31649:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31659:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "31662:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "31655:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31655:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "31646:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31646:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "31638:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "31440:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "31446:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "31454:4:13",
														"type": ""
													}
												],
												"src": "31378:295:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31770:1303:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31781:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "31828:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "31795:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31795:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "31785:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31917:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "31919:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31919:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31919:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "31889:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31897:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "31886:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31886:30:13"
															},
															"nodeType": "YulIf",
															"src": "31883:56:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31949:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "31995:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "31989:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31989:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "31963:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31963:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "31953:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "32094:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "32100:6:13"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "32108:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "32048:45:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "32048:67:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32048:67:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "32125:18:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "32142:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "32129:9:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "32153:17:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "32166:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "32153:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "32217:611:13",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "32231:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "32250:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "32262:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "32258:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "32258:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "32246:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "32246:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "32235:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "32282:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "32328:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "32296:31:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "32296:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "32286:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "32346:10:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32355:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "32350:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "32414:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "32439:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "32457:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "32462:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "32453:3:13"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "32453:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "32447:5:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "32447:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "32432:6:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "32432:42:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "32432:42:13"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "32491:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "32505:6:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "32513:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "32501:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "32501:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "32491:6:13"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "32532:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "32549:9:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "32560:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "32545:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "32545:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "32532:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "32380:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "32383:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "32377:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "32377:14:13"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "32392:21:13",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "32394:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "32403:1:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "32406:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "32399:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "32399:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "32394:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "32373:3:13",
																					"statements": []
																				},
																				"src": "32369:208:13"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "32613:156:13",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "32631:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "32658:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "32663:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "32654:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "32654:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "32648:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "32648:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "32635:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "32698:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "32725:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "32740:6:13"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "32748:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "32736:3:13"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "32736:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "32706:18:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "32706:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "32691:6:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "32691:64:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "32691:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "32596:7:13"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "32605:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "32593:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "32593:19:13"
																				},
																				"nodeType": "YulIf",
																				"src": "32590:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "32789:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "32803:6:13"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "32811:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "32799:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "32799:14:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "32815:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "32795:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "32795:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "32782:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "32782:36:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "32782:36:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "32210:618:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32215:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "32845:222:13",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "32859:14:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "32872:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "32863:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "32896:67:13",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "32914:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "32933:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "32938:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "32929:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "32929:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "32923:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "32923:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "32914:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "32889:6:13"
																				},
																				"nodeType": "YulIf",
																				"src": "32886:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "32983:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "33042:5:13"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "33049:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "32989:52:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "32989:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "32976:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "32976:81:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "32976:81:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "32837:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "32190:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32198:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "32187:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "32187:14:13"
															},
															"nodeType": "YulSwitch",
															"src": "32180:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "31759:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "31765:3:13",
														"type": ""
													}
												],
												"src": "31678:1395:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33107:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33124:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33127:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33117:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "33117:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33117:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33221:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33224:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33214:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "33214:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33214:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33245:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33248:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "33238:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "33238:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33238:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "33079:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33307:143:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33317:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "33340:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "33322:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "33322:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "33317:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "33351:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "33374:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "33356:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "33356:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "33351:1:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33398:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "33400:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33400:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "33400:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "33395:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "33388:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "33388:9:13"
															},
															"nodeType": "YulIf",
															"src": "33385:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "33430:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "33439:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "33442:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "33435:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "33435:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "33430:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "33296:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "33299:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "33305:1:13",
														"type": ""
													}
												],
												"src": "33265:185:13"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Router02_$2800_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Router02_$2800_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Router02_$2800_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$2800__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Router02_$2800_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Account is already blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_30746d5fd3aefc8393bb6dc5cb0e9157927b231c1b6a9f1c23804427d78f58e9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot blacklist self\")\n\n    }\n\n    function abi_encode_t_stringliteral_30746d5fd3aefc8393bb6dc5cb0e9157927b231c1b6a9f1c23804427d78f58e9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_30746d5fd3aefc8393bb6dc5cb0e9157927b231c1b6a9f1c23804427d78f58e9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_30746d5fd3aefc8393bb6dc5cb0e9157927b231c1b6a9f1c23804427d78f58e9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30746d5fd3aefc8393bb6dc5cb0e9157927b231c1b6a9f1c23804427d78f58e9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3c55b8f56c3715bd9a22d992ef46e98dbd5578d1c853a2ff1e6c29147cf488a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"amount should be greate than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3c55b8f56c3715bd9a22d992ef46e98dbd5578d1c853a2ff1e6c29147cf488a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_3c55b8f56c3715bd9a22d992ef46e98dbd5578d1c853a2ff1e6c29147cf488a8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3c55b8f56c3715bd9a22d992ef46e98dbd5578d1c853a2ff1e6c29147cf488a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3c55b8f56c3715bd9a22d992ef46e98dbd5578d1c853a2ff1e6c29147cf488a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Account is not blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_aa39be2dce503f936b45247ea43a2cf859da154cbb440268f1e122cce235bd49(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot remove self from blacklis\")\n\n        mstore(add(memPtr, 32), \"t\")\n\n    }\n\n    function abi_encode_t_stringliteral_aa39be2dce503f936b45247ea43a2cf859da154cbb440268f1e122cce235bd49_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_aa39be2dce503f936b45247ea43a2cf859da154cbb440268f1e122cce235bd49(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aa39be2dce503f936b45247ea43a2cf859da154cbb440268f1e122cce235bd49__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aa39be2dce503f936b45247ea43a2cf859da154cbb440268f1e122cce235bd49_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4e23601e5f0eff9b92f6d8acd455a927d51dd1f6d23ed8a0b187a03c322e2eb3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Marketing wallet cannot be zero \")\n\n        mstore(add(memPtr, 32), \"address\")\n\n    }\n\n    function abi_encode_t_stringliteral_4e23601e5f0eff9b92f6d8acd455a927d51dd1f6d23ed8a0b187a03c322e2eb3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_4e23601e5f0eff9b92f6d8acd455a927d51dd1f6d23ed8a0b187a03c322e2eb3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4e23601e5f0eff9b92f6d8acd455a927d51dd1f6d23ed8a0b187a03c322e2eb3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4e23601e5f0eff9b92f6d8acd455a927d51dd1f6d23ed8a0b187a03c322e2eb3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c980fa47fa3eacfad4b8fb78485548f91ccfcb341cc7d44b4581776d57ff05ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tax percentage cannot exceed 100\")\n\n        mstore(add(memPtr, 32), \"%\")\n\n    }\n\n    function abi_encode_t_stringliteral_c980fa47fa3eacfad4b8fb78485548f91ccfcb341cc7d44b4581776d57ff05ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_c980fa47fa3eacfad4b8fb78485548f91ccfcb341cc7d44b4581776d57ff05ba(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c980fa47fa3eacfad4b8fb78485548f91ccfcb341cc7d44b4581776d57ff05ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c980fa47fa3eacfad4b8fb78485548f91ccfcb341cc7d44b4581776d57ff05ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ab50c48371346557ee1e1a620334035014c71e69572d4d3f31f134c125e07703(memPtr) {\n\n        mstore(add(memPtr, 0), \"Dev wallet cannot be zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_ab50c48371346557ee1e1a620334035014c71e69572d4d3f31f134c125e07703_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_ab50c48371346557ee1e1a620334035014c71e69572d4d3f31f134c125e07703(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ab50c48371346557ee1e1a620334035014c71e69572d4d3f31f134c125e07703__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ab50c48371346557ee1e1a620334035014c71e69572d4d3f31f134c125e07703_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_219bea5a61efa3b24140009507cd3511599910dbff559ec8c9faf0a37bd765f6(memPtr) {\n\n        mstore(add(memPtr, 0), \"stainability wallet cannot be ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function abi_encode_t_stringliteral_219bea5a61efa3b24140009507cd3511599910dbff559ec8c9faf0a37bd765f6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_219bea5a61efa3b24140009507cd3511599910dbff559ec8c9faf0a37bd765f6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_219bea5a61efa3b24140009507cd3511599910dbff559ec8c9faf0a37bd765f6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_219bea5a61efa3b24140009507cd3511599910dbff559ec8c9faf0a37bd765f6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer amount must be greater \")\n\n        mstore(add(memPtr, 32), \"than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_772c14a65a109aa6926c7b0454d5343eee60cf1188cabde66bc21bf88396e37f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender is blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_772c14a65a109aa6926c7b0454d5343eee60cf1188cabde66bc21bf88396e37f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_772c14a65a109aa6926c7b0454d5343eee60cf1188cabde66bc21bf88396e37f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_772c14a65a109aa6926c7b0454d5343eee60cf1188cabde66bc21bf88396e37f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_772c14a65a109aa6926c7b0454d5343eee60cf1188cabde66bc21bf88396e37f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3f12d94dd452ac2a3ca7cab5d5d89cd55e903d07a3231732454f5351055f47ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"Recipient is blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_3f12d94dd452ac2a3ca7cab5d5d89cd55e903d07a3231732454f5351055f47ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_3f12d94dd452ac2a3ca7cab5d5d89cd55e903d07a3231732454f5351055f47ba(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3f12d94dd452ac2a3ca7cab5d5d89cd55e903d07a3231732454f5351055f47ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3f12d94dd452ac2a3ca7cab5d5d89cd55e903d07a3231732454f5351055f47ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b4c7ac7c638c2c8267bea1b1928e0f2a3c289eeb7ccb96778d2551c9fe24c37c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot buy & sell more than max \")\n\n        mstore(add(memPtr, 32), \"limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_b4c7ac7c638c2c8267bea1b1928e0f2a3c289eeb7ccb96778d2551c9fe24c37c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_b4c7ac7c638c2c8267bea1b1928e0f2a3c289eeb7ccb96778d2551c9fe24c37c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b4c7ac7c638c2c8267bea1b1928e0f2a3c289eeb7ccb96778d2551c9fe24c37c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b4c7ac7c638c2c8267bea1b1928e0f2a3c289eeb7ccb96778d2551c9fe24c37c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061020f575f3560e01c806375f0a87411610123578063be20b15d116100ab578063dd62ed3e1161007a578063dd62ed3e1461059f578063e7d88de5146105cf578063f2fde38b146105ed578063fe575a8714610609578063fedcb861146106395761020f565b8063be20b15d14610529578063c04a541414610545578063c816841b14610563578063c8c8ebe4146105815761020f565b806385fbae56116100f257806385fbae561461048557806388696f2f146104a15780638da5cb5b146104bd57806395d89b41146104db578063a9059cbb146104f95761020f565b806375f0a8741461042357806379cc6790146104415780638129fc1c1461045d5780638206cf5a146104675761020f565b806342966c68116101a65780635d098b38116101755780635d098b38146103955780636ddfa4b4146103b157806370a08231146103cd578063715018a6146103fd57806372ac2486146104075761020f565b806342966c681461032557806344337ea1146103415780634fe47f701461035d578063537df3b6146103795761020f565b806318160ddd116101e257806318160ddd1461029d57806323b872dd146102bb578063313ce567146102eb57806340c10f19146103095761020f565b806306fdde0314610213578063095ea7b31461023157806311e91b84146102615780631694505e1461027f575b5f80fd5b61021b610657565b6040516102289190612904565b60405180910390f35b61024b600480360381019061024691906129b5565b6106f5565b6040516102589190612a0d565b60405180910390f35b610269610717565b6040516102769190612a35565b60405180910390f35b61028761071d565b6040516102949190612aa9565b60405180910390f35b6102a5610742565b6040516102b29190612a35565b60405180910390f35b6102d560048036038101906102d09190612ac2565b610759565b6040516102e29190612a0d565b60405180910390f35b6102f3610787565b6040516103009190612b2d565b60405180910390f35b610323600480360381019061031e91906129b5565b61078f565b005b61033f600480360381019061033a9190612b46565b6107a5565b005b61035b60048036038101906103569190612b71565b6107b9565b005b61037760048036038101906103729190612b46565b610918565b005b610393600480360381019061038e9190612b71565b6109a5565b005b6103af60048036038101906103aa9190612b71565b610b02565b005b6103cb60048036038101906103c69190612b46565b610c10565b005b6103e760048036038101906103e29190612b71565b610ca0565b6040516103f49190612a35565b60405180910390f35b610405610cf3565b005b610421600480360381019061041c9190612b71565b610d06565b005b61042b610e17565b6040516104389190612bab565b60405180910390f35b61045b600480360381019061045691906129b5565b610e3a565b005b610465610e5a565b005b61046f6114b4565b60405161047c9190612a35565b60405180910390f35b61049f600480360381019061049a9190612b46565b6114ba565b005b6104bb60048036038101906104b69190612b46565b61154a565b005b6104c56115da565b6040516104d29190612bab565b60405180910390f35b6104e361160f565b6040516104f09190612904565b60405180910390f35b610513600480360381019061050e91906129b5565b6116ad565b6040516105209190612a0d565b60405180910390f35b610543600480360381019061053e9190612b71565b6116cf565b005b61054d6117e0565b60405161055a9190612bab565b60405180910390f35b61056b611805565b6040516105789190612bab565b60405180910390f35b61058961182a565b6040516105969190612a35565b60405180910390f35b6105b960048036038101906105b49190612bc4565b611830565b6040516105c69190612a35565b60405180910390f35b6105d76118c0565b6040516105e49190612a35565b60405180910390f35b61060760048036038101906106029190612b71565b6118c6565b005b610623600480360381019061061e9190612b71565b61194a565b6040516106309190612a0d565b60405180910390f35b61064161199c565b60405161064e9190612bab565b60405180910390f35b60605f6106626119c1565b905080600301805461067390612c2f565b80601f016020809104026020016040519081016040528092919081815260200182805461069f90612c2f565b80156106ea5780601f106106c1576101008083540402835291602001916106ea565b820191905f5260205f20905b8154815290600101906020018083116106cd57829003601f168201915b505050505091505090565b5f806106ff6119e8565b905061070c8185856119ef565b600191505092915050565b60045481565b600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8061074c6119c1565b9050806002015491505090565b5f806107636119e8565b9050610770858285611a01565b61077b858585611a93565b60019150509392505050565b5f6012905090565b610797611b83565b6107a18282611c0a565b5050565b6107b66107b06119e8565b82611c89565b50565b6107c1611b83565b60085f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084290612ca9565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661086a6119e8565b73ffffffffffffffffffffffffffffffffffffffff16036108c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b790612d11565b60405180910390fd5b600160085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610920611b83565b5f8111610962576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095990612d79565b60405180910390fd5b806006819055507f44d540c6079791f805bc9b5d5a643dbf1f545ec260212b2b2478ef9d9ed0768e60065460405161099a9190612a35565b60405180910390a150565b6109ad611b83565b60085f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610a36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2d90612de1565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610a556119e8565b73ffffffffffffffffffffffffffffffffffffffff1603610aab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa290612e6f565b60405180910390fd5b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610b0a611b83565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6f90612efd565b60405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2026f0b479f097ea9d4c74dac26e5271ba4d59931603970da5458ea8aa3dcf375f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610c059190612bab565b60405180910390a150565b610c18611b83565b612710811115610c5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5490612f8b565b60405180910390fd5b806005819055507f28ad5f14a54b644d089d89d6140175fbbf7199a6fa1275e827904c157f491546600554604051610c959190612a35565b60405180910390a150565b5f80610caa6119c1565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b610cfb611b83565b610d045f611d08565b565b610d0e611b83565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7390613019565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7404946ba3969d72cc11e8a0c21a8ab3b8dddeb41e78f235dfad9ffcda3f617c60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610e0c9190612bab565b60405180910390a150565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610e4c82610e466119e8565b83611a01565b610e568282611c89565b5050565b5f610e63611dd9565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610eab5750825b90505f60018367ffffffffffffffff16148015610ede57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610eec575080155b15610f23576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610f70576001855f0160086101000a81548160ff0219169083151502179055505b610f7933611e00565b610f81611e14565b610ff56040518060400160405280600981526020017f54726162616a6f323400000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f5432340000000000000000000000000000000000000000000000000000000000815250611e1e565b7307e43d33ce3ebe06a0bfaffc04aca37c4acbd3a55f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550735ed81f9bc2402a2bbd78e381c9aa1edd99b90a5560015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073d436c10d791c7a9558950a251a049871811bb07060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506110f8610787565b600a6111049190613193565b6305f5e10061111391906131dd565b600781905550600a60038190555060146004819055506096600581905550611139610787565b60ff16600a611148919061321e565b6301312d0061115791906131dd565b60068190555061116933600754611c0a565b5f73d99d1c33f9fc3444f8101754abc46c52416550d1905080600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561120a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061122e919061327c565b73ffffffffffffffffffffffffffffffffffffffff1663c9c65396308373ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611293573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112b7919061327c565b6040518363ffffffff1660e01b81526004016112d49291906132a7565b6020604051808303815f875af11580156112f0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611314919061327c565b600b5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061139f33600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6119ef565b6113eb30600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6119ef565b3373ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60075460405161144a9190612a35565b60405180910390a35083156114ad575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516114a4919061331a565b60405180910390a15b5050505050565b60035481565b6114c2611b83565b612710811115611507576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114fe90612f8b565b60405180910390fd5b806004819055507fd3f51aabcf3bcbd05f9260c8ccec9728da097c538dd797a90f527e255ae3083860045460405161153f9190612a35565b60405180910390a150565b611552611b83565b612710811115611597576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158e90612f8b565b60405180910390fd5b806003819055507f153e5299255e24f1fd2ceee40599bfdc41290fd92340ff6173fc24efd6c299a66003546040516115cf9190612a35565b60405180910390a150565b5f806115e4611e34565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f61161a6119c1565b905080600401805461162b90612c2f565b80601f016020809104026020016040519081016040528092919081815260200182805461165790612c2f565b80156116a25780601f10611679576101008083540402835291602001916116a2565b820191905f5260205f20905b81548152906001019060200180831161168557829003601f168201915b505050505091505090565b5f806116b76119e8565b90506116c4818585611a93565b600191505092915050565b6116d7611b83565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611745576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173c906133a3565b60405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5d4a0c152f269a59530b6c3a84f5a90ac341c463c9e6d5d0d04cf75596776e4f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516117d59190612bab565b60405180910390a150565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b5f8061183a6119c1565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b60055481565b6118ce611b83565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361193e575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016119359190612bab565b60405180910390fd5b61194781611d08565b50565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b6119fc8383836001611e5b565b505050565b5f611a0c8484611830565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611a8d5781811015611a7e578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611a75939291906133c1565b60405180910390fd5b611a8c84848484035f611e5b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b03575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611afa9190612bab565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b73575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611b6a9190612bab565b60405180910390fd5b611b7e838383612038565b505050565b611b8b6119e8565b73ffffffffffffffffffffffffffffffffffffffff16611ba96115da565b73ffffffffffffffffffffffffffffffffffffffff1614611c0857611bcc6119e8565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611bff9190612bab565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c7a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611c719190612bab565b60405180910390fd5b611c855f8383612038565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611cf9575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611cf09190612bab565b60405180910390fd5b611d04825f83612038565b5050565b5f611d11611e34565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611e0861250b565b611e118161254b565b50565b611e1c61250b565b565b611e2661250b565b611e3082826125cf565b5050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f611e646119c1565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611ed6575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611ecd9190612bab565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611f46575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611f3d9190612bab565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115612031578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516120289190612a35565b60405180910390a35b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036120a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161209d90613466565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612114576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161210b906134f4565b60405180910390fd5b5f8111612156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161214d90613582565b60405180910390fd5b60085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156121e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121d7906135ea565b60405180910390fd5b60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161561226a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161226190613652565b60405180910390fd5b6122726115da565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806122dd57506122ae6115da565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061231357503073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b156123285761232383838361260b565b612506565b5f600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161490505f600b5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161490505f805f84806123da5750835b156124d157600654861115612424576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161241b906136e0565b60405180910390fd5b6124308660035461283a565b925061243e8660045461283a565b915061244c8660055461283a565b9050612478885f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff168561260b565b6124a48860015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168461260b565b6124d08860025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361260b565b5b8082846124de91906136fe565b6124e891906136fe565b866124f39190613731565b955061250088888861260b565b50505050505b505050565b61251361285c565b612549576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61255361250b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036125c3575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016125ba9190612bab565b60405180910390fd5b6125cc81611d08565b50565b6125d761250b565b5f6125e06119c1565b9050828160030190816125f39190613925565b50818160040190816126059190613925565b50505050565b5f6126146119c1565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036126685781816002015f82825461265c91906136fe565b9250508190555061273a565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050828110156126f3578481846040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016126ea939291906133c1565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036127835781816002015f82825403925050819055506127cf565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161282c9190612a35565b60405180910390a350505050565b5f612710828461284a91906131dd565b6128549190613a21565b905092915050565b5f612865611dd9565b5f0160089054906101000a900460ff16905090565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156128b1578082015181840152602081019050612896565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6128d68261287a565b6128e08185612884565b93506128f0818560208601612894565b6128f9816128bc565b840191505092915050565b5f6020820190508181035f83015261291c81846128cc565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61295182612928565b9050919050565b61296181612947565b811461296b575f80fd5b50565b5f8135905061297c81612958565b92915050565b5f819050919050565b61299481612982565b811461299e575f80fd5b50565b5f813590506129af8161298b565b92915050565b5f80604083850312156129cb576129ca612924565b5b5f6129d88582860161296e565b92505060206129e9858286016129a1565b9150509250929050565b5f8115159050919050565b612a07816129f3565b82525050565b5f602082019050612a205f8301846129fe565b92915050565b612a2f81612982565b82525050565b5f602082019050612a485f830184612a26565b92915050565b5f819050919050565b5f612a71612a6c612a6784612928565b612a4e565b612928565b9050919050565b5f612a8282612a57565b9050919050565b5f612a9382612a78565b9050919050565b612aa381612a89565b82525050565b5f602082019050612abc5f830184612a9a565b92915050565b5f805f60608486031215612ad957612ad8612924565b5b5f612ae68682870161296e565b9350506020612af78682870161296e565b9250506040612b08868287016129a1565b9150509250925092565b5f60ff82169050919050565b612b2781612b12565b82525050565b5f602082019050612b405f830184612b1e565b92915050565b5f60208284031215612b5b57612b5a612924565b5b5f612b68848285016129a1565b91505092915050565b5f60208284031215612b8657612b85612924565b5b5f612b938482850161296e565b91505092915050565b612ba581612947565b82525050565b5f602082019050612bbe5f830184612b9c565b92915050565b5f8060408385031215612bda57612bd9612924565b5b5f612be78582860161296e565b9250506020612bf88582860161296e565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612c4657607f821691505b602082108103612c5957612c58612c02565b5b50919050565b7f4163636f756e7420697320616c726561647920626c61636b6c697374656400005f82015250565b5f612c93601e83612884565b9150612c9e82612c5f565b602082019050919050565b5f6020820190508181035f830152612cc081612c87565b9050919050565b7f43616e6e6f7420626c61636b6c6973742073656c6600000000000000000000005f82015250565b5f612cfb601583612884565b9150612d0682612cc7565b602082019050919050565b5f6020820190508181035f830152612d2881612cef565b9050919050565b7f616d6f756e742073686f756c6420626520677265617465207468616e203000005f82015250565b5f612d63601e83612884565b9150612d6e82612d2f565b602082019050919050565b5f6020820190508181035f830152612d9081612d57565b9050919050565b7f4163636f756e74206973206e6f7420626c61636b6c69737465640000000000005f82015250565b5f612dcb601a83612884565b9150612dd682612d97565b602082019050919050565b5f6020820190508181035f830152612df881612dbf565b9050919050565b7f43616e6e6f742072656d6f76652073656c662066726f6d20626c61636b6c69735f8201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b5f612e59602183612884565b9150612e6482612dff565b604082019050919050565b5f6020820190508181035f830152612e8681612e4d565b9050919050565b7f4d61726b6574696e672077616c6c65742063616e6e6f74206265207a65726f205f8201527f6164647265737300000000000000000000000000000000000000000000000000602082015250565b5f612ee7602783612884565b9150612ef282612e8d565b604082019050919050565b5f6020820190508181035f830152612f1481612edb565b9050919050565b7f5461782070657263656e746167652063616e6e6f7420657863656564203130305f8201527f2500000000000000000000000000000000000000000000000000000000000000602082015250565b5f612f75602183612884565b9150612f8082612f1b565b604082019050919050565b5f6020820190508181035f830152612fa281612f69565b9050919050565b7f4465762077616c6c65742063616e6e6f74206265207a65726f206164647265735f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f613003602183612884565b915061300e82612fa9565b604082019050919050565b5f6020820190508181035f83015261303081612ff7565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156130b95780860481111561309557613094613037565b5b60018516156130a45780820291505b80810290506130b285613064565b9450613079565b94509492505050565b5f826130d1576001905061318c565b816130de575f905061318c565b81600181146130f457600281146130fe5761312d565b600191505061318c565b60ff8411156131105761310f613037565b5b8360020a91508482111561312757613126613037565b5b5061318c565b5060208310610133831016604e8410600b84101617156131625782820a90508381111561315d5761315c613037565b5b61318c565b61316f8484846001613070565b9250905081840481111561318657613185613037565b5b81810290505b9392505050565b5f61319d82612982565b91506131a883612b12565b92506131d57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846130c2565b905092915050565b5f6131e782612982565b91506131f283612982565b925082820261320081612982565b9150828204841483151761321757613216613037565b5b5092915050565b5f61322882612982565b915061323383612982565b92506132607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846130c2565b905092915050565b5f8151905061327681612958565b92915050565b5f6020828403121561329157613290612924565b5b5f61329e84828501613268565b91505092915050565b5f6040820190506132ba5f830185612b9c565b6132c76020830184612b9c565b9392505050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f6133046132ff6132fa846132ce565b612a4e565b6132d7565b9050919050565b613314816132ea565b82525050565b5f60208201905061332d5f83018461330b565b92915050565b7f737461696e6162696c6974792077616c6c65742063616e6e6f74206265207a655f8201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b5f61338d602a83612884565b915061339882613333565b604082019050919050565b5f6020820190508181035f8301526133ba81613381565b9050919050565b5f6060820190506133d45f830186612b9c565b6133e16020830185612a26565b6133ee6040830184612a26565b949350505050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f613450602583612884565b915061345b826133f6565b604082019050919050565b5f6020820190508181035f83015261347d81613444565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f6134de602383612884565b91506134e982613484565b604082019050919050565b5f6020820190508181035f83015261350b816134d2565b9050919050565b7f5472616e7366657220616d6f756e74206d7573742062652067726561746572205f8201527f7468616e207a65726f0000000000000000000000000000000000000000000000602082015250565b5f61356c602983612884565b915061357782613512565b604082019050919050565b5f6020820190508181035f83015261359981613560565b9050919050565b7f53656e64657220697320626c61636b6c697374656400000000000000000000005f82015250565b5f6135d4601583612884565b91506135df826135a0565b602082019050919050565b5f6020820190508181035f830152613601816135c8565b9050919050565b7f526563697069656e7420697320626c61636b6c697374656400000000000000005f82015250565b5f61363c601883612884565b915061364782613608565b602082019050919050565b5f6020820190508181035f83015261366981613630565b9050919050565b7f43616e6e6f742062757920262073656c6c206d6f7265207468616e206d6178205f8201527f6c696d6974000000000000000000000000000000000000000000000000000000602082015250565b5f6136ca602583612884565b91506136d582613670565b604082019050919050565b5f6020820190508181035f8301526136f7816136be565b9050919050565b5f61370882612982565b915061371383612982565b925082820190508082111561372b5761372a613037565b5b92915050565b5f61373b82612982565b915061374683612982565b925082820390508181111561375e5761375d613037565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026137ed7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826137b2565b6137f786836137b2565b95508019841693508086168417925050509392505050565b5f61382961382461381f84612982565b612a4e565b612982565b9050919050565b5f819050919050565b6138428361380f565b61385661384e82613830565b8484546137be565b825550505050565b5f90565b61386a61385e565b613875818484613839565b505050565b5b818110156138985761388d5f82613862565b60018101905061387b565b5050565b601f8211156138dd576138ae81613791565b6138b7846137a3565b810160208510156138c6578190505b6138da6138d2856137a3565b83018261387a565b50505b505050565b5f82821c905092915050565b5f6138fd5f19846008026138e2565b1980831691505092915050565b5f61391583836138ee565b9150826002028217905092915050565b61392e8261287a565b67ffffffffffffffff81111561394757613946613764565b5b6139518254612c2f565b61395c82828561389c565b5f60209050601f83116001811461398d575f841561397b578287015190505b613985858261390a565b8655506139ec565b601f19841661399b86613791565b5f5b828110156139c25784890151825560018201915060208501945060208101905061399d565b868310156139df57848901516139db601f8916826138ee565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f613a2b82612982565b9150613a3683612982565b925082613a4657613a456139f4565b5b82820490509291505056fea2646970667358221220a80e2191841344856faefab25e64a0e91ed1218c25f5d7b50a76234abf059cc164736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75F0A874 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xBE20B15D GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x59F JUMPI DUP1 PUSH4 0xE7D88DE5 EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x609 JUMPI DUP1 PUSH4 0xFEDCB861 EQ PUSH2 0x639 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0xBE20B15D EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0xC04A5414 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0xC8C8EBE4 EQ PUSH2 0x581 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x85FBAE56 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x85FBAE56 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0x88696F2F EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4F9 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x75F0A874 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x8206CF5A EQ PUSH2 0x467 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x5D098B38 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x5D098B38 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x6DDFA4B4 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0x72AC2486 EQ PUSH2 0x407 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x44337EA1 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x4FE47F70 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x537DF3B6 EQ PUSH2 0x379 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x309 JUMPI PUSH2 0x20F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x11E91B84 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x1694505E EQ PUSH2 0x27F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x21B PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x2904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x29B5 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x2A0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x2AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH2 0x742 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x2AC2 JUMP JUMPDEST PUSH2 0x759 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x2A0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F3 PUSH2 0x787 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x2B2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x29B5 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x2B46 JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x2B71 JUMP JUMPDEST PUSH2 0x7B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x377 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x2B46 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x393 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x2B71 JUMP JUMPDEST PUSH2 0x9A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x2B71 JUMP JUMPDEST PUSH2 0xB02 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x2B46 JUMP JUMPDEST PUSH2 0xC10 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x2B71 JUMP JUMPDEST PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x405 PUSH2 0xCF3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x421 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x2B71 JUMP JUMPDEST PUSH2 0xD06 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42B PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x29B5 JUMP JUMPDEST PUSH2 0xE3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x465 PUSH2 0xE5A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46F PUSH2 0x14B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x2B46 JUMP JUMPDEST PUSH2 0x14BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B6 SWAP2 SWAP1 PUSH2 0x2B46 JUMP JUMPDEST PUSH2 0x154A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C5 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x2904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x513 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x29B5 JUMP JUMPDEST PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x2A0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x543 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x2B71 JUMP JUMPDEST PUSH2 0x16CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x54D PUSH2 0x17E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x56B PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x578 SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x589 PUSH2 0x182A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B4 SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH2 0x1830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D7 PUSH2 0x18C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E4 SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x607 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x2B71 JUMP JUMPDEST PUSH2 0x18C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x623 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x2B71 JUMP JUMPDEST PUSH2 0x194A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x630 SWAP2 SWAP1 PUSH2 0x2A0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x641 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x64E SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x662 PUSH2 0x19C1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x673 SWAP1 PUSH2 0x2C2F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x69F SWAP1 PUSH2 0x2C2F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6FF PUSH2 0x19E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x70C DUP2 DUP6 DUP6 PUSH2 0x19EF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x74C PUSH2 0x19C1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x763 PUSH2 0x19E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x770 DUP6 DUP3 DUP6 PUSH2 0x1A01 JUMP JUMPDEST PUSH2 0x77B DUP6 DUP6 DUP6 PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x797 PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0x7A1 DUP3 DUP3 PUSH2 0x1C0A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7B6 PUSH2 0x7B0 PUSH2 0x19E8 JUMP JUMPDEST DUP3 PUSH2 0x1C89 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7C1 PUSH2 0x1B83 JUMP JUMPDEST PUSH1 0x8 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x842 SWAP1 PUSH2 0x2CA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x86A PUSH2 0x19E8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B7 SWAP1 PUSH2 0x2D11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x920 PUSH2 0x1B83 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x962 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x959 SWAP1 PUSH2 0x2D79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH32 0x44D540C6079791F805BC9B5D5A643DBF1F545EC260212B2B2478EF9D9ED0768E PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x99A SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x9AD PUSH2 0x1B83 JUMP JUMPDEST PUSH1 0x8 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP1 PUSH2 0x2DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA55 PUSH2 0x19E8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA2 SWAP1 PUSH2 0x2E6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xB0A PUSH2 0x1B83 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6F SWAP1 PUSH2 0x2EFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2026F0B479F097EA9D4C74DAC26E5271BA4D59931603970DA5458EA8AA3DCF37 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0xC05 SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xC18 PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xC5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC54 SWAP1 PUSH2 0x2F8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH32 0x28AD5F14A54B644D089D89D6140175FBBF7199A6FA1275E827904C157F491546 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH2 0xC95 SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCAA PUSH2 0x19C1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCFB PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0xD04 PUSH0 PUSH2 0x1D08 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD0E PUSH2 0x1B83 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD73 SWAP1 PUSH2 0x3019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7404946BA3969D72CC11E8A0C21A8AB3B8DDDEB41E78F235DFAD9FFCDA3F617C PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0xE0C SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xE4C DUP3 PUSH2 0xE46 PUSH2 0x19E8 JUMP JUMPDEST DUP4 PUSH2 0x1A01 JUMP JUMPDEST PUSH2 0xE56 DUP3 DUP3 PUSH2 0x1C89 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE63 PUSH2 0x1DD9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xEAB JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xEDE JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xEEC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xF23 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xF70 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xF79 CALLER PUSH2 0x1E00 JUMP JUMPDEST PUSH2 0xF81 PUSH2 0x1E14 JUMP JUMPDEST PUSH2 0xFF5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54726162616A6F32340000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5432340000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1E1E JUMP JUMPDEST PUSH20 0x7E43D33CE3EBE06A0BFAFFC04ACA37C4ACBD3A5 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x5ED81F9BC2402A2BBD78E381C9AA1EDD99B90A55 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xD436C10D791C7A9558950A251A049871811BB070 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x10F8 PUSH2 0x787 JUMP JUMPDEST PUSH1 0xA PUSH2 0x1104 SWAP2 SWAP1 PUSH2 0x3193 JUMP JUMPDEST PUSH4 0x5F5E100 PUSH2 0x1113 SWAP2 SWAP1 PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x14 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x96 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x1139 PUSH2 0x787 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x1148 SWAP2 SWAP1 PUSH2 0x321E JUMP JUMPDEST PUSH4 0x1312D00 PUSH2 0x1157 SWAP2 SWAP1 PUSH2 0x31DD JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x1169 CALLER PUSH1 0x7 SLOAD PUSH2 0x1C0A JUMP JUMPDEST PUSH0 PUSH20 0xD99D1C33F9FC3444F8101754ABC46C52416550D1 SWAP1 POP DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x120A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x122E SWAP2 SWAP1 PUSH2 0x327C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC9C65396 ADDRESS DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1293 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12B7 SWAP2 SWAP1 PUSH2 0x327C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D4 SWAP3 SWAP2 SWAP1 PUSH2 0x32A7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12F0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1314 SWAP2 SWAP1 PUSH2 0x327C JUMP JUMPDEST PUSH1 0xB PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x139F CALLER PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x19EF JUMP JUMPDEST PUSH2 0x13EB ADDRESS PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x19EF JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH2 0x144A SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP4 ISZERO PUSH2 0x14AD JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x14A4 SWAP2 SWAP1 PUSH2 0x331A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x14C2 PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x1507 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FE SWAP1 PUSH2 0x2F8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xD3F51AABCF3BCBD05F9260C8CCEC9728DA097C538DD797A90F527E255AE30838 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x153F SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1552 PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x1597 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x158E SWAP1 PUSH2 0x2F8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x153E5299255E24F1FD2CEEE40599BFDC41290FD92340FF6173FC24EFD6C299A6 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH2 0x15CF SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x15E4 PUSH2 0x1E34 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x161A PUSH2 0x19C1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x162B SWAP1 PUSH2 0x2C2F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1657 SWAP1 PUSH2 0x2C2F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16A2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1679 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16A2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1685 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x16B7 PUSH2 0x19E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x16C4 DUP2 DUP6 DUP6 PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D7 PUSH2 0x1B83 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1745 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x173C SWAP1 PUSH2 0x33A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x5D4A0C152F269A59530B6C3A84F5A90AC341C463C9E6D5D0D04CF75596776E4F PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x17D5 SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x183A PUSH2 0x19C1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18CE PUSH2 0x1B83 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x193E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1935 SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1947 DUP2 PUSH2 0x1D08 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x19FC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1E5B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A0C DUP5 DUP5 PUSH2 0x1830 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1A8D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1A7E JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A75 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x33C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A8C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1E5B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B03 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AFA SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B73 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6A SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B7E DUP4 DUP4 DUP4 PUSH2 0x2038 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1B8B PUSH2 0x19E8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BA9 PUSH2 0x15DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C08 JUMPI PUSH2 0x1BCC PUSH2 0x19E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BFF SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C7A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C71 SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C85 PUSH0 DUP4 DUP4 PUSH2 0x2038 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CF9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF0 SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D04 DUP3 PUSH0 DUP4 PUSH2 0x2038 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D11 PUSH2 0x1E34 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E08 PUSH2 0x250B JUMP JUMPDEST PUSH2 0x1E11 DUP2 PUSH2 0x254B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E1C PUSH2 0x250B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1E26 PUSH2 0x250B JUMP JUMPDEST PUSH2 0x1E30 DUP3 DUP3 PUSH2 0x25CF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1E64 PUSH2 0x19C1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ED6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ECD SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F46 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3D SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x2031 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2028 SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x209D SWAP1 PUSH2 0x3466 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2114 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x210B SWAP1 PUSH2 0x34F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x2156 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x214D SWAP1 PUSH2 0x3582 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x21E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21D7 SWAP1 PUSH2 0x35EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x226A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2261 SWAP1 PUSH2 0x3652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2272 PUSH2 0x15DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x22DD JUMPI POP PUSH2 0x22AE PUSH2 0x15DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x2313 JUMPI POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x2328 JUMPI PUSH2 0x2323 DUP4 DUP4 DUP4 PUSH2 0x260B JUMP JUMPDEST PUSH2 0x2506 JUMP JUMPDEST PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 PUSH1 0xB PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH0 DUP1 PUSH0 DUP5 DUP1 PUSH2 0x23DA JUMPI POP DUP4 JUMPDEST ISZERO PUSH2 0x24D1 JUMPI PUSH1 0x6 SLOAD DUP7 GT ISZERO PUSH2 0x2424 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x241B SWAP1 PUSH2 0x36E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2430 DUP7 PUSH1 0x3 SLOAD PUSH2 0x283A JUMP JUMPDEST SWAP3 POP PUSH2 0x243E DUP7 PUSH1 0x4 SLOAD PUSH2 0x283A JUMP JUMPDEST SWAP2 POP PUSH2 0x244C DUP7 PUSH1 0x5 SLOAD PUSH2 0x283A JUMP JUMPDEST SWAP1 POP PUSH2 0x2478 DUP9 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x260B JUMP JUMPDEST PUSH2 0x24A4 DUP9 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x260B JUMP JUMPDEST PUSH2 0x24D0 DUP9 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x260B JUMP JUMPDEST JUMPDEST DUP1 DUP3 DUP5 PUSH2 0x24DE SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST PUSH2 0x24E8 SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST DUP7 PUSH2 0x24F3 SWAP2 SWAP1 PUSH2 0x3731 JUMP JUMPDEST SWAP6 POP PUSH2 0x2500 DUP9 DUP9 DUP9 PUSH2 0x260B JUMP JUMPDEST POP POP POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2513 PUSH2 0x285C JUMP JUMPDEST PUSH2 0x2549 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2553 PUSH2 0x250B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x25C3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25BA SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25CC DUP2 PUSH2 0x1D08 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x25D7 PUSH2 0x250B JUMP JUMPDEST PUSH0 PUSH2 0x25E0 PUSH2 0x19C1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x25F3 SWAP2 SWAP1 PUSH2 0x3925 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x2605 SWAP2 SWAP1 PUSH2 0x3925 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2614 PUSH2 0x19C1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2668 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x265C SWAP2 SWAP1 PUSH2 0x36FE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x273A JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x26F3 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26EA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x33C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2783 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x27CF JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x282C SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2710 DUP3 DUP5 PUSH2 0x284A SWAP2 SWAP1 PUSH2 0x31DD JUMP JUMPDEST PUSH2 0x2854 SWAP2 SWAP1 PUSH2 0x3A21 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2865 PUSH2 0x1DD9 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28B1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2896 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28D6 DUP3 PUSH2 0x287A JUMP JUMPDEST PUSH2 0x28E0 DUP2 DUP6 PUSH2 0x2884 JUMP JUMPDEST SWAP4 POP PUSH2 0x28F0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2894 JUMP JUMPDEST PUSH2 0x28F9 DUP2 PUSH2 0x28BC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x291C DUP2 DUP5 PUSH2 0x28CC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2951 DUP3 PUSH2 0x2928 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2961 DUP2 PUSH2 0x2947 JUMP JUMPDEST DUP2 EQ PUSH2 0x296B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x297C DUP2 PUSH2 0x2958 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2994 DUP2 PUSH2 0x2982 JUMP JUMPDEST DUP2 EQ PUSH2 0x299E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29AF DUP2 PUSH2 0x298B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29CB JUMPI PUSH2 0x29CA PUSH2 0x2924 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29D8 DUP6 DUP3 DUP7 ADD PUSH2 0x296E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29E9 DUP6 DUP3 DUP7 ADD PUSH2 0x29A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A07 DUP2 PUSH2 0x29F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A20 PUSH0 DUP4 ADD DUP5 PUSH2 0x29FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A2F DUP2 PUSH2 0x2982 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A48 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A71 PUSH2 0x2A6C PUSH2 0x2A67 DUP5 PUSH2 0x2928 JUMP JUMPDEST PUSH2 0x2A4E JUMP JUMPDEST PUSH2 0x2928 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A82 DUP3 PUSH2 0x2A57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A93 DUP3 PUSH2 0x2A78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AA3 DUP2 PUSH2 0x2A89 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2ABC PUSH0 DUP4 ADD DUP5 PUSH2 0x2A9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AD9 JUMPI PUSH2 0x2AD8 PUSH2 0x2924 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2AE6 DUP7 DUP3 DUP8 ADD PUSH2 0x296E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2AF7 DUP7 DUP3 DUP8 ADD PUSH2 0x296E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2B08 DUP7 DUP3 DUP8 ADD PUSH2 0x29A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B27 DUP2 PUSH2 0x2B12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B40 PUSH0 DUP4 ADD DUP5 PUSH2 0x2B1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B5B JUMPI PUSH2 0x2B5A PUSH2 0x2924 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B68 DUP5 DUP3 DUP6 ADD PUSH2 0x29A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B86 JUMPI PUSH2 0x2B85 PUSH2 0x2924 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B93 DUP5 DUP3 DUP6 ADD PUSH2 0x296E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BA5 DUP2 PUSH2 0x2947 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BBE PUSH0 DUP4 ADD DUP5 PUSH2 0x2B9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BDA JUMPI PUSH2 0x2BD9 PUSH2 0x2924 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BE7 DUP6 DUP3 DUP7 ADD PUSH2 0x296E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2BF8 DUP6 DUP3 DUP7 ADD PUSH2 0x296E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2C46 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2C59 JUMPI PUSH2 0x2C58 PUSH2 0x2C02 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E7420697320616C726561647920626C61636B6C69737465640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C93 PUSH1 0x1E DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C9E DUP3 PUSH2 0x2C5F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CC0 DUP2 PUSH2 0x2C87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420626C61636B6C6973742073656C660000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CFB PUSH1 0x15 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D06 DUP3 PUSH2 0x2CC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D28 DUP2 PUSH2 0x2CEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616D6F756E742073686F756C6420626520677265617465207468616E20300000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D63 PUSH1 0x1E DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D6E DUP3 PUSH2 0x2D2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D90 DUP2 PUSH2 0x2D57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4163636F756E74206973206E6F7420626C61636B6C6973746564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DCB PUSH1 0x1A DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DD6 DUP3 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DF8 DUP2 PUSH2 0x2DBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742072656D6F76652073656C662066726F6D20626C61636B6C6973 PUSH0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E59 PUSH1 0x21 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E64 DUP3 PUSH2 0x2DFF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E86 DUP2 PUSH2 0x2E4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D61726B6574696E672077616C6C65742063616E6E6F74206265207A65726F20 PUSH0 DUP3 ADD MSTORE PUSH32 0x6164647265737300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EE7 PUSH1 0x27 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EF2 DUP3 PUSH2 0x2E8D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F14 DUP2 PUSH2 0x2EDB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5461782070657263656E746167652063616E6E6F742065786365656420313030 PUSH0 DUP3 ADD MSTORE PUSH32 0x2500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F75 PUSH1 0x21 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F80 DUP3 PUSH2 0x2F1B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2FA2 DUP2 PUSH2 0x2F69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465762077616C6C65742063616E6E6F74206265207A65726F20616464726573 PUSH0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3003 PUSH1 0x21 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x300E DUP3 PUSH2 0x2FA9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3030 DUP2 PUSH2 0x2FF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x30B9 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x3095 JUMPI PUSH2 0x3094 PUSH2 0x3037 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x30A4 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x30B2 DUP6 PUSH2 0x3064 JUMP JUMPDEST SWAP5 POP PUSH2 0x3079 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x30D1 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x318C JUMP JUMPDEST DUP2 PUSH2 0x30DE JUMPI PUSH0 SWAP1 POP PUSH2 0x318C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x30F4 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x30FE JUMPI PUSH2 0x312D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x318C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3110 JUMPI PUSH2 0x310F PUSH2 0x3037 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x3127 JUMPI PUSH2 0x3126 PUSH2 0x3037 JUMP JUMPDEST JUMPDEST POP PUSH2 0x318C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x3162 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x315D JUMPI PUSH2 0x315C PUSH2 0x3037 JUMP JUMPDEST JUMPDEST PUSH2 0x318C JUMP JUMPDEST PUSH2 0x316F DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x3070 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x3186 JUMPI PUSH2 0x3185 PUSH2 0x3037 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x319D DUP3 PUSH2 0x2982 JUMP JUMPDEST SWAP2 POP PUSH2 0x31A8 DUP4 PUSH2 0x2B12 JUMP JUMPDEST SWAP3 POP PUSH2 0x31D5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x30C2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31E7 DUP3 PUSH2 0x2982 JUMP JUMPDEST SWAP2 POP PUSH2 0x31F2 DUP4 PUSH2 0x2982 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3200 DUP2 PUSH2 0x2982 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3217 JUMPI PUSH2 0x3216 PUSH2 0x3037 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3228 DUP3 PUSH2 0x2982 JUMP JUMPDEST SWAP2 POP PUSH2 0x3233 DUP4 PUSH2 0x2982 JUMP JUMPDEST SWAP3 POP PUSH2 0x3260 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x30C2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3276 DUP2 PUSH2 0x2958 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3291 JUMPI PUSH2 0x3290 PUSH2 0x2924 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x329E DUP5 DUP3 DUP6 ADD PUSH2 0x3268 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x32BA PUSH0 DUP4 ADD DUP6 PUSH2 0x2B9C JUMP JUMPDEST PUSH2 0x32C7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B9C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3304 PUSH2 0x32FF PUSH2 0x32FA DUP5 PUSH2 0x32CE JUMP JUMPDEST PUSH2 0x2A4E JUMP JUMPDEST PUSH2 0x32D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3314 DUP2 PUSH2 0x32EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x332D PUSH0 DUP4 ADD DUP5 PUSH2 0x330B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x737461696E6162696C6974792077616C6C65742063616E6E6F74206265207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x338D PUSH1 0x2A DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x3398 DUP3 PUSH2 0x3333 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x33BA DUP2 PUSH2 0x3381 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x33D4 PUSH0 DUP4 ADD DUP7 PUSH2 0x2B9C JUMP JUMPDEST PUSH2 0x33E1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2A26 JUMP JUMPDEST PUSH2 0x33EE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2A26 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3450 PUSH1 0x25 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x345B DUP3 PUSH2 0x33F6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x347D DUP2 PUSH2 0x3444 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x34DE PUSH1 0x23 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x34E9 DUP3 PUSH2 0x3484 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x350B DUP2 PUSH2 0x34D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH0 DUP3 ADD MSTORE PUSH32 0x7468616E207A65726F0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x356C PUSH1 0x29 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x3577 DUP3 PUSH2 0x3512 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3599 DUP2 PUSH2 0x3560 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656E64657220697320626C61636B6C69737465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x35D4 PUSH1 0x15 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x35DF DUP3 PUSH2 0x35A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3601 DUP2 PUSH2 0x35C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526563697069656E7420697320626C61636B6C69737465640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x363C PUSH1 0x18 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x3647 DUP3 PUSH2 0x3608 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3669 DUP2 PUSH2 0x3630 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F742062757920262073656C6C206D6F7265207468616E206D617820 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C696D6974000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x36CA PUSH1 0x25 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP2 POP PUSH2 0x36D5 DUP3 PUSH2 0x3670 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x36F7 DUP2 PUSH2 0x36BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3708 DUP3 PUSH2 0x2982 JUMP JUMPDEST SWAP2 POP PUSH2 0x3713 DUP4 PUSH2 0x2982 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x372B JUMPI PUSH2 0x372A PUSH2 0x3037 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x373B DUP3 PUSH2 0x2982 JUMP JUMPDEST SWAP2 POP PUSH2 0x3746 DUP4 PUSH2 0x2982 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x375E JUMPI PUSH2 0x375D PUSH2 0x3037 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x37ED PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x37B2 JUMP JUMPDEST PUSH2 0x37F7 DUP7 DUP4 PUSH2 0x37B2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3829 PUSH2 0x3824 PUSH2 0x381F DUP5 PUSH2 0x2982 JUMP JUMPDEST PUSH2 0x2A4E JUMP JUMPDEST PUSH2 0x2982 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3842 DUP4 PUSH2 0x380F JUMP JUMPDEST PUSH2 0x3856 PUSH2 0x384E DUP3 PUSH2 0x3830 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x37BE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x386A PUSH2 0x385E JUMP JUMPDEST PUSH2 0x3875 DUP2 DUP5 DUP5 PUSH2 0x3839 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3898 JUMPI PUSH2 0x388D PUSH0 DUP3 PUSH2 0x3862 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x387B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x38DD JUMPI PUSH2 0x38AE DUP2 PUSH2 0x3791 JUMP JUMPDEST PUSH2 0x38B7 DUP5 PUSH2 0x37A3 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x38C6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x38DA PUSH2 0x38D2 DUP6 PUSH2 0x37A3 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x387A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x38FD PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x38E2 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3915 DUP4 DUP4 PUSH2 0x38EE JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x392E DUP3 PUSH2 0x287A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3947 JUMPI PUSH2 0x3946 PUSH2 0x3764 JUMP JUMPDEST JUMPDEST PUSH2 0x3951 DUP3 SLOAD PUSH2 0x2C2F JUMP JUMPDEST PUSH2 0x395C DUP3 DUP3 DUP6 PUSH2 0x389C JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x398D JUMPI PUSH0 DUP5 ISZERO PUSH2 0x397B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3985 DUP6 DUP3 PUSH2 0x390A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x39EC JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x399B DUP7 PUSH2 0x3791 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x39C2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x399D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x39DF JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x39DB PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x38EE JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3A2B DUP3 PUSH2 0x2982 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A36 DUP4 PUSH2 0x2982 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3A46 JUMPI PUSH2 0x3A45 PUSH2 0x39F4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xE 0x21 SWAP2 DUP5 SGT PREVRANDAO DUP6 PUSH16 0xAEFAB25E64A0E91ED1218C25F5D7B50A PUSH23 0x234ABF059CC164736F6C63430008140033000000000000 ",
							"sourceMap": "2426:12103:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5505:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2824:36:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3121:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4191:152:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6251:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4049:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6191:95:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;931:87:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10334:250:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8202:225;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10913:263;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8703:243;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7627:289;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4401:171:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;:::i;:::-;;9227:248:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2655:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1334:158:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4498:1403:8;;;:::i;:::-;;2782:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7342:277;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6678:268;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2441:144:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3268:148:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4767:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9761:266:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2693:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3169:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2913:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5003:195:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2867:39:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11574:116:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2733:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3011:144:2;3056:13;3081:22;3106:18;:16;:18::i;:::-;3081:43;;3141:1;:7;;3134:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144;:::o;5505:186::-;5578:4;5594:13;5610:12;:10;:12::i;:::-;5594:28;;5632:31;5641:5;5648:7;5657:5;5632:8;:31::i;:::-;5680:4;5673:11;;;5505:186;;;;:::o;2824:36:8:-;;;;:::o;3121:41::-;;;;;;;;;;;;;:::o;4191:152:2:-;4243:7;4262:22;4287:18;:16;:18::i;:::-;4262:43;;4322:1;:14;;;4315:21;;;4191:152;:::o;6251:244::-;6338:4;6354:15;6372:12;:10;:12::i;:::-;6354:30;;6394:37;6410:4;6416:7;6425:5;6394:15;:37::i;:::-;6441:26;6451:4;6457:2;6461:5;6441:9;:26::i;:::-;6484:4;6477:11;;;6251:244;;;;;:::o;4049:82::-;4098:5;4122:2;4115:9;;4049:82;:::o;6191:95:8:-;2334:13:0;:11;:13::i;:::-;6261:17:8::1;6267:2;6271:6;6261:5;:17::i;:::-;6191:95:::0;;:::o;931:87:3:-;985:26;991:12;:10;:12::i;:::-;1005:5;985;:26::i;:::-;931:87;:::o;10334:250:8:-;2334:13:0;:11;:13::i;:::-;10413:12:8::1;:21;10426:7;10413:21;;;;;;;;;;;;;;;;;;;;;;;;;10412:22;10404:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10504:7;10488:23;;:12;:10;:12::i;:::-;:23;;::::0;10480:57:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;10572:4;10548:12;:21;10561:7;10548:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;10334:250:::0;:::o;8202:225::-;2334:13:0;:11;:13::i;:::-;8289:1:8::1;8279:7;:11;8271:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;8358:7;8335:20;:30;;;;8381:38;8398:20;;8381:38;;;;;;:::i;:::-;;;;;;;;8202:225:::0;:::o;10913:263::-;2334:13:0;:11;:13::i;:::-;10996:12:8::1;:21;11009:7;10996:21;;;;;;;;;;;;;;;;;;;;;;;;;10988:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;11083:7;11067:23;;:12;:10;:12::i;:::-;:23;;::::0;11059:69:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;11163:5;11139:12;:21;11152:7;11139:21;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;10913:263:::0;:::o;8703:243::-;2334:13:0;:11;:13::i;:::-;8804:1:8::1;8785:21;;:7;:21;;::::0;8777:72:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;8877:7;8859:15;::::0;:25:::1;;;;;;;;;;;;;;;;;;8899:39;8922:15;::::0;::::1;;;;;;;;8899:39;;;;;;:::i;:::-;;;;;;;;8703:243:::0;:::o;7627:289::-;2334:13:0;:11;:13::i;:::-;7743:5:8::1;7725:14;:23;;7717:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7822:14;7796:23;:40;;;;7852:56;7884:23;;7852:56;;;;;;:::i;:::-;;;;;;;;7627:289:::0;:::o;4401:171:2:-;4466:7;4485:22;4510:18;:16;:18::i;:::-;4485:43;;4545:1;:11;;:20;4557:7;4545:20;;;;;;;;;;;;;;;;4538:27;;;4401:171;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;9227:248:8:-;2334:13:0;:11;:13::i;:::-;9331:1:8::1;9312:21;;:7;:21;;::::0;9304:66:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;9401:7;9381:17;;:27;;;;;;;;;;;;;;;;;;9424:43;9449:17;;;;;;;;;;;9424:43;;;;;;:::i;:::-;;;;;;;;9227:248:::0;:::o;2655:31::-;;;;;;;;;;;;:::o;1334:158:3:-;1409:45;1425:7;1434:12;:10;:12::i;:::-;1448:5;1409:15;:45::i;:::-;1464:21;1470:7;1479:5;1464;:21::i;:::-;1334:158;;:::o;4498:1403:8:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;4550:26:8::1;4565:10;4550:14;:26::i;:::-;4587:22;:20;:22::i;:::-;4620:31;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:12:::1;:31::i;:::-;4679:42;4662:15;::::0;:59:::1;;;;;;;;;;;;;;;;;;4771:42;4751:17;;:62;;;;;;;;;;;;;;;;;;4868:42;4845:20;;:65;;;;;;;;;;;;;;;;;;4978:10;:8;:10::i;:::-;4972:2;:16;;;;:::i;:::-;4960:9;:28;;;;:::i;:::-;4945:12;:43;;;;5020:2;4999:18;:23;;;;5065:2;5042:20;:25;;;;5112:3;5087:23;:28;;;;5229:10;:8;:10::i;:::-;5221:19;;5215:2;:25;;;;:::i;:::-;5204:8;:36;;;;:::i;:::-;5181:20;:59;;;;5283:30;5289:10;5300:12;;5283:5;:30::i;:::-;5326:35;5396:42;5326:138;;5496:16;5478:15;;:34;;;;;;;;;;;;;;;;;;5555:16;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5537:56;;;5616:4;5636:16;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5537:133;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5523:11;;:147;;;;;;;;;;;;;;;;;;5684:65;5693:10;5713:15;;;;;;;;;;;5731:17;5684:8;:65::i;:::-;5760:68;5777:4;5792:15;;;;;;;;;;;5810:17;5760:8;:68::i;:::-;5868:10;5847:46;;5864:1;5847:46;;;5880:12;;5847:46;;;;;;:::i;:::-;;;;;;;;4539:1362;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;4498:1403:8:o;2782:34::-;;;;:::o;7342:277::-;2334:13:0;:11;:13::i;:::-;7455:5:8::1;7437:14;:23;;7429:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7531:14;7508:20;:37;;;;7561:50;7590:20;;7561:50;;;;;;:::i;:::-;;;;;;;;7342:277:::0;:::o;6678:268::-;2334:13:0;:11;:13::i;:::-;6789:5:8::1;6771:14;:23;;6763:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6863:14;6842:18;:35;;;;6893:45;6919:18;;6893:45;;;;;;:::i;:::-;;;;;;;;6678:268:::0;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;3268:148:2:-;3315:13;3340:22;3365:18;:16;:18::i;:::-;3340:43;;3400:1;:9;;3393:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3268:148;:::o;4767:178::-;4836:4;4852:13;4868:12;:10;:12::i;:::-;4852:28;;4890:27;4900:5;4907:2;4911:5;4890:9;:27::i;:::-;4934:4;4927:11;;;4767:178;;;;:::o;9761:266:8:-;2334:13:0;:11;:13::i;:::-;9867:1:8::1;9848:21;;:7;:21;;::::0;9840:75:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;9948:7;9925:20;;:30;;;;;;;;;;;;;;;;;;9970:49;9998:20;;;;;;;;;;;9970:49;;;;;;:::i;:::-;;;;;;;;9761:266:::0;:::o;2693:33::-;;;;;;;;;;;;;:::o;3169:26::-;;;;;;;;;;;;;:::o;2913:36::-;;;;:::o;5003:195:2:-;5083:7;5102:22;5127:18;:16;:18::i;:::-;5102:43;;5162:1;:13;;:20;5176:5;5162:20;;;;;;;;;;;;;;;:29;5183:7;5162:29;;;;;;;;;;;;;;;;5155:36;;;5003:195;;;;:::o;2867:39:8:-;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;11574:116:8:-;11637:4;11661:12;:21;11674:7;11661:21;;;;;;;;;;;;;;;;;;;;;;;;;11654:28;;11574:116;;;:::o;2733:36::-;;;;;;;;;;;;;:::o;2242:153:2:-;2292:22;2359:20;2349:30;;2242:153;:::o;887:96:4:-;940:7;966:10;959:17;;887:96;:::o;10266:128:2:-;10350:37;10359:5;10366:7;10375:5;10382:4;10350:8;:37::i;:::-;10266:128;;;:::o;11995:477::-;12094:24;12121:25;12131:5;12138:7;12121:9;:25::i;:::-;12094:52;;12180:17;12160:16;:37;12156:310;;12236:5;12217:16;:24;12213:130;;;12295:7;12304:16;12322:5;12268:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;12213:130;12384:57;12393:5;12400:7;12428:5;12409:16;:24;12435:5;12384:8;:57::i;:::-;12156:310;12084:388;11995:477;;;:::o;6868:302::-;6969:1;6953:18;;:4;:18;;;6949:86;;7021:1;6994:30;;;;;;;;;;;:::i;:::-;;;;;;;;6949:86;7062:1;7048:16;;:2;:16;;;7044:86;;7116:1;7087:32;;;;;;;;;;;:::i;:::-;;;;;;;;7044:86;7139:24;7147:4;7153:2;7157:5;7139:7;:24::i;:::-;6868:302;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;8998:208:2:-;9087:1;9068:21;;:7;:21;;;9064:91;;9141:1;9112:32;;;;;;;;;;;:::i;:::-;;;;;;;;9064:91;9164:35;9180:1;9184:7;9193:5;9164:7;:35::i;:::-;8998:208;;:::o;9524:206::-;9613:1;9594:21;;:7;:21;;;9590:89;;9665:1;9638:30;;;;;;;;;;;:::i;:::-;;;;;;;;9590:89;9688:35;9696:7;9713:1;9717:5;9688:7;:35::i;:::-;9524:206;;:::o;3774:248:0:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;666:65:3:-;6931:20:1;:18;:20::i;:::-;666:65:3:o;2577:147:2:-;6931:20:1;:18;:20::i;:::-;2679:38:2::1;2702:5;2709:7;2679:22;:38::i;:::-;2577:147:::0;;:::o;1192:159:0:-;1244:24;1313:22;1303:32;;1192:159;:::o;11226:487:2:-;11334:22;11359:18;:16;:18::i;:::-;11334:43;;11408:1;11391:19;;:5;:19;;;11387:89;;11462:1;11433:32;;;;;;;;;;;:::i;:::-;;;;;;;;11387:89;11508:1;11489:21;;:7;:21;;;11485:90;;11561:1;11533:31;;;;;;;;;;;:::i;:::-;;;;;;;;11485:90;11616:5;11584:1;:13;;:20;11598:5;11584:20;;;;;;;;;;;;;;;:29;11605:7;11584:29;;;;;;;;;;;;;;;:37;;;;11635:9;11631:76;;;11681:7;11665:31;;11674:5;11665:31;;;11690:5;11665:31;;;;;;:::i;:::-;;;;;;;;11631:76;11324:389;11226:487;;;;:::o;12258:1601:8:-;12380:1;12362:20;;:6;:20;;;12354:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;12464:1;12443:23;;:9;:23;;;12435:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;12534:1;12525:6;:10;12517:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;12603:12;:20;12616:6;12603:20;;;;;;;;;;;;;;;;;;;;;;;;;12602:21;12594:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;12669:12;:23;12682:9;12669:23;;;;;;;;;;;;;;;;;;;;;;;;;12668:24;12660:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;12800:7;:5;:7::i;:::-;12790:17;;:6;:17;;;:41;;;;12824:7;:5;:7::i;:::-;12811:20;;:9;:20;;;12790:41;:68;;;;12853:4;12835:23;;:6;:23;;;12790:68;12786:161;;;12874:40;12888:6;12896:9;12907:6;12874:13;:40::i;:::-;12929:7;;12786:161;12959:10;12982:11;;;;;;;;;;;12972:21;;:6;:21;;;12959:34;;13004:11;13031;;;;;;;;;;;13018:24;;:9;:24;;;13004:38;;13055:20;13086:22;13119:25;13160:5;:15;;;;13169:6;13160:15;13157:566;;;13210:20;;13200:6;:30;;13191:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;13302:40;13316:6;13323:18;;13302:13;:40::i;:::-;13287:55;;13374:42;13388:6;13395:20;;13374:13;:42::i;:::-;13357:59;;13451:45;13465:6;13472:23;;13451:13;:45::i;:::-;13431:65;;13513:52;13527:6;13535:15;;;;;;;;;;13552:12;13513:13;:52::i;:::-;13579:56;13593:6;13601:17;;;;;;;;;;;13620:14;13579:13;:56::i;:::-;13649:62;13663:6;13671:20;;;;;;;;;;;13693:17;13649:13;:62::i;:::-;13157:566;13779:17;13762:14;13747:12;:29;;;;:::i;:::-;:49;;;;:::i;:::-;13736:61;;;;;:::i;:::-;;;13809:40;13823:6;13831:9;13842:6;13809:13;:40::i;:::-;12343:1516;;;;;12258:1601;;;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;2730:216:2:-;6931:20:1;:18;:20::i;:::-;2842:22:2::1;2867:18;:16;:18::i;:::-;2842:43;;2905:5;2895:1;:7;;:15;;;;;;:::i;:::-;;2932:7;2920:1;:9;;:19;;;;;;:::i;:::-;;2832:114;2730:216:::0;;:::o;7485:1170::-;7570:22;7595:18;:16;:18::i;:::-;7570:43;;7643:1;7627:18;;:4;:18;;;7623:546;;7781:5;7763:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7623:546;;;7817:19;7839:1;:11;;:17;7851:4;7839:17;;;;;;;;;;;;;;;;7817:39;;7888:5;7874:11;:19;7870:115;;;7945:4;7951:11;7964:5;7920:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7870:115;8139:5;8125:11;:19;8105:1;:11;;:17;8117:4;8105:17;;;;;;;;;;;;;;;:39;;;;7803:366;7623:546;8197:1;8183:16;;:2;:16;;;8179:429;;8364:5;8346:1;:14;;;:23;;;;;;;;;;;8179:429;;;8578:5;8559:1;:11;;:15;8571:2;8559:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;8179:429;8638:2;8623:25;;8632:4;8623:25;;;8642:5;8623:25;;;;;;:::i;:::-;;;;;;;;7560:1095;7485:1170;;;:::o;14372:154:8:-;14457:7;14512:5;14494:13;14484:6;:24;;;;:::i;:::-;:34;;;;:::i;:::-;14477:41;;14372:154;;;;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;7:99:13:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:60::-;3826:3;3847:5;3840:12;;3798:60;;;:::o;3864:142::-;3914:9;3947:53;3965:34;3974:24;3992:5;3974:24;:::i;:::-;3965:34;:::i;:::-;3947:53;:::i;:::-;3934:66;;3864:142;;;:::o;4012:126::-;4062:9;4095:37;4126:5;4095:37;:::i;:::-;4082:50;;4012:126;;;:::o;4144:153::-;4221:9;4254:37;4285:5;4254:37;:::i;:::-;4241:50;;4144:153;;;:::o;4303:185::-;4417:64;4475:5;4417:64;:::i;:::-;4412:3;4405:77;4303:185;;:::o;4494:276::-;4614:4;4652:2;4641:9;4637:18;4629:26;;4665:98;4760:1;4749:9;4745:17;4736:6;4665:98;:::i;:::-;4494:276;;;;:::o;4776:619::-;4853:6;4861;4869;4918:2;4906:9;4897:7;4893:23;4889:32;4886:119;;;4924:79;;:::i;:::-;4886:119;5044:1;5069:53;5114:7;5105:6;5094:9;5090:22;5069:53;:::i;:::-;5059:63;;5015:117;5171:2;5197:53;5242:7;5233:6;5222:9;5218:22;5197:53;:::i;:::-;5187:63;;5142:118;5299:2;5325:53;5370:7;5361:6;5350:9;5346:22;5325:53;:::i;:::-;5315:63;;5270:118;4776:619;;;;;:::o;5401:86::-;5436:7;5476:4;5469:5;5465:16;5454:27;;5401:86;;;:::o;5493:112::-;5576:22;5592:5;5576:22;:::i;:::-;5571:3;5564:35;5493:112;;:::o;5611:214::-;5700:4;5738:2;5727:9;5723:18;5715:26;;5751:67;5815:1;5804:9;5800:17;5791:6;5751:67;:::i;:::-;5611:214;;;;:::o;5831:329::-;5890:6;5939:2;5927:9;5918:7;5914:23;5910:32;5907:119;;;5945:79;;:::i;:::-;5907:119;6065:1;6090:53;6135:7;6126:6;6115:9;6111:22;6090:53;:::i;:::-;6080:63;;6036:117;5831:329;;;;:::o;6166:::-;6225:6;6274:2;6262:9;6253:7;6249:23;6245:32;6242:119;;;6280:79;;:::i;:::-;6242:119;6400:1;6425:53;6470:7;6461:6;6450:9;6446:22;6425:53;:::i;:::-;6415:63;;6371:117;6166:329;;;;:::o;6501:118::-;6588:24;6606:5;6588:24;:::i;:::-;6583:3;6576:37;6501:118;;:::o;6625:222::-;6718:4;6756:2;6745:9;6741:18;6733:26;;6769:71;6837:1;6826:9;6822:17;6813:6;6769:71;:::i;:::-;6625:222;;;;:::o;6853:474::-;6921:6;6929;6978:2;6966:9;6957:7;6953:23;6949:32;6946:119;;;6984:79;;:::i;:::-;6946:119;7104:1;7129:53;7174:7;7165:6;7154:9;7150:22;7129:53;:::i;:::-;7119:63;;7075:117;7231:2;7257:53;7302:7;7293:6;7282:9;7278:22;7257:53;:::i;:::-;7247:63;;7202:118;6853:474;;;;;:::o;7333:180::-;7381:77;7378:1;7371:88;7478:4;7475:1;7468:15;7502:4;7499:1;7492:15;7519:320;7563:6;7600:1;7594:4;7590:12;7580:22;;7647:1;7641:4;7637:12;7668:18;7658:81;;7724:4;7716:6;7712:17;7702:27;;7658:81;7786:2;7778:6;7775:14;7755:18;7752:38;7749:84;;7805:18;;:::i;:::-;7749:84;7570:269;7519:320;;;:::o;7845:180::-;7985:32;7981:1;7973:6;7969:14;7962:56;7845:180;:::o;8031:366::-;8173:3;8194:67;8258:2;8253:3;8194:67;:::i;:::-;8187:74;;8270:93;8359:3;8270:93;:::i;:::-;8388:2;8383:3;8379:12;8372:19;;8031:366;;;:::o;8403:419::-;8569:4;8607:2;8596:9;8592:18;8584:26;;8656:9;8650:4;8646:20;8642:1;8631:9;8627:17;8620:47;8684:131;8810:4;8684:131;:::i;:::-;8676:139;;8403:419;;;:::o;8828:171::-;8968:23;8964:1;8956:6;8952:14;8945:47;8828:171;:::o;9005:366::-;9147:3;9168:67;9232:2;9227:3;9168:67;:::i;:::-;9161:74;;9244:93;9333:3;9244:93;:::i;:::-;9362:2;9357:3;9353:12;9346:19;;9005:366;;;:::o;9377:419::-;9543:4;9581:2;9570:9;9566:18;9558:26;;9630:9;9624:4;9620:20;9616:1;9605:9;9601:17;9594:47;9658:131;9784:4;9658:131;:::i;:::-;9650:139;;9377:419;;;:::o;9802:180::-;9942:32;9938:1;9930:6;9926:14;9919:56;9802:180;:::o;9988:366::-;10130:3;10151:67;10215:2;10210:3;10151:67;:::i;:::-;10144:74;;10227:93;10316:3;10227:93;:::i;:::-;10345:2;10340:3;10336:12;10329:19;;9988:366;;;:::o;10360:419::-;10526:4;10564:2;10553:9;10549:18;10541:26;;10613:9;10607:4;10603:20;10599:1;10588:9;10584:17;10577:47;10641:131;10767:4;10641:131;:::i;:::-;10633:139;;10360:419;;;:::o;10785:176::-;10925:28;10921:1;10913:6;10909:14;10902:52;10785:176;:::o;10967:366::-;11109:3;11130:67;11194:2;11189:3;11130:67;:::i;:::-;11123:74;;11206:93;11295:3;11206:93;:::i;:::-;11324:2;11319:3;11315:12;11308:19;;10967:366;;;:::o;11339:419::-;11505:4;11543:2;11532:9;11528:18;11520:26;;11592:9;11586:4;11582:20;11578:1;11567:9;11563:17;11556:47;11620:131;11746:4;11620:131;:::i;:::-;11612:139;;11339:419;;;:::o;11764:220::-;11904:34;11900:1;11892:6;11888:14;11881:58;11973:3;11968:2;11960:6;11956:15;11949:28;11764:220;:::o;11990:366::-;12132:3;12153:67;12217:2;12212:3;12153:67;:::i;:::-;12146:74;;12229:93;12318:3;12229:93;:::i;:::-;12347:2;12342:3;12338:12;12331:19;;11990:366;;;:::o;12362:419::-;12528:4;12566:2;12555:9;12551:18;12543:26;;12615:9;12609:4;12605:20;12601:1;12590:9;12586:17;12579:47;12643:131;12769:4;12643:131;:::i;:::-;12635:139;;12362:419;;;:::o;12787:226::-;12927:34;12923:1;12915:6;12911:14;12904:58;12996:9;12991:2;12983:6;12979:15;12972:34;12787:226;:::o;13019:366::-;13161:3;13182:67;13246:2;13241:3;13182:67;:::i;:::-;13175:74;;13258:93;13347:3;13258:93;:::i;:::-;13376:2;13371:3;13367:12;13360:19;;13019:366;;;:::o;13391:419::-;13557:4;13595:2;13584:9;13580:18;13572:26;;13644:9;13638:4;13634:20;13630:1;13619:9;13615:17;13608:47;13672:131;13798:4;13672:131;:::i;:::-;13664:139;;13391:419;;;:::o;13816:220::-;13956:34;13952:1;13944:6;13940:14;13933:58;14025:3;14020:2;14012:6;14008:15;14001:28;13816:220;:::o;14042:366::-;14184:3;14205:67;14269:2;14264:3;14205:67;:::i;:::-;14198:74;;14281:93;14370:3;14281:93;:::i;:::-;14399:2;14394:3;14390:12;14383:19;;14042:366;;;:::o;14414:419::-;14580:4;14618:2;14607:9;14603:18;14595:26;;14667:9;14661:4;14657:20;14653:1;14642:9;14638:17;14631:47;14695:131;14821:4;14695:131;:::i;:::-;14687:139;;14414:419;;;:::o;14839:220::-;14979:34;14975:1;14967:6;14963:14;14956:58;15048:3;15043:2;15035:6;15031:15;15024:28;14839:220;:::o;15065:366::-;15207:3;15228:67;15292:2;15287:3;15228:67;:::i;:::-;15221:74;;15304:93;15393:3;15304:93;:::i;:::-;15422:2;15417:3;15413:12;15406:19;;15065:366;;;:::o;15437:419::-;15603:4;15641:2;15630:9;15626:18;15618:26;;15690:9;15684:4;15680:20;15676:1;15665:9;15661:17;15654:47;15718:131;15844:4;15718:131;:::i;:::-;15710:139;;15437:419;;;:::o;15862:180::-;15910:77;15907:1;15900:88;16007:4;16004:1;15997:15;16031:4;16028:1;16021:15;16048:102;16090:8;16137:5;16134:1;16130:13;16109:34;;16048:102;;;:::o;16156:848::-;16217:5;16224:4;16248:6;16239:15;;16272:5;16263:14;;16286:712;16307:1;16297:8;16294:15;16286:712;;;16402:4;16397:3;16393:14;16387:4;16384:24;16381:50;;;16411:18;;:::i;:::-;16381:50;16461:1;16451:8;16447:16;16444:451;;;16876:4;16869:5;16865:16;16856:25;;16444:451;16926:4;16920;16916:15;16908:23;;16956:32;16979:8;16956:32;:::i;:::-;16944:44;;16286:712;;;16156:848;;;;;;;:::o;17010:1073::-;17064:5;17255:8;17245:40;;17276:1;17267:10;;17278:5;;17245:40;17304:4;17294:36;;17321:1;17312:10;;17323:5;;17294:36;17390:4;17438:1;17433:27;;;;17474:1;17469:191;;;;17383:277;;17433:27;17451:1;17442:10;;17453:5;;;17469:191;17514:3;17504:8;17501:17;17498:43;;;17521:18;;:::i;:::-;17498:43;17570:8;17567:1;17563:16;17554:25;;17605:3;17598:5;17595:14;17592:40;;;17612:18;;:::i;:::-;17592:40;17645:5;;;17383:277;;17769:2;17759:8;17756:16;17750:3;17744:4;17741:13;17737:36;17719:2;17709:8;17706:16;17701:2;17695:4;17692:12;17688:35;17672:111;17669:246;;;17825:8;17819:4;17815:19;17806:28;;17860:3;17853:5;17850:14;17847:40;;;17867:18;;:::i;:::-;17847:40;17900:5;;17669:246;17940:42;17978:3;17968:8;17962:4;17959:1;17940:42;:::i;:::-;17925:57;;;;18014:4;18009:3;18005:14;17998:5;17995:25;17992:51;;;18023:18;;:::i;:::-;17992:51;18072:4;18065:5;18061:16;18052:25;;17010:1073;;;;;;:::o;18089:281::-;18147:5;18171:23;18189:4;18171:23;:::i;:::-;18163:31;;18215:25;18231:8;18215:25;:::i;:::-;18203:37;;18259:104;18296:66;18286:8;18280:4;18259:104;:::i;:::-;18250:113;;18089:281;;;;:::o;18376:410::-;18416:7;18439:20;18457:1;18439:20;:::i;:::-;18434:25;;18473:20;18491:1;18473:20;:::i;:::-;18468:25;;18528:1;18525;18521:9;18550:30;18568:11;18550:30;:::i;:::-;18539:41;;18729:1;18720:7;18716:15;18713:1;18710:22;18690:1;18683:9;18663:83;18640:139;;18759:18;;:::i;:::-;18640:139;18424:362;18376:410;;;;:::o;18792:285::-;18852:5;18876:23;18894:4;18876:23;:::i;:::-;18868:31;;18920:27;18938:8;18920:27;:::i;:::-;18908:39;;18966:104;19003:66;18993:8;18987:4;18966:104;:::i;:::-;18957:113;;18792:285;;;;:::o;19083:143::-;19140:5;19171:6;19165:13;19156:22;;19187:33;19214:5;19187:33;:::i;:::-;19083:143;;;;:::o;19232:351::-;19302:6;19351:2;19339:9;19330:7;19326:23;19322:32;19319:119;;;19357:79;;:::i;:::-;19319:119;19477:1;19502:64;19558:7;19549:6;19538:9;19534:22;19502:64;:::i;:::-;19492:74;;19448:128;19232:351;;;;:::o;19589:332::-;19710:4;19748:2;19737:9;19733:18;19725:26;;19761:71;19829:1;19818:9;19814:17;19805:6;19761:71;:::i;:::-;19842:72;19910:2;19899:9;19895:18;19886:6;19842:72;:::i;:::-;19589:332;;;;;:::o;19927:85::-;19972:7;20001:5;19990:16;;19927:85;;;:::o;20018:101::-;20054:7;20094:18;20087:5;20083:30;20072:41;;20018:101;;;:::o;20125:156::-;20182:9;20215:60;20232:42;20241:32;20267:5;20241:32;:::i;:::-;20232:42;:::i;:::-;20215:60;:::i;:::-;20202:73;;20125:156;;;:::o;20287:145::-;20381:44;20419:5;20381:44;:::i;:::-;20376:3;20369:57;20287:145;;:::o;20438:236::-;20538:4;20576:2;20565:9;20561:18;20553:26;;20589:78;20664:1;20653:9;20649:17;20640:6;20589:78;:::i;:::-;20438:236;;;;:::o;20680:229::-;20820:34;20816:1;20808:6;20804:14;20797:58;20889:12;20884:2;20876:6;20872:15;20865:37;20680:229;:::o;20915:366::-;21057:3;21078:67;21142:2;21137:3;21078:67;:::i;:::-;21071:74;;21154:93;21243:3;21154:93;:::i;:::-;21272:2;21267:3;21263:12;21256:19;;20915:366;;;:::o;21287:419::-;21453:4;21491:2;21480:9;21476:18;21468:26;;21540:9;21534:4;21530:20;21526:1;21515:9;21511:17;21504:47;21568:131;21694:4;21568:131;:::i;:::-;21560:139;;21287:419;;;:::o;21712:442::-;21861:4;21899:2;21888:9;21884:18;21876:26;;21912:71;21980:1;21969:9;21965:17;21956:6;21912:71;:::i;:::-;21993:72;22061:2;22050:9;22046:18;22037:6;21993:72;:::i;:::-;22075;22143:2;22132:9;22128:18;22119:6;22075:72;:::i;:::-;21712:442;;;;;;:::o;22160:224::-;22300:34;22296:1;22288:6;22284:14;22277:58;22369:7;22364:2;22356:6;22352:15;22345:32;22160:224;:::o;22390:366::-;22532:3;22553:67;22617:2;22612:3;22553:67;:::i;:::-;22546:74;;22629:93;22718:3;22629:93;:::i;:::-;22747:2;22742:3;22738:12;22731:19;;22390:366;;;:::o;22762:419::-;22928:4;22966:2;22955:9;22951:18;22943:26;;23015:9;23009:4;23005:20;23001:1;22990:9;22986:17;22979:47;23043:131;23169:4;23043:131;:::i;:::-;23035:139;;22762:419;;;:::o;23187:222::-;23327:34;23323:1;23315:6;23311:14;23304:58;23396:5;23391:2;23383:6;23379:15;23372:30;23187:222;:::o;23415:366::-;23557:3;23578:67;23642:2;23637:3;23578:67;:::i;:::-;23571:74;;23654:93;23743:3;23654:93;:::i;:::-;23772:2;23767:3;23763:12;23756:19;;23415:366;;;:::o;23787:419::-;23953:4;23991:2;23980:9;23976:18;23968:26;;24040:9;24034:4;24030:20;24026:1;24015:9;24011:17;24004:47;24068:131;24194:4;24068:131;:::i;:::-;24060:139;;23787:419;;;:::o;24212:228::-;24352:34;24348:1;24340:6;24336:14;24329:58;24421:11;24416:2;24408:6;24404:15;24397:36;24212:228;:::o;24446:366::-;24588:3;24609:67;24673:2;24668:3;24609:67;:::i;:::-;24602:74;;24685:93;24774:3;24685:93;:::i;:::-;24803:2;24798:3;24794:12;24787:19;;24446:366;;;:::o;24818:419::-;24984:4;25022:2;25011:9;25007:18;24999:26;;25071:9;25065:4;25061:20;25057:1;25046:9;25042:17;25035:47;25099:131;25225:4;25099:131;:::i;:::-;25091:139;;24818:419;;;:::o;25243:171::-;25383:23;25379:1;25371:6;25367:14;25360:47;25243:171;:::o;25420:366::-;25562:3;25583:67;25647:2;25642:3;25583:67;:::i;:::-;25576:74;;25659:93;25748:3;25659:93;:::i;:::-;25777:2;25772:3;25768:12;25761:19;;25420:366;;;:::o;25792:419::-;25958:4;25996:2;25985:9;25981:18;25973:26;;26045:9;26039:4;26035:20;26031:1;26020:9;26016:17;26009:47;26073:131;26199:4;26073:131;:::i;:::-;26065:139;;25792:419;;;:::o;26217:174::-;26357:26;26353:1;26345:6;26341:14;26334:50;26217:174;:::o;26397:366::-;26539:3;26560:67;26624:2;26619:3;26560:67;:::i;:::-;26553:74;;26636:93;26725:3;26636:93;:::i;:::-;26754:2;26749:3;26745:12;26738:19;;26397:366;;;:::o;26769:419::-;26935:4;26973:2;26962:9;26958:18;26950:26;;27022:9;27016:4;27012:20;27008:1;26997:9;26993:17;26986:47;27050:131;27176:4;27050:131;:::i;:::-;27042:139;;26769:419;;;:::o;27194:224::-;27334:34;27330:1;27322:6;27318:14;27311:58;27403:7;27398:2;27390:6;27386:15;27379:32;27194:224;:::o;27424:366::-;27566:3;27587:67;27651:2;27646:3;27587:67;:::i;:::-;27580:74;;27663:93;27752:3;27663:93;:::i;:::-;27781:2;27776:3;27772:12;27765:19;;27424:366;;;:::o;27796:419::-;27962:4;28000:2;27989:9;27985:18;27977:26;;28049:9;28043:4;28039:20;28035:1;28024:9;28020:17;28013:47;28077:131;28203:4;28077:131;:::i;:::-;28069:139;;27796:419;;;:::o;28221:191::-;28261:3;28280:20;28298:1;28280:20;:::i;:::-;28275:25;;28314:20;28332:1;28314:20;:::i;:::-;28309:25;;28357:1;28354;28350:9;28343:16;;28378:3;28375:1;28372:10;28369:36;;;28385:18;;:::i;:::-;28369:36;28221:191;;;;:::o;28418:194::-;28458:4;28478:20;28496:1;28478:20;:::i;:::-;28473:25;;28512:20;28530:1;28512:20;:::i;:::-;28507:25;;28556:1;28553;28549:9;28541:17;;28580:1;28574:4;28571:11;28568:37;;;28585:18;;:::i;:::-;28568:37;28418:194;;;;:::o;28618:180::-;28666:77;28663:1;28656:88;28763:4;28760:1;28753:15;28787:4;28784:1;28777:15;28804:141;28853:4;28876:3;28868:11;;28899:3;28896:1;28889:14;28933:4;28930:1;28920:18;28912:26;;28804:141;;;:::o;28951:93::-;28988:6;29035:2;29030;29023:5;29019:14;29015:23;29005:33;;28951:93;;;:::o;29050:107::-;29094:8;29144:5;29138:4;29134:16;29113:37;;29050:107;;;;:::o;29163:393::-;29232:6;29282:1;29270:10;29266:18;29305:97;29335:66;29324:9;29305:97;:::i;:::-;29423:39;29453:8;29442:9;29423:39;:::i;:::-;29411:51;;29495:4;29491:9;29484:5;29480:21;29471:30;;29544:4;29534:8;29530:19;29523:5;29520:30;29510:40;;29239:317;;29163:393;;;;;:::o;29562:142::-;29612:9;29645:53;29663:34;29672:24;29690:5;29672:24;:::i;:::-;29663:34;:::i;:::-;29645:53;:::i;:::-;29632:66;;29562:142;;;:::o;29710:75::-;29753:3;29774:5;29767:12;;29710:75;;;:::o;29791:269::-;29901:39;29932:7;29901:39;:::i;:::-;29962:91;30011:41;30035:16;30011:41;:::i;:::-;30003:6;29996:4;29990:11;29962:91;:::i;:::-;29956:4;29949:105;29867:193;29791:269;;;:::o;30066:73::-;30111:3;30066:73;:::o;30145:189::-;30222:32;;:::i;:::-;30263:65;30321:6;30313;30307:4;30263:65;:::i;:::-;30198:136;30145:189;;:::o;30340:186::-;30400:120;30417:3;30410:5;30407:14;30400:120;;;30471:39;30508:1;30501:5;30471:39;:::i;:::-;30444:1;30437:5;30433:13;30424:22;;30400:120;;;30340:186;;:::o;30532:543::-;30633:2;30628:3;30625:11;30622:446;;;30667:38;30699:5;30667:38;:::i;:::-;30751:29;30769:10;30751:29;:::i;:::-;30741:8;30737:44;30934:2;30922:10;30919:18;30916:49;;;30955:8;30940:23;;30916:49;30978:80;31034:22;31052:3;31034:22;:::i;:::-;31024:8;31020:37;31007:11;30978:80;:::i;:::-;30637:431;;30622:446;30532:543;;;:::o;31081:117::-;31135:8;31185:5;31179:4;31175:16;31154:37;;31081:117;;;;:::o;31204:169::-;31248:6;31281:51;31329:1;31325:6;31317:5;31314:1;31310:13;31281:51;:::i;:::-;31277:56;31362:4;31356;31352:15;31342:25;;31255:118;31204:169;;;;:::o;31378:295::-;31454:4;31600:29;31625:3;31619:4;31600:29;:::i;:::-;31592:37;;31662:3;31659:1;31655:11;31649:4;31646:21;31638:29;;31378:295;;;;:::o;31678:1395::-;31795:37;31828:3;31795:37;:::i;:::-;31897:18;31889:6;31886:30;31883:56;;;31919:18;;:::i;:::-;31883:56;31963:38;31995:4;31989:11;31963:38;:::i;:::-;32048:67;32108:6;32100;32094:4;32048:67;:::i;:::-;32142:1;32166:4;32153:17;;32198:2;32190:6;32187:14;32215:1;32210:618;;;;32872:1;32889:6;32886:77;;;32938:9;32933:3;32929:19;32923:26;32914:35;;32886:77;32989:67;33049:6;33042:5;32989:67;:::i;:::-;32983:4;32976:81;32845:222;32180:887;;32210:618;32262:4;32258:9;32250:6;32246:22;32296:37;32328:4;32296:37;:::i;:::-;32355:1;32369:208;32383:7;32380:1;32377:14;32369:208;;;32462:9;32457:3;32453:19;32447:26;32439:6;32432:42;32513:1;32505:6;32501:14;32491:24;;32560:2;32549:9;32545:18;32532:31;;32406:4;32403:1;32399:12;32394:17;;32369:208;;;32605:6;32596:7;32593:19;32590:179;;;32663:9;32658:3;32654:19;32648:26;32706:48;32748:4;32740:6;32736:17;32725:9;32706:48;:::i;:::-;32698:6;32691:64;32613:156;32590:179;32815:1;32811;32803:6;32799:14;32795:22;32789:4;32782:36;32217:611;;;32180:887;;31770:1303;;;31678:1395;;:::o;33079:180::-;33127:77;33124:1;33117:88;33224:4;33221:1;33214:15;33248:4;33245:1;33238:15;33265:185;33305:1;33322:20;33340:1;33322:20;:::i;:::-;33317:25;;33356:20;33374:1;33356:20;:::i;:::-;33351:25;;33395:1;33385:35;;33400:18;;:::i;:::-;33385:35;33442:1;33439;33435:9;33430:14;;33265:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2996600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addToBlacklist(address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2970",
								"burn(uint256)": "926",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "428",
								"developmentWallet()": "2575",
								"developmentWalletTax()": "2516",
								"initialize()": "infinite",
								"isBlacklisted(address)": "2980",
								"marketingWallet()": "2551",
								"marketingWalletTax()": "2537",
								"maxTransactionAmount()": "2536",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2656",
								"removeFromBlacklist(address)": "infinite",
								"renounceOwnership()": "infinite",
								"setDevelopmentWallet(address)": "infinite",
								"setDevelopmentWalletTax(uint256)": "infinite",
								"setMarketingWallet(address)": "infinite",
								"setMarketingWalletTax(uint256)": "infinite",
								"setMaxAmount(uint256)": "infinite",
								"setSustainabilityWallet(address)": "infinite",
								"setSustainabilityWalletTax(uint256)": "infinite",
								"sustainabilityWallet()": "2640",
								"sustainabilityWalletTax()": "2491",
								"symbol()": "infinite",
								"totalSupply()": "2531",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"uniswapPair()": "2597",
								"uniswapV2Router()": "infinite"
							},
							"internal": {
								"_calculateTax(uint256,uint256)": "infinite",
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2426,
									"end": 14529,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2426,
									"end": 14529,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2426,
									"end": 14529,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2592,
									"end": 2647,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 2592,
									"end": 2647,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2592,
									"end": 2647,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2592,
									"end": 2647,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2647,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2592,
									"end": 2647,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2592,
									"end": 2647,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2592,
									"end": 2647,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2592,
									"end": 2647,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2647,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2592,
									"end": 2647,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2617,
									"end": 2639,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2617,
									"end": 2637,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 2617,
									"end": 2637,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2617,
									"end": 2637,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2617,
									"end": 2639,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2617,
									"end": 2639,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2617,
									"end": 2639,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2617,
									"end": 2639,
									"name": "tag",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2617,
									"end": 2639,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 14529,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 2426,
									"end": 14529,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7856,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7901,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8003,
									"end": 8019,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7986,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8052,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8036,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8099,
									"end": 8115,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 8087,
									"end": 8116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "LOG1",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7760,
									"end": 8133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7711,
									"end": 8133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8795,
									"end": 8825,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8870,
									"end": 8891,
									"name": "PUSH",
									"source": 1,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 8860,
									"end": 8891,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8860,
									"end": 8891,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 108,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 108,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 43,
									"end": 50,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 101,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 76,
									"end": 81,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 72,
									"end": 102,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 61,
									"end": 102,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 61,
									"end": 102,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 108,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 108,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 114,
									"end": 229,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 114,
									"end": 229,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 216,
									"end": 221,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 199,
									"end": 222,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 199,
									"end": 222,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 199,
									"end": 222,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 194,
									"end": 197,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 187,
									"end": 223,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 114,
									"end": 229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 235,
									"end": 453,
									"name": "tag",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 235,
									"end": 453,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 326,
									"end": 330,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 366,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 353,
									"end": 362,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 349,
									"end": 367,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 341,
									"end": 367,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 341,
									"end": 367,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 441,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 428,
									"end": 445,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 419,
									"end": 425,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 377,
									"end": 446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 377,
									"end": 446,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 377,
									"end": 446,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 235,
									"end": 453,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2426,
									"end": 14529,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 2426,
									"end": 14529,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 14529,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2426,
									"end": 14529,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 14529,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2426,
									"end": 14529,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2426,
									"end": 14529,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 14529,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2426,
									"end": 14529,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a80e2191841344856faefab25e64a0e91ed1218c25f5d7b50a76234abf059cc164736f6c63430008140033",
									".code": [
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "75F0A874"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "BE20B15D"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "E7D88DE5"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "FE575A87"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "FEDCB861"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "BE20B15D"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "C04A5414"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "C816841B"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "C8C8EBE4"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "85FBAE56"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "85FBAE56"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "88696F2F"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "75F0A874"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "79CC6790"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "8129FC1C"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "8206CF5A"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "42966C68"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "5D098B38"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "5D098B38"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "6DDFA4B4"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "72AC2486"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "42966C68"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "44337EA1"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "4FE47F70"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "537DF3B6"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "40C10F19"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "11E91B84"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "1694505E"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 14529,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3011,
											"end": 3155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3011,
											"end": 3155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5505,
											"end": 5691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5505,
											"end": 5691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5505,
											"end": 5691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 2824,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2824,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3121,
											"end": 3162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 3121,
											"end": 3162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4191,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4191,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 6251,
											"end": 6495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 6251,
											"end": 6495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 6251,
											"end": 6495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4049,
											"end": 4131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4049,
											"end": 4131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 6191,
											"end": 6286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 6191,
											"end": 6286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 931,
											"end": 1018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 931,
											"end": 1018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 10334,
											"end": 10584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 10334,
											"end": 10584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 8202,
											"end": 8427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 8202,
											"end": 8427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 10913,
											"end": 11176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 10913,
											"end": 11176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 8703,
											"end": 8946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 8703,
											"end": 8946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 7627,
											"end": 7916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7627,
											"end": 7916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4401,
											"end": 4572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4401,
											"end": 4572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4401,
											"end": 4572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 9227,
											"end": 9475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 9227,
											"end": 9475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 2655,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2655,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1334,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1334,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 4498,
											"end": 5901,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 4498,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 4498,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 4498,
											"end": 5901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 5901,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 4498,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4498,
											"end": 5901,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 2782,
											"end": 2816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2782,
											"end": 2816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 7342,
											"end": 7619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 7342,
											"end": 7619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 6678,
											"end": 6946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6678,
											"end": 6946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3268,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3268,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4767,
											"end": 4945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4767,
											"end": 4945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4767,
											"end": 4945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 9761,
											"end": 10027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 9761,
											"end": 10027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2693,
											"end": 2726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2693,
											"end": 2726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 3169,
											"end": 3195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 3169,
											"end": 3195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 2913,
											"end": 2949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2913,
											"end": 2949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5003,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 5003,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5003,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 2867,
											"end": 2906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2867,
											"end": 2906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 11574,
											"end": 11690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 11574,
											"end": 11690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 11574,
											"end": 11690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 2733,
											"end": 2769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2733,
											"end": 2769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3056,
											"end": 3069,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3081,
											"end": 3103,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 3106,
											"end": 3124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3106,
											"end": 3124,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3106,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3081,
											"end": 3124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3081,
											"end": 3124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3141,
											"end": 3142,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3141,
											"end": 3148,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3141,
											"end": 3148,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3134,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3134,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 3155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5578,
											"end": 5582,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5594,
											"end": 5607,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 5610,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5610,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5594,
											"end": 5622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5594,
											"end": 5622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5632,
											"end": 5663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5641,
											"end": 5646,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5662,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5632,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 5632,
											"end": 5663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5632,
											"end": 5663,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5632,
											"end": 5663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5684,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5673,
											"end": 5684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5673,
											"end": 5684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5673,
											"end": 5684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5505,
											"end": 5691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3121,
											"end": 3162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4243,
											"end": 4250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4284,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4287,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4287,
											"end": 4305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4287,
											"end": 4305,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 4287,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4262,
											"end": 4305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4262,
											"end": 4305,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4336,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4322,
											"end": 4336,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4336,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4315,
											"end": 4336,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4315,
											"end": 4336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4315,
											"end": 4336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4191,
											"end": 4343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6338,
											"end": 6342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6354,
											"end": 6369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6372,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 6372,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 6372,
											"end": 6384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6372,
											"end": 6384,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 6372,
											"end": 6384,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6384,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 6410,
											"end": 6414,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6423,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6425,
											"end": 6430,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6394,
											"end": 6431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6431,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 6394,
											"end": 6431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6441,
											"end": 6467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 6451,
											"end": 6455,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6457,
											"end": 6459,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6461,
											"end": 6466,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6441,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 6441,
											"end": 6467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6441,
											"end": 6467,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 6441,
											"end": 6467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6484,
											"end": 6488,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6477,
											"end": 6488,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6251,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4098,
											"end": 4103,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4122,
											"end": 4124,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4115,
											"end": 4124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4115,
											"end": 4124,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6261,
											"end": 6278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 6267,
											"end": 6269,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 6277,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6261,
											"end": 6266,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 6261,
											"end": 6278,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6261,
											"end": 6278,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 6261,
											"end": 6278,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6286,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6191,
											"end": 6286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 991,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 991,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 991,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1003,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 991,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1005,
											"end": 1010,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 985,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 985,
											"end": 1011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 985,
											"end": 1011,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 985,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 931,
											"end": 1018,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 931,
											"end": 1018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10413,
											"end": 10425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10426,
											"end": 10433,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 10413,
											"end": 10434,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10412,
											"end": 10434,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 10404,
											"end": 10469,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 10404,
											"end": 10469,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10504,
											"end": 10511,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10488,
											"end": 10511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 10488,
											"end": 10498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 10488,
											"end": 10500,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10500,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 10488,
											"end": 10500,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10488,
											"end": 10511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10488,
											"end": 10511,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 10480,
											"end": 10537,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 10480,
											"end": 10537,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10572,
											"end": 10576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10548,
											"end": 10560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 10548,
											"end": 10569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10561,
											"end": 10568,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10548,
											"end": 10569,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10548,
											"end": 10569,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10569,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10569,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10548,
											"end": 10569,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10569,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10569,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10569,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10548,
											"end": 10569,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10548,
											"end": 10569,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10548,
											"end": 10576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 10548,
											"end": 10576,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10576,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10576,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10576,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 10548,
											"end": 10576,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10576,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10576,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10576,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10576,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10576,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10576,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10576,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10576,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10576,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10576,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10576,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10584,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10334,
											"end": 10584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8289,
											"end": 8290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8279,
											"end": 8286,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8279,
											"end": 8290,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 8271,
											"end": 8324,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 8271,
											"end": 8324,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8358,
											"end": 8365,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8335,
											"end": 8355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 8335,
											"end": 8365,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8335,
											"end": 8365,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8335,
											"end": 8365,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8335,
											"end": 8365,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8381,
											"end": 8419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "44D540C6079791F805BC9B5D5A643DBF1F545EC260212B2B2478EF9D9ED0768E"
										},
										{
											"begin": 8398,
											"end": 8418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 8398,
											"end": 8418,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8381,
											"end": 8419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8381,
											"end": 8419,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8381,
											"end": 8419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 8381,
											"end": 8419,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8381,
											"end": 8419,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8381,
											"end": 8419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 8381,
											"end": 8419,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8381,
											"end": 8419,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 8381,
											"end": 8419,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8381,
											"end": 8419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8381,
											"end": 8419,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8381,
											"end": 8419,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8381,
											"end": 8419,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8381,
											"end": 8419,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8381,
											"end": 8419,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8381,
											"end": 8419,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10996,
											"end": 11008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11009,
											"end": 11016,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 10996,
											"end": 11017,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 10988,
											"end": 11048,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 10988,
											"end": 11048,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11083,
											"end": 11090,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11067,
											"end": 11090,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 11067,
											"end": 11077,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 11067,
											"end": 11079,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11079,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 11067,
											"end": 11079,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11067,
											"end": 11090,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11067,
											"end": 11090,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 11059,
											"end": 11128,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 11059,
											"end": 11128,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11163,
											"end": 11168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11139,
											"end": 11151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 11139,
											"end": 11160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11152,
											"end": 11159,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11139,
											"end": 11160,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11139,
											"end": 11160,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11160,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11160,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11139,
											"end": 11160,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11160,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11160,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11160,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11139,
											"end": 11160,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11139,
											"end": 11160,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11139,
											"end": 11168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 11139,
											"end": 11168,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11168,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11168,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11168,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 11139,
											"end": 11168,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11168,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11168,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11168,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11168,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11168,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11168,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11168,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11168,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11168,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 11176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 11176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 8805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8785,
											"end": 8806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8785,
											"end": 8806,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8785,
											"end": 8792,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8785,
											"end": 8806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8785,
											"end": 8806,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8785,
											"end": 8806,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 8777,
											"end": 8849,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 8777,
											"end": 8849,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8877,
											"end": 8884,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8859,
											"end": 8874,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8859,
											"end": 8884,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8884,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8884,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8884,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8859,
											"end": 8884,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8884,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8884,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8884,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8884,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8859,
											"end": 8884,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8884,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8884,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8884,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8884,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8884,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2026F0B479F097EA9D4C74DAC26E5271BA4D59931603970DA5458EA8AA3DCF37"
										},
										{
											"begin": 8922,
											"end": 8937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8922,
											"end": 8937,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8922,
											"end": 8937,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 8922,
											"end": 8937,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8922,
											"end": 8937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 8922,
											"end": 8937,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 8922,
											"end": 8937,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8922,
											"end": 8937,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8922,
											"end": 8937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8922,
											"end": 8937,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8938,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 8899,
											"end": 8938,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 8899,
											"end": 8938,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8938,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 8899,
											"end": 8938,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8938,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8938,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8938,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8938,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8938,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7743,
											"end": 7748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 7725,
											"end": 7739,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7725,
											"end": 7748,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7725,
											"end": 7748,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 7717,
											"end": 7785,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 7717,
											"end": 7785,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7822,
											"end": 7836,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7796,
											"end": 7819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 7796,
											"end": 7836,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7796,
											"end": 7836,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7796,
											"end": 7836,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7796,
											"end": 7836,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7852,
											"end": 7908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "28AD5F14A54B644D089D89D6140175FBBF7199A6FA1275E827904C157F491546"
										},
										{
											"begin": 7884,
											"end": 7907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 7884,
											"end": 7907,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7852,
											"end": 7908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7852,
											"end": 7908,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7852,
											"end": 7908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 7852,
											"end": 7908,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7852,
											"end": 7908,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7852,
											"end": 7908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 7852,
											"end": 7908,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7852,
											"end": 7908,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 7852,
											"end": 7908,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7852,
											"end": 7908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7852,
											"end": 7908,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7852,
											"end": 7908,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7852,
											"end": 7908,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7852,
											"end": 7908,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7852,
											"end": 7908,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7852,
											"end": 7908,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7916,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7627,
											"end": 7916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4507,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4510,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 4510,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4510,
											"end": 4528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4510,
											"end": 4528,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 4510,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4545,
											"end": 4546,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4545,
											"end": 4556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4556,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4564,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4565,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9331,
											"end": 9332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9312,
											"end": 9333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9312,
											"end": 9333,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9312,
											"end": 9319,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9312,
											"end": 9333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9312,
											"end": 9333,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9312,
											"end": 9333,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 9304,
											"end": 9370,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 9304,
											"end": 9370,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9401,
											"end": 9408,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9381,
											"end": 9398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9381,
											"end": 9398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9381,
											"end": 9408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 9381,
											"end": 9408,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9381,
											"end": 9408,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9381,
											"end": 9408,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9381,
											"end": 9408,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9381,
											"end": 9408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9381,
											"end": 9408,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9381,
											"end": 9408,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 9381,
											"end": 9408,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9381,
											"end": 9408,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9381,
											"end": 9408,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9381,
											"end": 9408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9381,
											"end": 9408,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9381,
											"end": 9408,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9381,
											"end": 9408,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9381,
											"end": 9408,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9381,
											"end": 9408,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 9381,
											"end": 9408,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9424,
											"end": 9467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7404946BA3969D72CC11E8A0C21A8AB3B8DDDEB41E78F235DFAD9FFCDA3F617C"
										},
										{
											"begin": 9449,
											"end": 9466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9449,
											"end": 9466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9449,
											"end": 9466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9449,
											"end": 9466,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9449,
											"end": 9466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9449,
											"end": 9466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 9449,
											"end": 9466,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9449,
											"end": 9466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9449,
											"end": 9466,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9449,
											"end": 9466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9449,
											"end": 9466,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9424,
											"end": 9467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9424,
											"end": 9467,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9424,
											"end": 9467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 9424,
											"end": 9467,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9424,
											"end": 9467,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9424,
											"end": 9467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 9424,
											"end": 9467,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9424,
											"end": 9467,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 9424,
											"end": 9467,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9424,
											"end": 9467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9424,
											"end": 9467,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9424,
											"end": 9467,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9424,
											"end": 9467,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9424,
											"end": 9467,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9424,
											"end": 9467,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9424,
											"end": 9467,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 9227,
											"end": 9475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9227,
											"end": 9475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 1425,
											"end": 1432,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 1434,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1434,
											"end": 1446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1446,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 1434,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1409,
											"end": 1454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1454,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 1409,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1464,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 1470,
											"end": 1477,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1479,
											"end": 1484,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1464,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 1464,
											"end": 1485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1464,
											"end": 1485,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 1464,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1492,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4498,
											"end": 5901,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 4498,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4550,
											"end": 4576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 4565,
											"end": 4575,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4550,
											"end": 4564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 4550,
											"end": 4576,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4550,
											"end": 4576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 4550,
											"end": 4576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 4587,
											"end": 4607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 4587,
											"end": 4609,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 4587,
											"end": 4609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "54726162616A6F32340000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5432340000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 4620,
											"end": 4651,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 4620,
											"end": 4651,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4679,
											"end": 4721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7E43D33CE3EBE06A0BFAFFC04ACA37C4ACBD3A5"
										},
										{
											"begin": 4662,
											"end": 4677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4662,
											"end": 4677,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4662,
											"end": 4721,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4721,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4721,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4721,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4662,
											"end": 4721,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4721,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4721,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4721,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4721,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4662,
											"end": 4721,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4721,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4721,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4721,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4721,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4721,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4771,
											"end": 4813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5ED81F9BC2402A2BBD78E381C9AA1EDD99B90A55"
										},
										{
											"begin": 4751,
											"end": 4768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4751,
											"end": 4768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4751,
											"end": 4813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4751,
											"end": 4813,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4751,
											"end": 4813,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4751,
											"end": 4813,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4751,
											"end": 4813,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4751,
											"end": 4813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4751,
											"end": 4813,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4751,
											"end": 4813,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4751,
											"end": 4813,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4751,
											"end": 4813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4751,
											"end": 4813,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4751,
											"end": 4813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4751,
											"end": 4813,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4751,
											"end": 4813,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4751,
											"end": 4813,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4751,
											"end": 4813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4751,
											"end": 4813,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4751,
											"end": 4813,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4868,
											"end": 4910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D436C10D791C7A9558950A251A049871811BB070"
										},
										{
											"begin": 4845,
											"end": 4865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4845,
											"end": 4865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4845,
											"end": 4910,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4910,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4910,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4910,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4845,
											"end": 4910,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4910,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4910,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4910,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4910,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4845,
											"end": 4910,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4910,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4910,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4910,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4910,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4845,
											"end": 4910,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 4978,
											"end": 4986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 4978,
											"end": 4988,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 4988,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 4978,
											"end": 4988,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 4974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 4972,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 4972,
											"end": 4988,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 4988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 4972,
											"end": 4988,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 4988,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 4972,
											"end": 4988,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4960,
											"end": 4969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5F5E100"
										},
										{
											"begin": 4960,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 4960,
											"end": 4988,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4960,
											"end": 4988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4960,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 4960,
											"end": 4988,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4960,
											"end": 4988,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 4960,
											"end": 4988,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4945,
											"end": 4988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4988,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4945,
											"end": 4988,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5020,
											"end": 5022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 4999,
											"end": 5017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 4999,
											"end": 5022,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4999,
											"end": 5022,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4999,
											"end": 5022,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4999,
											"end": 5022,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5065,
											"end": 5067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 5042,
											"end": 5062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5112,
											"end": 5115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 5087,
											"end": 5110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 5087,
											"end": 5115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5115,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5087,
											"end": 5115,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5239,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 5229,
											"end": 5237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 5229,
											"end": 5239,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5239,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 5229,
											"end": 5239,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5221,
											"end": 5240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5221,
											"end": 5240,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5215,
											"end": 5217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 5215,
											"end": 5240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 5215,
											"end": 5240,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5215,
											"end": 5240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5215,
											"end": 5240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 5215,
											"end": 5240,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5215,
											"end": 5240,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 5215,
											"end": 5240,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5204,
											"end": 5212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1312D00"
										},
										{
											"begin": 5204,
											"end": 5240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 5204,
											"end": 5240,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5204,
											"end": 5240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5204,
											"end": 5240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 5204,
											"end": 5240,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5204,
											"end": 5240,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 5204,
											"end": 5240,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5181,
											"end": 5201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5181,
											"end": 5240,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5181,
											"end": 5240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5181,
											"end": 5240,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5181,
											"end": 5240,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5283,
											"end": 5313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 5289,
											"end": 5299,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5300,
											"end": 5312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5300,
											"end": 5312,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5283,
											"end": 5288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 5283,
											"end": 5313,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5283,
											"end": 5313,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 5283,
											"end": 5313,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5326,
											"end": 5361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5396,
											"end": 5438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D99D1C33F9FC3444F8101754ABC46C52416550D1"
										},
										{
											"begin": 5326,
											"end": 5464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5326,
											"end": 5464,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5496,
											"end": 5512,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 5478,
											"end": 5493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5478,
											"end": 5512,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5512,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5512,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5512,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5478,
											"end": 5512,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5512,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5512,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5512,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5512,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5478,
											"end": 5512,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5512,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5512,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5512,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5512,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5512,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5555,
											"end": 5579,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C45A0155"
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5581,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 5555,
											"end": 5581,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 5555,
											"end": 5581,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5537,
											"end": 5593,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C9C65396"
										},
										{
											"begin": 5616,
											"end": 5620,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5652,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5636,
											"end": 5657,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "AD5C4648"
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5636,
											"end": 5659,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 5636,
											"end": 5659,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 5636,
											"end": 5659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 5537,
											"end": 5670,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5670,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 5537,
											"end": 5670,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 5537,
											"end": 5670,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 5523,
											"end": 5534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5523,
											"end": 5670,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5670,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5670,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5670,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5523,
											"end": 5670,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5670,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5670,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5670,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5670,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5523,
											"end": 5670,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5670,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5670,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5670,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5670,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5670,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 5693,
											"end": 5703,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5713,
											"end": 5728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 5713,
											"end": 5728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5713,
											"end": 5728,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5713,
											"end": 5728,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5713,
											"end": 5728,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5713,
											"end": 5728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5713,
											"end": 5728,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5713,
											"end": 5728,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5713,
											"end": 5728,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5713,
											"end": 5728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5713,
											"end": 5728,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5731,
											"end": 5748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5684,
											"end": 5692,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 5684,
											"end": 5749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 5684,
											"end": 5749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5760,
											"end": 5828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 5777,
											"end": 5781,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 5807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 5792,
											"end": 5807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5792,
											"end": 5807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 5807,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 5807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 5807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5792,
											"end": 5807,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 5807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 5807,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 5807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5792,
											"end": 5807,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5810,
											"end": 5827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5760,
											"end": 5768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 5760,
											"end": 5828,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5760,
											"end": 5828,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 5760,
											"end": 5828,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5868,
											"end": 5878,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 5893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5847,
											"end": 5893,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5864,
											"end": 5865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5847,
											"end": 5893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5847,
											"end": 5893,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 5893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5880,
											"end": 5892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 5880,
											"end": 5892,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 5893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5847,
											"end": 5893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 5893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 5847,
											"end": 5893,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 5893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 5893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 5847,
											"end": 5893,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 5893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 5847,
											"end": 5893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 5893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5847,
											"end": 5893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 5893,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 5893,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 5893,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 5893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 5893,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 5901,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4498,
											"end": 5901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2816,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7455,
											"end": 7460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 7437,
											"end": 7451,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7437,
											"end": 7460,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7437,
											"end": 7460,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 7429,
											"end": 7497,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 7429,
											"end": 7497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7531,
											"end": 7545,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7508,
											"end": 7528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7508,
											"end": 7545,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7508,
											"end": 7545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7508,
											"end": 7545,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7508,
											"end": 7545,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D3F51AABCF3BCBD05F9260C8CCEC9728DA097C538DD797A90F527E255AE30838"
										},
										{
											"begin": 7590,
											"end": 7610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7590,
											"end": 7610,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7561,
											"end": 7611,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 7561,
											"end": 7611,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7611,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 7561,
											"end": 7611,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7611,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 7561,
											"end": 7611,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7561,
											"end": 7611,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7611,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7611,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7611,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7611,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7611,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7619,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6789,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 6771,
											"end": 6785,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6794,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6794,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 6763,
											"end": 6831,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 6763,
											"end": 6831,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6877,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6842,
											"end": 6860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 6842,
											"end": 6877,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6842,
											"end": 6877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6842,
											"end": 6877,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6842,
											"end": 6877,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6893,
											"end": 6938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "153E5299255E24F1FD2CEEE40599BFDC41290FD92340FF6173FC24EFD6C299A6"
										},
										{
											"begin": 6919,
											"end": 6937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 6919,
											"end": 6937,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6893,
											"end": 6938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6893,
											"end": 6938,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6893,
											"end": 6938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 6893,
											"end": 6938,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6893,
											"end": 6938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6893,
											"end": 6938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 6893,
											"end": 6938,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6893,
											"end": 6938,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 6893,
											"end": 6938,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6893,
											"end": 6938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6893,
											"end": 6938,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6893,
											"end": 6938,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6893,
											"end": 6938,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6893,
											"end": 6938,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6893,
											"end": 6938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6893,
											"end": 6938,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6678,
											"end": 6946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3328,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3340,
											"end": 3362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 3365,
											"end": 3383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3401,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3400,
											"end": 3409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3393,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3393,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3268,
											"end": 3416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4836,
											"end": 4840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4868,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 4868,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 4868,
											"end": 4880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4868,
											"end": 4880,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 4868,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4852,
											"end": 4880,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4852,
											"end": 4880,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 4900,
											"end": 4905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4907,
											"end": 4909,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4911,
											"end": 4916,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 4890,
											"end": 4917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4917,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 4890,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4934,
											"end": 4938,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4927,
											"end": 4938,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4927,
											"end": 4938,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4927,
											"end": 4938,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9867,
											"end": 9868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9848,
											"end": 9869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9848,
											"end": 9869,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9848,
											"end": 9855,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9848,
											"end": 9869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9848,
											"end": 9869,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9848,
											"end": 9869,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 9840,
											"end": 9915,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 9840,
											"end": 9915,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9948,
											"end": 9955,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 9925,
											"end": 9945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9925,
											"end": 9955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 9925,
											"end": 9955,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9955,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9925,
											"end": 9955,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9955,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9955,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9925,
											"end": 9955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9955,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9955,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9955,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 9925,
											"end": 9955,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9970,
											"end": 10019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5D4A0C152F269A59530B6C3A84F5A90AC341C463C9E6D5D0D04CF75596776E4F"
										},
										{
											"begin": 9998,
											"end": 10018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 9998,
											"end": 10018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9998,
											"end": 10018,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9998,
											"end": 10018,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 9998,
											"end": 10018,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9998,
											"end": 10018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 9998,
											"end": 10018,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9998,
											"end": 10018,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9998,
											"end": 10018,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9998,
											"end": 10018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9998,
											"end": 10018,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9970,
											"end": 10019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9970,
											"end": 10019,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9970,
											"end": 10019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 9970,
											"end": 10019,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9970,
											"end": 10019,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9970,
											"end": 10019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 9970,
											"end": 10019,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9970,
											"end": 10019,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 9970,
											"end": 10019,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9970,
											"end": 10019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9970,
											"end": 10019,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9970,
											"end": 10019,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9970,
											"end": 10019,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9970,
											"end": 10019,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9970,
											"end": 10019,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9970,
											"end": 10019,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 10027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 10027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2693,
											"end": 2726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2949,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5083,
											"end": 5090,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5102,
											"end": 5124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 5127,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5127,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5145,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5175,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5162,
											"end": 5175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5176,
											"end": 5181,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5190,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2867,
											"end": 2906,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2867,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11637,
											"end": 11641,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11661,
											"end": 11673,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11674,
											"end": 11681,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 11661,
											"end": 11682,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11654,
											"end": 11682,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11654,
											"end": 11682,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11574,
											"end": 11690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2242,
											"end": 2395,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2242,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2292,
											"end": 2314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00"
										},
										{
											"begin": 2349,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10266,
											"end": 10394,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10266,
											"end": 10394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10350,
											"end": 10387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10366,
											"end": 10373,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10375,
											"end": 10380,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10382,
											"end": 10386,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10350,
											"end": 10358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 10350,
											"end": 10387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10350,
											"end": 10387,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 10350,
											"end": 10387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10266,
											"end": 10394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10266,
											"end": 10394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10266,
											"end": 10394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10266,
											"end": 10394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11995,
											"end": 12472,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 11995,
											"end": 12472,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12121,
											"end": 12146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 12131,
											"end": 12136,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12138,
											"end": 12145,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12121,
											"end": 12130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 12121,
											"end": 12146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12121,
											"end": 12146,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 12121,
											"end": 12146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12146,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12094,
											"end": 12146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12180,
											"end": 12197,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12160,
											"end": 12176,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12160,
											"end": 12197,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12156,
											"end": 12466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 12156,
											"end": 12466,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12236,
											"end": 12241,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12217,
											"end": 12233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12217,
											"end": 12241,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12213,
											"end": 12343,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12213,
											"end": 12343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 12213,
											"end": 12343,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12295,
											"end": 12302,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12304,
											"end": 12320,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12322,
											"end": 12327,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 12268,
											"end": 12328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12268,
											"end": 12328,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12213,
											"end": 12343,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 12213,
											"end": 12343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 12393,
											"end": 12398,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12400,
											"end": 12407,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12428,
											"end": 12433,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12409,
											"end": 12425,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12409,
											"end": 12433,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12435,
											"end": 12440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12384,
											"end": 12392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 12384,
											"end": 12441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12384,
											"end": 12441,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 12384,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12156,
											"end": 12466,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 12156,
											"end": 12466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12084,
											"end": 12472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11995,
											"end": 12472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11995,
											"end": 12472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11995,
											"end": 12472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11995,
											"end": 12472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6868,
											"end": 7170,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 6868,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6969,
											"end": 6970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 6971,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6953,
											"end": 6971,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6957,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6971,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6953,
											"end": 6971,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 6971,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6949,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 6949,
											"end": 7035,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7022,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 6994,
											"end": 7024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7024,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6949,
											"end": 7035,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 6949,
											"end": 7035,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7063,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7048,
											"end": 7064,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7048,
											"end": 7064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7050,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7064,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7048,
											"end": 7064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7064,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7044,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 7044,
											"end": 7130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7116,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7119,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7119,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7119,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7087,
											"end": 7119,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7119,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7119,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7087,
											"end": 7119,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 7087,
											"end": 7119,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 7087,
											"end": 7119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7119,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 7087,
											"end": 7119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7119,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7119,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7119,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7119,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7119,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7119,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7044,
											"end": 7130,
											"name": "tag",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 7044,
											"end": 7130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7139,
											"end": 7163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 7147,
											"end": 7151,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7153,
											"end": 7155,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7157,
											"end": 7162,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7139,
											"end": 7146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 7139,
											"end": 7163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7139,
											"end": 7163,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 7139,
											"end": 7163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6868,
											"end": 7170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6868,
											"end": 7170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6868,
											"end": 7170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6868,
											"end": 7170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8998,
											"end": 9206,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 8998,
											"end": 9206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9087,
											"end": 9088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9068,
											"end": 9089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9068,
											"end": 9089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9068,
											"end": 9075,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9068,
											"end": 9089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9068,
											"end": 9089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9068,
											"end": 9089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9064,
											"end": 9155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 9064,
											"end": 9155,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9141,
											"end": 9142,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9112,
											"end": 9144,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9112,
											"end": 9144,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9112,
											"end": 9144,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9112,
											"end": 9144,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9112,
											"end": 9144,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9112,
											"end": 9144,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9112,
											"end": 9144,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9112,
											"end": 9144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 9112,
											"end": 9144,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9112,
											"end": 9144,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9112,
											"end": 9144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 9112,
											"end": 9144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9112,
											"end": 9144,
											"name": "tag",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 9112,
											"end": 9144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9112,
											"end": 9144,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9112,
											"end": 9144,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9112,
											"end": 9144,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9112,
											"end": 9144,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9112,
											"end": 9144,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9112,
											"end": 9144,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9112,
											"end": 9144,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9064,
											"end": 9155,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 9064,
											"end": 9155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9164,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 9180,
											"end": 9181,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9184,
											"end": 9191,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9193,
											"end": 9198,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9164,
											"end": 9171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 9164,
											"end": 9199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9164,
											"end": 9199,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 9164,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8998,
											"end": 9206,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8998,
											"end": 9206,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8998,
											"end": 9206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9524,
											"end": 9730,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 9524,
											"end": 9730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9614,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9594,
											"end": 9615,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9594,
											"end": 9615,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9594,
											"end": 9601,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9594,
											"end": 9615,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9594,
											"end": 9615,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9594,
											"end": 9615,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9590,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 9590,
											"end": 9679,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9665,
											"end": 9666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9638,
											"end": 9668,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9638,
											"end": 9668,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9638,
											"end": 9668,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9638,
											"end": 9668,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9638,
											"end": 9668,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9638,
											"end": 9668,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9638,
											"end": 9668,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9638,
											"end": 9668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 9638,
											"end": 9668,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9638,
											"end": 9668,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9638,
											"end": 9668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 9638,
											"end": 9668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9638,
											"end": 9668,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 9638,
											"end": 9668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9638,
											"end": 9668,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9638,
											"end": 9668,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9638,
											"end": 9668,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9638,
											"end": 9668,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9638,
											"end": 9668,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9638,
											"end": 9668,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9638,
											"end": 9668,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9590,
											"end": 9679,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 9590,
											"end": 9679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9688,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 9696,
											"end": 9703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9713,
											"end": 9714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9688,
											"end": 9695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 9688,
											"end": 9723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9688,
											"end": 9723,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 9688,
											"end": 9723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9524,
											"end": 9730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9524,
											"end": 9730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9524,
											"end": 9730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 666,
											"end": 731,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 666,
											"end": 731,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 666,
											"end": 731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2724,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 2577,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 2702,
											"end": 2707,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2716,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2679,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 2679,
											"end": 2717,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2679,
											"end": 2717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 2679,
											"end": 2717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2724,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2724,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2577,
											"end": 2724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11226,
											"end": 11713,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 11226,
											"end": 11713,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11334,
											"end": 11356,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11359,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 11359,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 11359,
											"end": 11377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11359,
											"end": 11377,
											"name": "tag",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 11359,
											"end": 11377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11334,
											"end": 11377,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11334,
											"end": 11377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11408,
											"end": 11409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11391,
											"end": 11410,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11391,
											"end": 11410,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11391,
											"end": 11396,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11391,
											"end": 11410,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11391,
											"end": 11410,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11391,
											"end": 11410,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11387,
											"end": 11476,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 11387,
											"end": 11476,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11462,
											"end": 11463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11433,
											"end": 11465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11433,
											"end": 11465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11433,
											"end": 11465,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11433,
											"end": 11465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11433,
											"end": 11465,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11433,
											"end": 11465,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11433,
											"end": 11465,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11433,
											"end": 11465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 11433,
											"end": 11465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11433,
											"end": 11465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11433,
											"end": 11465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 11433,
											"end": 11465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11433,
											"end": 11465,
											"name": "tag",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 11433,
											"end": 11465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11433,
											"end": 11465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11433,
											"end": 11465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11433,
											"end": 11465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11433,
											"end": 11465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11433,
											"end": 11465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11433,
											"end": 11465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11433,
											"end": 11465,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11387,
											"end": 11476,
											"name": "tag",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 11387,
											"end": 11476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11508,
											"end": 11509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11489,
											"end": 11510,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11489,
											"end": 11510,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11489,
											"end": 11496,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11489,
											"end": 11510,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11489,
											"end": 11510,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11489,
											"end": 11510,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11485,
											"end": 11575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 11485,
											"end": 11575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11561,
											"end": 11562,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11533,
											"end": 11564,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11533,
											"end": 11564,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11564,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11533,
											"end": 11564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11564,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11564,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11533,
											"end": 11564,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 11533,
											"end": 11564,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 11533,
											"end": 11564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11564,
											"name": "tag",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 11533,
											"end": 11564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11564,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11533,
											"end": 11564,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11564,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11564,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11533,
											"end": 11564,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11485,
											"end": 11575,
											"name": "tag",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 11485,
											"end": 11575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11616,
											"end": 11621,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11598,
											"end": 11603,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11604,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11584,
											"end": 11604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11604,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11584,
											"end": 11604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11584,
											"end": 11604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11584,
											"end": 11604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11584,
											"end": 11604,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11613,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11605,
											"end": 11612,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11613,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11584,
											"end": 11613,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11613,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11584,
											"end": 11613,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11613,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11613,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11613,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11584,
											"end": 11613,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11613,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11613,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11613,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11613,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11584,
											"end": 11613,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11613,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11584,
											"end": 11613,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11621,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11621,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11635,
											"end": 11644,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11631,
											"end": 11707,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11631,
											"end": 11707,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 11631,
											"end": 11707,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11681,
											"end": 11688,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11674,
											"end": 11679,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11690,
											"end": 11695,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 11665,
											"end": 11696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "tag",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 11631,
											"end": 11707,
											"name": "tag",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 11631,
											"end": 11707,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11324,
											"end": 11713,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11226,
											"end": 11713,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11226,
											"end": 11713,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11226,
											"end": 11713,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11226,
											"end": 11713,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11226,
											"end": 11713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12258,
											"end": 13859,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 12258,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12380,
											"end": 12381,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12362,
											"end": 12382,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12362,
											"end": 12382,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12362,
											"end": 12368,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12362,
											"end": 12382,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12362,
											"end": 12382,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12362,
											"end": 12382,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 12354,
											"end": 12424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 12354,
											"end": 12424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12464,
											"end": 12465,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12443,
											"end": 12466,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12443,
											"end": 12466,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12443,
											"end": 12452,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12443,
											"end": 12466,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12443,
											"end": 12466,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12443,
											"end": 12466,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 12435,
											"end": 12506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 12435,
											"end": 12506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12534,
											"end": 12535,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12525,
											"end": 12531,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12535,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 12517,
											"end": 12581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 12517,
											"end": 12581,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12615,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12616,
											"end": 12622,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 12603,
											"end": 12623,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12602,
											"end": 12623,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 12594,
											"end": 12649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 12594,
											"end": 12649,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12669,
											"end": 12681,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12682,
											"end": 12691,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 12669,
											"end": 12692,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12668,
											"end": 12692,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 12660,
											"end": 12721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 12660,
											"end": 12721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12800,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 12800,
											"end": 12805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 12800,
											"end": 12807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12800,
											"end": 12807,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 12800,
											"end": 12807,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12790,
											"end": 12807,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12790,
											"end": 12807,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12790,
											"end": 12796,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12790,
											"end": 12807,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12790,
											"end": 12807,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12790,
											"end": 12807,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12790,
											"end": 12831,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12790,
											"end": 12831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 12790,
											"end": 12831,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12790,
											"end": 12831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12824,
											"end": 12831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 12824,
											"end": 12829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 12824,
											"end": 12831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12824,
											"end": 12831,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 12824,
											"end": 12831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12811,
											"end": 12831,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12811,
											"end": 12831,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12811,
											"end": 12820,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12811,
											"end": 12831,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12811,
											"end": 12831,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12811,
											"end": 12831,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12790,
											"end": 12831,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 12790,
											"end": 12831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12790,
											"end": 12858,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12790,
											"end": 12858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 12790,
											"end": 12858,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12790,
											"end": 12858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12853,
											"end": 12857,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 12835,
											"end": 12858,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12835,
											"end": 12858,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12835,
											"end": 12841,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12835,
											"end": 12858,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12835,
											"end": 12858,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12835,
											"end": 12858,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12790,
											"end": 12858,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 12790,
											"end": 12858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12786,
											"end": 12947,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12786,
											"end": 12947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 12786,
											"end": 12947,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12874,
											"end": 12914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 12888,
											"end": 12894,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12896,
											"end": 12905,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12907,
											"end": 12913,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12874,
											"end": 12887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 12874,
											"end": 12914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12874,
											"end": 12914,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 12874,
											"end": 12914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12929,
											"end": 12936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 12929,
											"end": 12936,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12786,
											"end": 12947,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 12786,
											"end": 12947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12959,
											"end": 12969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12982,
											"end": 12993,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 12982,
											"end": 12993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12982,
											"end": 12993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12982,
											"end": 12993,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12982,
											"end": 12993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12982,
											"end": 12993,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 12982,
											"end": 12993,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 12982,
											"end": 12993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12982,
											"end": 12993,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 12982,
											"end": 12993,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12982,
											"end": 12993,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12972,
											"end": 12993,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12972,
											"end": 12993,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12972,
											"end": 12978,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12972,
											"end": 12993,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12972,
											"end": 12993,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12972,
											"end": 12993,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12959,
											"end": 12993,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12959,
											"end": 12993,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13004,
											"end": 13015,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13031,
											"end": 13042,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 13031,
											"end": 13042,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13031,
											"end": 13042,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13031,
											"end": 13042,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13031,
											"end": 13042,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13031,
											"end": 13042,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 13031,
											"end": 13042,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 13031,
											"end": 13042,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13031,
											"end": 13042,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 13031,
											"end": 13042,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13031,
											"end": 13042,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13018,
											"end": 13042,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13018,
											"end": 13042,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13018,
											"end": 13027,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13018,
											"end": 13042,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13018,
											"end": 13042,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13018,
											"end": 13042,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 13004,
											"end": 13042,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13004,
											"end": 13042,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13055,
											"end": 13075,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13086,
											"end": 13108,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13119,
											"end": 13144,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13160,
											"end": 13165,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13160,
											"end": 13175,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13160,
											"end": 13175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 13160,
											"end": 13175,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13160,
											"end": 13175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13169,
											"end": 13175,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13160,
											"end": 13175,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 13160,
											"end": 13175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13157,
											"end": 13723,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13157,
											"end": 13723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 13157,
											"end": 13723,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13210,
											"end": 13230,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 13210,
											"end": 13230,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13200,
											"end": 13206,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13200,
											"end": 13230,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 13200,
											"end": 13230,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 13191,
											"end": 13272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 13191,
											"end": 13272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13302,
											"end": 13342,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 13316,
											"end": 13322,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13323,
											"end": 13341,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 13323,
											"end": 13341,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13302,
											"end": 13315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 13302,
											"end": 13342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13302,
											"end": 13342,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 13302,
											"end": 13342,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13287,
											"end": 13342,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13287,
											"end": 13342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13374,
											"end": 13416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 13388,
											"end": 13394,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13395,
											"end": 13415,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13395,
											"end": 13415,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13374,
											"end": 13387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 13374,
											"end": 13416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13374,
											"end": 13416,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 13374,
											"end": 13416,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13357,
											"end": 13416,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13357,
											"end": 13416,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13451,
											"end": 13496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 13465,
											"end": 13471,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13472,
											"end": 13495,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 13472,
											"end": 13495,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13451,
											"end": 13464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 13451,
											"end": 13496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13451,
											"end": 13496,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 13451,
											"end": 13496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13431,
											"end": 13496,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13431,
											"end": 13496,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13513,
											"end": 13565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 13527,
											"end": 13533,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 13535,
											"end": 13550,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13535,
											"end": 13550,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13535,
											"end": 13550,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13535,
											"end": 13550,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13535,
											"end": 13550,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 13535,
											"end": 13550,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 13535,
											"end": 13550,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13535,
											"end": 13550,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 13535,
											"end": 13550,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13550,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13552,
											"end": 13564,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13513,
											"end": 13526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 13513,
											"end": 13565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13513,
											"end": 13565,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 13513,
											"end": 13565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13579,
											"end": 13635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 13593,
											"end": 13599,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 13601,
											"end": 13618,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13601,
											"end": 13618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13601,
											"end": 13618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13601,
											"end": 13618,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13601,
											"end": 13618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13601,
											"end": 13618,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 13601,
											"end": 13618,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 13601,
											"end": 13618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13601,
											"end": 13618,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 13601,
											"end": 13618,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13601,
											"end": 13618,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13620,
											"end": 13634,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13579,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 13579,
											"end": 13635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13579,
											"end": 13635,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 13579,
											"end": 13635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13649,
											"end": 13711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 13663,
											"end": 13669,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 13671,
											"end": 13691,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 13671,
											"end": 13691,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13671,
											"end": 13691,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13671,
											"end": 13691,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 13671,
											"end": 13691,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13671,
											"end": 13691,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 13671,
											"end": 13691,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 13671,
											"end": 13691,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13671,
											"end": 13691,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 13671,
											"end": 13691,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13671,
											"end": 13691,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13693,
											"end": 13710,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13649,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 13649,
											"end": 13711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13649,
											"end": 13711,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 13649,
											"end": 13711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13157,
											"end": 13723,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 13157,
											"end": 13723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13779,
											"end": 13796,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13762,
											"end": 13776,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13747,
											"end": 13759,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13747,
											"end": 13776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 13747,
											"end": 13776,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13747,
											"end": 13776,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13747,
											"end": 13776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 13747,
											"end": 13776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13747,
											"end": 13776,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 13747,
											"end": 13776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13747,
											"end": 13796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 13747,
											"end": 13796,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13747,
											"end": 13796,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13747,
											"end": 13796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 13747,
											"end": 13796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13747,
											"end": 13796,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 13747,
											"end": 13796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13736,
											"end": 13797,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13736,
											"end": 13797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 13736,
											"end": 13797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13736,
											"end": 13797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13736,
											"end": 13797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 13736,
											"end": 13797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13736,
											"end": 13797,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 13736,
											"end": 13797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13736,
											"end": 13797,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 13736,
											"end": 13797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13809,
											"end": 13849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 13823,
											"end": 13829,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 13831,
											"end": 13840,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 13842,
											"end": 13848,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 13809,
											"end": 13822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 13809,
											"end": 13849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13809,
											"end": 13849,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 13809,
											"end": 13849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12343,
											"end": 13859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12343,
											"end": 13859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12343,
											"end": 13859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12343,
											"end": 13859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12343,
											"end": 13859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12258,
											"end": 13859,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 12258,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12258,
											"end": 13859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12258,
											"end": 13859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12258,
											"end": 13859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12258,
											"end": 13859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 2730,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2885,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "454"
										},
										{
											"begin": 2867,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2867,
											"end": 2885,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2867,
											"end": 2885,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "454"
										},
										{
											"begin": 2867,
											"end": 2885,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2842,
											"end": 2885,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2842,
											"end": 2885,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 2910,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 2896,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 2902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2895,
											"end": 2902,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "455"
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "456"
										},
										{
											"begin": 2895,
											"end": 2910,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "455"
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2932,
											"end": 2939,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2921,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2920,
											"end": 2929,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "457"
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "456"
										},
										{
											"begin": 2920,
											"end": 2939,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "457"
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2946,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7485,
											"end": 8655,
											"name": "tag",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 7485,
											"end": 8655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7570,
											"end": 7592,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7595,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "459"
										},
										{
											"begin": 7595,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7595,
											"end": 7613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7595,
											"end": 7613,
											"name": "tag",
											"source": 2,
											"value": "459"
										},
										{
											"begin": 7595,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7570,
											"end": 7613,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7570,
											"end": 7613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7643,
											"end": 7644,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7627,
											"end": 7631,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7623,
											"end": 8169,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "460"
										},
										{
											"begin": 7623,
											"end": 8169,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7781,
											"end": 7786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7777,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7763,
											"end": 7777,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7777,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7763,
											"end": 7786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7786,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "461"
										},
										{
											"begin": 7763,
											"end": 7786,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 7763,
											"end": 7786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7786,
											"name": "tag",
											"source": 2,
											"value": "461"
										},
										{
											"begin": 7763,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7786,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7786,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7763,
											"end": 7786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7623,
											"end": 8169,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "462"
										},
										{
											"begin": 7623,
											"end": 8169,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7623,
											"end": 8169,
											"name": "tag",
											"source": 2,
											"value": "460"
										},
										{
											"begin": 7623,
											"end": 8169,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7817,
											"end": 7836,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7839,
											"end": 7840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 7850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7839,
											"end": 7850,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7851,
											"end": 7855,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 7856,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7817,
											"end": 7856,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7817,
											"end": 7856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7888,
											"end": 7893,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7874,
											"end": 7885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7874,
											"end": 7893,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 7985,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 7985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "463"
										},
										{
											"begin": 7870,
											"end": 7985,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7945,
											"end": 7949,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7951,
											"end": 7962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 7969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "464"
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 7920,
											"end": 7970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "tag",
											"source": 2,
											"value": "464"
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7920,
											"end": 7970,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 7985,
											"name": "tag",
											"source": 2,
											"value": "463"
										},
										{
											"begin": 7870,
											"end": 7985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8139,
											"end": 8144,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8136,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8144,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8105,
											"end": 8106,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8105,
											"end": 8116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8105,
											"end": 8116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8105,
											"end": 8122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8117,
											"end": 8121,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8105,
											"end": 8122,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8105,
											"end": 8122,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8105,
											"end": 8122,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8105,
											"end": 8122,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8105,
											"end": 8122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8105,
											"end": 8122,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8105,
											"end": 8122,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8105,
											"end": 8122,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8105,
											"end": 8122,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8105,
											"end": 8122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8105,
											"end": 8122,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8105,
											"end": 8122,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8105,
											"end": 8122,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8105,
											"end": 8122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8105,
											"end": 8122,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8105,
											"end": 8144,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8105,
											"end": 8144,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8105,
											"end": 8144,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8105,
											"end": 8144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7803,
											"end": 8169,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7623,
											"end": 8169,
											"name": "tag",
											"source": 2,
											"value": "462"
										},
										{
											"begin": 7623,
											"end": 8169,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8197,
											"end": 8198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8183,
											"end": 8199,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8183,
											"end": 8199,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8183,
											"end": 8185,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8183,
											"end": 8199,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8183,
											"end": 8199,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8183,
											"end": 8199,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "465"
										},
										{
											"begin": 8179,
											"end": 8608,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8364,
											"end": 8369,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8347,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8360,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8346,
											"end": 8369,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8369,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8369,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8369,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8369,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8369,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8346,
											"end": 8369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "466"
										},
										{
											"begin": 8179,
											"end": 8608,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8608,
											"name": "tag",
											"source": 2,
											"value": "465"
										},
										{
											"begin": 8179,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8578,
											"end": 8583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8560,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8570,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8559,
											"end": 8570,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8574,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8571,
											"end": 8573,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8574,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8559,
											"end": 8574,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8574,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8559,
											"end": 8574,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8574,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8574,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8574,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8559,
											"end": 8574,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8574,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8574,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8574,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8559,
											"end": 8574,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8574,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8559,
											"end": 8574,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8574,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8559,
											"end": 8583,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8583,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8583,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8583,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8583,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8583,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8559,
											"end": 8583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8608,
											"name": "tag",
											"source": 2,
											"value": "466"
										},
										{
											"begin": 8179,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8638,
											"end": 8640,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8632,
											"end": 8636,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8642,
											"end": 8647,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "467"
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 8623,
											"end": 8648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "tag",
											"source": 2,
											"value": "467"
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 8648,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7560,
											"end": 8655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7485,
											"end": 8655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7485,
											"end": 8655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7485,
											"end": 8655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7485,
											"end": 8655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14372,
											"end": 14526,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 14372,
											"end": 14526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14457,
											"end": 14464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14512,
											"end": 14517,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 14494,
											"end": 14507,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14484,
											"end": 14490,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14484,
											"end": 14508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 14484,
											"end": 14508,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14484,
											"end": 14508,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14484,
											"end": 14508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 14484,
											"end": 14508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14484,
											"end": 14508,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 14484,
											"end": 14508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14484,
											"end": 14518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 14484,
											"end": 14518,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14484,
											"end": 14518,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14484,
											"end": 14518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 14484,
											"end": 14518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14484,
											"end": 14518,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 14484,
											"end": 14518,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14477,
											"end": 14518,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14477,
											"end": 14518,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14372,
											"end": 14526,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14372,
											"end": 14526,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14372,
											"end": 14526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14372,
											"end": 14526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14372,
											"end": 14526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3826,
											"end": 3829,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3840,
											"end": 3852,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3840,
											"end": 3852,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 3858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3864,
											"end": 4006,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 3864,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 3965,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 3974,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 3992,
											"end": 3997,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3974,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 3974,
											"end": 3998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3974,
											"end": 3998,
											"name": "tag",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 3974,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3965,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 3965,
											"end": 3999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3965,
											"end": 3999,
											"name": "tag",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 3965,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3947,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 3947,
											"end": 4000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3947,
											"end": 4000,
											"name": "tag",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 3947,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 4000,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 4000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3864,
											"end": 4006,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3864,
											"end": 4006,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3864,
											"end": 4006,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3864,
											"end": 4006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4012,
											"end": 4138,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 4012,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4071,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 4126,
											"end": 4131,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 4095,
											"end": 4132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4132,
											"name": "tag",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 4095,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4082,
											"end": 4132,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4082,
											"end": 4132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4012,
											"end": 4138,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4012,
											"end": 4138,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4012,
											"end": 4138,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4012,
											"end": 4138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4144,
											"end": 4297,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 4144,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4221,
											"end": 4230,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4254,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 4254,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4254,
											"end": 4291,
											"name": "tag",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 4254,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4241,
											"end": 4291,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4241,
											"end": 4291,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4144,
											"end": 4297,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4144,
											"end": 4297,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4144,
											"end": 4297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4144,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4488,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 4303,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4417,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 4475,
											"end": 4480,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4417,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 4417,
											"end": 4481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4417,
											"end": 4481,
											"name": "tag",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 4417,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4412,
											"end": 4415,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4405,
											"end": 4482,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4494,
											"end": 4770,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 4494,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4614,
											"end": 4618,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4652,
											"end": 4654,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4641,
											"end": 4650,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4629,
											"end": 4655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4629,
											"end": 4655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4665,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 4760,
											"end": 4761,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4745,
											"end": 4762,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4736,
											"end": 4742,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4665,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 4665,
											"end": 4763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4665,
											"end": 4763,
											"name": "tag",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 4665,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4494,
											"end": 4770,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4494,
											"end": 4770,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4494,
											"end": 4770,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4494,
											"end": 4770,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4494,
											"end": 4770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4776,
											"end": 5395,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 4776,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4853,
											"end": 4859,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4861,
											"end": 4867,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4869,
											"end": 4875,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4918,
											"end": 4920,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4906,
											"end": 4915,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4897,
											"end": 4904,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 4916,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4889,
											"end": 4921,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4886,
											"end": 5005,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4886,
											"end": 5005,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 4886,
											"end": 5005,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4924,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 4924,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 4924,
											"end": 5003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4924,
											"end": 5003,
											"name": "tag",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 4924,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4886,
											"end": 5005,
											"name": "tag",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 4886,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5044,
											"end": 5045,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5069,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 5114,
											"end": 5121,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5105,
											"end": 5111,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5094,
											"end": 5103,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5112,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5069,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 5069,
											"end": 5122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5069,
											"end": 5122,
											"name": "tag",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 5069,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5059,
											"end": 5122,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5059,
											"end": 5122,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5015,
											"end": 5132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5171,
											"end": 5173,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5197,
											"end": 5250,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 5242,
											"end": 5249,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5233,
											"end": 5239,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5222,
											"end": 5231,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5218,
											"end": 5240,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5197,
											"end": 5250,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 5197,
											"end": 5250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5197,
											"end": 5250,
											"name": "tag",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 5197,
											"end": 5250,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5187,
											"end": 5250,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5187,
											"end": 5250,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5260,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 5301,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5325,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 5370,
											"end": 5377,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5361,
											"end": 5367,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5350,
											"end": 5359,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5346,
											"end": 5368,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5325,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 5325,
											"end": 5378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5325,
											"end": 5378,
											"name": "tag",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 5325,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5315,
											"end": 5378,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5315,
											"end": 5378,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5270,
											"end": 5388,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4776,
											"end": 5395,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4776,
											"end": 5395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4776,
											"end": 5395,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4776,
											"end": 5395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4776,
											"end": 5395,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4776,
											"end": 5395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5401,
											"end": 5487,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 5401,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5436,
											"end": 5443,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5469,
											"end": 5474,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5465,
											"end": 5481,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5454,
											"end": 5481,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5454,
											"end": 5481,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5401,
											"end": 5487,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5401,
											"end": 5487,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5401,
											"end": 5487,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5401,
											"end": 5487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5493,
											"end": 5605,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 5493,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5576,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "623"
										},
										{
											"begin": 5592,
											"end": 5597,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5576,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 5576,
											"end": 5598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5576,
											"end": 5598,
											"name": "tag",
											"source": 13,
											"value": "623"
										},
										{
											"begin": 5576,
											"end": 5598,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5571,
											"end": 5574,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5564,
											"end": 5599,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5493,
											"end": 5605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5493,
											"end": 5605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5493,
											"end": 5605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5611,
											"end": 5825,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 5611,
											"end": 5825,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5700,
											"end": 5704,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5738,
											"end": 5740,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5727,
											"end": 5736,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5723,
											"end": 5741,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5715,
											"end": 5741,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5715,
											"end": 5741,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5751,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 5815,
											"end": 5816,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5804,
											"end": 5813,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5800,
											"end": 5817,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5751,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 5751,
											"end": 5818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5751,
											"end": 5818,
											"name": "tag",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 5751,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5611,
											"end": 5825,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5611,
											"end": 5825,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5611,
											"end": 5825,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5611,
											"end": 5825,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5611,
											"end": 5825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5831,
											"end": 6160,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5831,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5890,
											"end": 5896,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5927,
											"end": 5936,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5918,
											"end": 5925,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5914,
											"end": 5937,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5942,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5907,
											"end": 6026,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5907,
											"end": 6026,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "627"
										},
										{
											"begin": 5907,
											"end": 6026,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5945,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 5945,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 5945,
											"end": 6024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5945,
											"end": 6024,
											"name": "tag",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 5945,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5907,
											"end": 6026,
											"name": "tag",
											"source": 13,
											"value": "627"
										},
										{
											"begin": 5907,
											"end": 6026,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6065,
											"end": 6066,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6090,
											"end": 6143,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 6135,
											"end": 6142,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6126,
											"end": 6132,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6111,
											"end": 6133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6090,
											"end": 6143,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 6090,
											"end": 6143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6090,
											"end": 6143,
											"name": "tag",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 6090,
											"end": 6143,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6080,
											"end": 6143,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6080,
											"end": 6143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6036,
											"end": 6153,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5831,
											"end": 6160,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5831,
											"end": 6160,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5831,
											"end": 6160,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5831,
											"end": 6160,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5831,
											"end": 6160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6166,
											"end": 6495,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 6166,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6231,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6274,
											"end": 6276,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6262,
											"end": 6271,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6249,
											"end": 6272,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6245,
											"end": 6277,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6242,
											"end": 6361,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6242,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "631"
										},
										{
											"begin": 6242,
											"end": 6361,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 6280,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 6280,
											"end": 6359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6359,
											"name": "tag",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 6280,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6242,
											"end": 6361,
											"name": "tag",
											"source": 13,
											"value": "631"
										},
										{
											"begin": 6242,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6400,
											"end": 6401,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6425,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 6470,
											"end": 6477,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6461,
											"end": 6467,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6450,
											"end": 6459,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6446,
											"end": 6468,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6425,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 6425,
											"end": 6478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6425,
											"end": 6478,
											"name": "tag",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 6425,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6415,
											"end": 6478,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6415,
											"end": 6478,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6371,
											"end": 6488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6166,
											"end": 6495,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6166,
											"end": 6495,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6166,
											"end": 6495,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6166,
											"end": 6495,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6166,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6501,
											"end": 6619,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 6501,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6588,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "635"
										},
										{
											"begin": 6606,
											"end": 6611,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6588,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 6588,
											"end": 6612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6588,
											"end": 6612,
											"name": "tag",
											"source": 13,
											"value": "635"
										},
										{
											"begin": 6588,
											"end": 6612,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6576,
											"end": 6613,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6501,
											"end": 6619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6501,
											"end": 6619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6501,
											"end": 6619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6847,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 6625,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6718,
											"end": 6722,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6758,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6745,
											"end": 6754,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6741,
											"end": 6759,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6759,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6759,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6769,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 6837,
											"end": 6838,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6826,
											"end": 6835,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6822,
											"end": 6839,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6813,
											"end": 6819,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6769,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 6769,
											"end": 6840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6769,
											"end": 6840,
											"name": "tag",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 6769,
											"end": 6840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6847,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6847,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6853,
											"end": 7327,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 6853,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6929,
											"end": 6935,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6978,
											"end": 6980,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6966,
											"end": 6975,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6957,
											"end": 6964,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6953,
											"end": 6976,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 6981,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6946,
											"end": 7065,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6946,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 6946,
											"end": 7065,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6984,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 6984,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 6984,
											"end": 7063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6984,
											"end": 7063,
											"name": "tag",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 6984,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6946,
											"end": 7065,
											"name": "tag",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 6946,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7104,
											"end": 7105,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7129,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "641"
										},
										{
											"begin": 7174,
											"end": 7181,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7165,
											"end": 7171,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7154,
											"end": 7163,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7150,
											"end": 7172,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7129,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 7129,
											"end": 7182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7129,
											"end": 7182,
											"name": "tag",
											"source": 13,
											"value": "641"
										},
										{
											"begin": 7129,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7119,
											"end": 7182,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7119,
											"end": 7182,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7075,
											"end": 7192,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7231,
											"end": 7233,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7257,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "642"
										},
										{
											"begin": 7302,
											"end": 7309,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7293,
											"end": 7299,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7282,
											"end": 7291,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7278,
											"end": 7300,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 7257,
											"end": 7310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7310,
											"name": "tag",
											"source": 13,
											"value": "642"
										},
										{
											"begin": 7257,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7247,
											"end": 7310,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7247,
											"end": 7310,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7202,
											"end": 7320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6853,
											"end": 7327,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6853,
											"end": 7327,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6853,
											"end": 7327,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6853,
											"end": 7327,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6853,
											"end": 7327,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6853,
											"end": 7327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7333,
											"end": 7513,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 7333,
											"end": 7513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7381,
											"end": 7458,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7378,
											"end": 7379,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7371,
											"end": 7459,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7478,
											"end": 7482,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 7475,
											"end": 7476,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7468,
											"end": 7483,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7502,
											"end": 7506,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7499,
											"end": 7500,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7492,
											"end": 7507,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7519,
											"end": 7839,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 7519,
											"end": 7839,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7563,
											"end": 7569,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7600,
											"end": 7601,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7594,
											"end": 7598,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7590,
											"end": 7602,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 7580,
											"end": 7602,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7580,
											"end": 7602,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7647,
											"end": 7648,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7641,
											"end": 7645,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7637,
											"end": 7649,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7668,
											"end": 7686,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7658,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 7658,
											"end": 7739,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7724,
											"end": 7728,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 7716,
											"end": 7722,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7712,
											"end": 7729,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7702,
											"end": 7729,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7702,
											"end": 7729,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7658,
											"end": 7739,
											"name": "tag",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 7658,
											"end": 7739,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7786,
											"end": 7788,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7778,
											"end": 7784,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7775,
											"end": 7789,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7755,
											"end": 7773,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7752,
											"end": 7790,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7749,
											"end": 7833,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "646"
										},
										{
											"begin": 7749,
											"end": 7833,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7805,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 7805,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 7805,
											"end": 7823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7805,
											"end": 7823,
											"name": "tag",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 7805,
											"end": 7823,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7749,
											"end": 7833,
											"name": "tag",
											"source": 13,
											"value": "646"
										},
										{
											"begin": 7749,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7570,
											"end": 7839,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7519,
											"end": 7839,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7519,
											"end": 7839,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7519,
											"end": 7839,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7519,
											"end": 7839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7985,
											"end": 8017,
											"name": "PUSH",
											"source": 13,
											"value": "4163636F756E7420697320616C726561647920626C61636B6C69737465640000"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7973,
											"end": 7979,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7969,
											"end": 7983,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7962,
											"end": 8018,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7845,
											"end": 8025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8031,
											"end": 8397,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 8031,
											"end": 8397,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8173,
											"end": 8176,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8194,
											"end": 8261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "650"
										},
										{
											"begin": 8258,
											"end": 8260,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 8253,
											"end": 8256,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8194,
											"end": 8261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 8194,
											"end": 8261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8194,
											"end": 8261,
											"name": "tag",
											"source": 13,
											"value": "650"
										},
										{
											"begin": 8194,
											"end": 8261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8187,
											"end": 8261,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8187,
											"end": 8261,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8270,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 8359,
											"end": 8362,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8270,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 8270,
											"end": 8363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8270,
											"end": 8363,
											"name": "tag",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 8270,
											"end": 8363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8388,
											"end": 8390,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8383,
											"end": 8386,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8379,
											"end": 8391,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8372,
											"end": 8391,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8372,
											"end": 8391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8031,
											"end": 8397,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8031,
											"end": 8397,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8031,
											"end": 8397,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8031,
											"end": 8397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8403,
											"end": 8822,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 8403,
											"end": 8822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8569,
											"end": 8573,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8607,
											"end": 8609,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8596,
											"end": 8605,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8584,
											"end": 8610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8584,
											"end": 8610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8656,
											"end": 8665,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8650,
											"end": 8654,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8646,
											"end": 8666,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8642,
											"end": 8643,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8631,
											"end": 8640,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8627,
											"end": 8644,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8667,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8684,
											"end": 8815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 8810,
											"end": 8814,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8684,
											"end": 8815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 8684,
											"end": 8815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8684,
											"end": 8815,
											"name": "tag",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 8684,
											"end": 8815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8676,
											"end": 8815,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8676,
											"end": 8815,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8403,
											"end": 8822,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8403,
											"end": 8822,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8403,
											"end": 8822,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8403,
											"end": 8822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8828,
											"end": 8999,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 8828,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8968,
											"end": 8991,
											"name": "PUSH",
											"source": 13,
											"value": "43616E6E6F7420626C61636B6C6973742073656C660000000000000000000000"
										},
										{
											"begin": 8964,
											"end": 8965,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8956,
											"end": 8962,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8952,
											"end": 8966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8945,
											"end": 8992,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8828,
											"end": 8999,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8828,
											"end": 8999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9147,
											"end": 9150,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "656"
										},
										{
											"begin": 9232,
											"end": 9234,
											"name": "PUSH",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 9227,
											"end": 9230,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 9168,
											"end": 9235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "tag",
											"source": 13,
											"value": "656"
										},
										{
											"begin": 9168,
											"end": 9235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9161,
											"end": 9235,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9161,
											"end": 9235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "657"
										},
										{
											"begin": 9333,
											"end": 9336,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 9244,
											"end": 9337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "tag",
											"source": 13,
											"value": "657"
										},
										{
											"begin": 9244,
											"end": 9337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9362,
											"end": 9364,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9357,
											"end": 9360,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9353,
											"end": 9365,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9346,
											"end": 9365,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9346,
											"end": 9365,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9005,
											"end": 9371,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9005,
											"end": 9371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9543,
											"end": 9547,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9581,
											"end": 9583,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9570,
											"end": 9579,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9566,
											"end": 9584,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9558,
											"end": 9584,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9558,
											"end": 9584,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9630,
											"end": 9639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9624,
											"end": 9628,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9620,
											"end": 9640,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9616,
											"end": 9617,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9614,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9601,
											"end": 9618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9641,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "659"
										},
										{
											"begin": 9784,
											"end": 9788,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 9658,
											"end": 9789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "tag",
											"source": 13,
											"value": "659"
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9377,
											"end": 9796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9802,
											"end": 9982,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 9802,
											"end": 9982,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9942,
											"end": 9974,
											"name": "PUSH",
											"source": 13,
											"value": "616D6F756E742073686F756C6420626520677265617465207468616E20300000"
										},
										{
											"begin": 9938,
											"end": 9939,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9930,
											"end": 9936,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9926,
											"end": 9940,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9919,
											"end": 9975,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9802,
											"end": 9982,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9802,
											"end": 9982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9988,
											"end": 10354,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 9988,
											"end": 10354,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10130,
											"end": 10133,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10151,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 10215,
											"end": 10217,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 10210,
											"end": 10213,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10151,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 10151,
											"end": 10218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10151,
											"end": 10218,
											"name": "tag",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 10151,
											"end": 10218,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10144,
											"end": 10218,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10144,
											"end": 10218,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10227,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "663"
										},
										{
											"begin": 10316,
											"end": 10319,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10227,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 10227,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10227,
											"end": 10320,
											"name": "tag",
											"source": 13,
											"value": "663"
										},
										{
											"begin": 10227,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10345,
											"end": 10347,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10340,
											"end": 10343,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10336,
											"end": 10348,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10348,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10348,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9988,
											"end": 10354,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9988,
											"end": 10354,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9988,
											"end": 10354,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9988,
											"end": 10354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10360,
											"end": 10779,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 10360,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10526,
											"end": 10530,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10564,
											"end": 10566,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10553,
											"end": 10562,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10549,
											"end": 10567,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10541,
											"end": 10567,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10541,
											"end": 10567,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10613,
											"end": 10622,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10607,
											"end": 10611,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10603,
											"end": 10623,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10599,
											"end": 10600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10588,
											"end": 10597,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10584,
											"end": 10601,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10577,
											"end": 10624,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10641,
											"end": 10772,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "665"
										},
										{
											"begin": 10767,
											"end": 10771,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10641,
											"end": 10772,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 10641,
											"end": 10772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10641,
											"end": 10772,
											"name": "tag",
											"source": 13,
											"value": "665"
										},
										{
											"begin": 10641,
											"end": 10772,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10633,
											"end": 10772,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10633,
											"end": 10772,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10360,
											"end": 10779,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10360,
											"end": 10779,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10360,
											"end": 10779,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10360,
											"end": 10779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10785,
											"end": 10961,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 10785,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10925,
											"end": 10953,
											"name": "PUSH",
											"source": 13,
											"value": "4163636F756E74206973206E6F7420626C61636B6C6973746564000000000000"
										},
										{
											"begin": 10921,
											"end": 10922,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10913,
											"end": 10919,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10909,
											"end": 10923,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10902,
											"end": 10954,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10785,
											"end": 10961,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10785,
											"end": 10961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10967,
											"end": 11333,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 10967,
											"end": 11333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11109,
											"end": 11112,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11130,
											"end": 11197,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "668"
										},
										{
											"begin": 11194,
											"end": 11196,
											"name": "PUSH",
											"source": 13,
											"value": "1A"
										},
										{
											"begin": 11189,
											"end": 11192,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11130,
											"end": 11197,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 11130,
											"end": 11197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11130,
											"end": 11197,
											"name": "tag",
											"source": 13,
											"value": "668"
										},
										{
											"begin": 11130,
											"end": 11197,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11123,
											"end": 11197,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11123,
											"end": 11197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11206,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "669"
										},
										{
											"begin": 11295,
											"end": 11298,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11206,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 11206,
											"end": 11299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11206,
											"end": 11299,
											"name": "tag",
											"source": 13,
											"value": "669"
										},
										{
											"begin": 11206,
											"end": 11299,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11324,
											"end": 11326,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11319,
											"end": 11322,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11315,
											"end": 11327,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11308,
											"end": 11327,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11308,
											"end": 11327,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10967,
											"end": 11333,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10967,
											"end": 11333,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10967,
											"end": 11333,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10967,
											"end": 11333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11339,
											"end": 11758,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 11339,
											"end": 11758,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11505,
											"end": 11509,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11543,
											"end": 11545,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11532,
											"end": 11541,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11528,
											"end": 11546,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11520,
											"end": 11546,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11520,
											"end": 11546,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11592,
											"end": 11601,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11586,
											"end": 11590,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11578,
											"end": 11579,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11567,
											"end": 11576,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11563,
											"end": 11580,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11556,
											"end": 11603,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11620,
											"end": 11751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "671"
										},
										{
											"begin": 11746,
											"end": 11750,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11620,
											"end": 11751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 11620,
											"end": 11751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11620,
											"end": 11751,
											"name": "tag",
											"source": 13,
											"value": "671"
										},
										{
											"begin": 11620,
											"end": 11751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11612,
											"end": 11751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11339,
											"end": 11758,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11339,
											"end": 11758,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11339,
											"end": 11758,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11339,
											"end": 11758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11764,
											"end": 11984,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 11764,
											"end": 11984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11904,
											"end": 11938,
											"name": "PUSH",
											"source": 13,
											"value": "43616E6E6F742072656D6F76652073656C662066726F6D20626C61636B6C6973"
										},
										{
											"begin": 11900,
											"end": 11901,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11892,
											"end": 11898,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11888,
											"end": 11902,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11881,
											"end": 11939,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11973,
											"end": 11976,
											"name": "PUSH",
											"source": 13,
											"value": "7400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11968,
											"end": 11970,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11960,
											"end": 11966,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11956,
											"end": 11971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11949,
											"end": 11977,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11764,
											"end": 11984,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11764,
											"end": 11984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11990,
											"end": 12356,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 11990,
											"end": 12356,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12132,
											"end": 12135,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12153,
											"end": 12220,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "674"
										},
										{
											"begin": 12217,
											"end": 12219,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 12212,
											"end": 12215,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12153,
											"end": 12220,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 12153,
											"end": 12220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12153,
											"end": 12220,
											"name": "tag",
											"source": 13,
											"value": "674"
										},
										{
											"begin": 12153,
											"end": 12220,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12220,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12146,
											"end": 12220,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12229,
											"end": 12322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "675"
										},
										{
											"begin": 12318,
											"end": 12321,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12229,
											"end": 12322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 12229,
											"end": 12322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12229,
											"end": 12322,
											"name": "tag",
											"source": 13,
											"value": "675"
										},
										{
											"begin": 12229,
											"end": 12322,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12347,
											"end": 12349,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12342,
											"end": 12345,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12338,
											"end": 12350,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12331,
											"end": 12350,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12331,
											"end": 12350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11990,
											"end": 12356,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11990,
											"end": 12356,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11990,
											"end": 12356,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11990,
											"end": 12356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12362,
											"end": 12781,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 12362,
											"end": 12781,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12528,
											"end": 12532,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12566,
											"end": 12568,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12555,
											"end": 12564,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12551,
											"end": 12569,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12543,
											"end": 12569,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12543,
											"end": 12569,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12615,
											"end": 12624,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12609,
											"end": 12613,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12605,
											"end": 12625,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12601,
											"end": 12602,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12590,
											"end": 12599,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12586,
											"end": 12603,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12579,
											"end": 12626,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12643,
											"end": 12774,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "677"
										},
										{
											"begin": 12769,
											"end": 12773,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12643,
											"end": 12774,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 12643,
											"end": 12774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12643,
											"end": 12774,
											"name": "tag",
											"source": 13,
											"value": "677"
										},
										{
											"begin": 12643,
											"end": 12774,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12635,
											"end": 12774,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12635,
											"end": 12774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12362,
											"end": 12781,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12362,
											"end": 12781,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12362,
											"end": 12781,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12362,
											"end": 12781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12787,
											"end": 13013,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 12787,
											"end": 13013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12961,
											"name": "PUSH",
											"source": 13,
											"value": "4D61726B6574696E672077616C6C65742063616E6E6F74206265207A65726F20"
										},
										{
											"begin": 12923,
											"end": 12924,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12915,
											"end": 12921,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12911,
											"end": 12925,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12904,
											"end": 12962,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12996,
											"end": 13005,
											"name": "PUSH",
											"source": 13,
											"value": "6164647265737300000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12991,
											"end": 12993,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12983,
											"end": 12989,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12979,
											"end": 12994,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12972,
											"end": 13006,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12787,
											"end": 13013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12787,
											"end": 13013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13019,
											"end": 13385,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 13019,
											"end": 13385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13161,
											"end": 13164,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13182,
											"end": 13249,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "680"
										},
										{
											"begin": 13246,
											"end": 13248,
											"name": "PUSH",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 13241,
											"end": 13244,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13182,
											"end": 13249,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 13182,
											"end": 13249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13182,
											"end": 13249,
											"name": "tag",
											"source": 13,
											"value": "680"
										},
										{
											"begin": 13182,
											"end": 13249,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13175,
											"end": 13249,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13175,
											"end": 13249,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13258,
											"end": 13351,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "681"
										},
										{
											"begin": 13347,
											"end": 13350,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13258,
											"end": 13351,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 13258,
											"end": 13351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13258,
											"end": 13351,
											"name": "tag",
											"source": 13,
											"value": "681"
										},
										{
											"begin": 13258,
											"end": 13351,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13376,
											"end": 13378,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13371,
											"end": 13374,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13367,
											"end": 13379,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13360,
											"end": 13379,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13360,
											"end": 13379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13019,
											"end": 13385,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13019,
											"end": 13385,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13019,
											"end": 13385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13019,
											"end": 13385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13391,
											"end": 13810,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 13391,
											"end": 13810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13557,
											"end": 13561,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13595,
											"end": 13597,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13584,
											"end": 13593,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13580,
											"end": 13598,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13572,
											"end": 13598,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13572,
											"end": 13598,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13644,
											"end": 13653,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13638,
											"end": 13642,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13634,
											"end": 13654,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13630,
											"end": 13631,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13619,
											"end": 13628,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13615,
											"end": 13632,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13608,
											"end": 13655,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13672,
											"end": 13803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "683"
										},
										{
											"begin": 13798,
											"end": 13802,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13672,
											"end": 13803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 13672,
											"end": 13803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13672,
											"end": 13803,
											"name": "tag",
											"source": 13,
											"value": "683"
										},
										{
											"begin": 13672,
											"end": 13803,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13664,
											"end": 13803,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13664,
											"end": 13803,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13391,
											"end": 13810,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13391,
											"end": 13810,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13391,
											"end": 13810,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13391,
											"end": 13810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13816,
											"end": 14036,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 13816,
											"end": 14036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13956,
											"end": 13990,
											"name": "PUSH",
											"source": 13,
											"value": "5461782070657263656E746167652063616E6E6F742065786365656420313030"
										},
										{
											"begin": 13952,
											"end": 13953,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13944,
											"end": 13950,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13940,
											"end": 13954,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13933,
											"end": 13991,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14025,
											"end": 14028,
											"name": "PUSH",
											"source": 13,
											"value": "2500000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14020,
											"end": 14022,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14012,
											"end": 14018,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14008,
											"end": 14023,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14001,
											"end": 14029,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13816,
											"end": 14036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13816,
											"end": 14036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14042,
											"end": 14408,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 14042,
											"end": 14408,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14184,
											"end": 14187,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14205,
											"end": 14272,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "686"
										},
										{
											"begin": 14269,
											"end": 14271,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 14264,
											"end": 14267,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14205,
											"end": 14272,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 14205,
											"end": 14272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14205,
											"end": 14272,
											"name": "tag",
											"source": 13,
											"value": "686"
										},
										{
											"begin": 14205,
											"end": 14272,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14198,
											"end": 14272,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14198,
											"end": 14272,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14281,
											"end": 14374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "687"
										},
										{
											"begin": 14370,
											"end": 14373,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14281,
											"end": 14374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 14281,
											"end": 14374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14281,
											"end": 14374,
											"name": "tag",
											"source": 13,
											"value": "687"
										},
										{
											"begin": 14281,
											"end": 14374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14399,
											"end": 14401,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14394,
											"end": 14397,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14390,
											"end": 14402,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14383,
											"end": 14402,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14383,
											"end": 14402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14042,
											"end": 14408,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14042,
											"end": 14408,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14042,
											"end": 14408,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14042,
											"end": 14408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14414,
											"end": 14833,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 14414,
											"end": 14833,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14580,
											"end": 14584,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14618,
											"end": 14620,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14607,
											"end": 14616,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14603,
											"end": 14621,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14595,
											"end": 14621,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14595,
											"end": 14621,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14667,
											"end": 14676,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14661,
											"end": 14665,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14657,
											"end": 14677,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14653,
											"end": 14654,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14642,
											"end": 14651,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14638,
											"end": 14655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14631,
											"end": 14678,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14695,
											"end": 14826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "689"
										},
										{
											"begin": 14821,
											"end": 14825,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14695,
											"end": 14826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 14695,
											"end": 14826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14695,
											"end": 14826,
											"name": "tag",
											"source": 13,
											"value": "689"
										},
										{
											"begin": 14695,
											"end": 14826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14687,
											"end": 14826,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14687,
											"end": 14826,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14414,
											"end": 14833,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14414,
											"end": 14833,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14414,
											"end": 14833,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14414,
											"end": 14833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14839,
											"end": 15059,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 14839,
											"end": 15059,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14979,
											"end": 15013,
											"name": "PUSH",
											"source": 13,
											"value": "4465762077616C6C65742063616E6E6F74206265207A65726F20616464726573"
										},
										{
											"begin": 14975,
											"end": 14976,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14967,
											"end": 14973,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14963,
											"end": 14977,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14956,
											"end": 15014,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15048,
											"end": 15051,
											"name": "PUSH",
											"source": 13,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15043,
											"end": 15045,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15035,
											"end": 15041,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15031,
											"end": 15046,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15024,
											"end": 15052,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14839,
											"end": 15059,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14839,
											"end": 15059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15065,
											"end": 15431,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 15065,
											"end": 15431,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15207,
											"end": 15210,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15228,
											"end": 15295,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "692"
										},
										{
											"begin": 15292,
											"end": 15294,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 15287,
											"end": 15290,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15228,
											"end": 15295,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 15228,
											"end": 15295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15228,
											"end": 15295,
											"name": "tag",
											"source": 13,
											"value": "692"
										},
										{
											"begin": 15228,
											"end": 15295,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15221,
											"end": 15295,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15221,
											"end": 15295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15304,
											"end": 15397,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "693"
										},
										{
											"begin": 15393,
											"end": 15396,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15304,
											"end": 15397,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 15304,
											"end": 15397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15304,
											"end": 15397,
											"name": "tag",
											"source": 13,
											"value": "693"
										},
										{
											"begin": 15304,
											"end": 15397,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15422,
											"end": 15424,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15417,
											"end": 15420,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15413,
											"end": 15425,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15406,
											"end": 15425,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15406,
											"end": 15425,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15065,
											"end": 15431,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15065,
											"end": 15431,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15065,
											"end": 15431,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15065,
											"end": 15431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15437,
											"end": 15856,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 15437,
											"end": 15856,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15603,
											"end": 15607,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15641,
											"end": 15643,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15630,
											"end": 15639,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15626,
											"end": 15644,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15618,
											"end": 15644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15618,
											"end": 15644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15690,
											"end": 15699,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15684,
											"end": 15688,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15680,
											"end": 15700,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15676,
											"end": 15677,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15665,
											"end": 15674,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15661,
											"end": 15678,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15654,
											"end": 15701,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15718,
											"end": 15849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "695"
										},
										{
											"begin": 15844,
											"end": 15848,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15718,
											"end": 15849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 15718,
											"end": 15849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15718,
											"end": 15849,
											"name": "tag",
											"source": 13,
											"value": "695"
										},
										{
											"begin": 15718,
											"end": 15849,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15710,
											"end": 15849,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15710,
											"end": 15849,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15437,
											"end": 15856,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15437,
											"end": 15856,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15437,
											"end": 15856,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15437,
											"end": 15856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15862,
											"end": 16042,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 15862,
											"end": 16042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15910,
											"end": 15987,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15907,
											"end": 15908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15900,
											"end": 15988,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16007,
											"end": 16011,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 16004,
											"end": 16005,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 15997,
											"end": 16012,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16031,
											"end": 16035,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16028,
											"end": 16029,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16021,
											"end": 16036,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 16048,
											"end": 16150,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 16048,
											"end": 16150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16090,
											"end": 16098,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16137,
											"end": 16142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16134,
											"end": 16135,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 16130,
											"end": 16143,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 16109,
											"end": 16143,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16109,
											"end": 16143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16048,
											"end": 16150,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16048,
											"end": 16150,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16048,
											"end": 16150,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16048,
											"end": 16150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16156,
											"end": 17004,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 16156,
											"end": 17004,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16217,
											"end": 16222,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16224,
											"end": 16228,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16248,
											"end": 16254,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16239,
											"end": 16254,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16239,
											"end": 16254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16272,
											"end": 16277,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16263,
											"end": 16277,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16263,
											"end": 16277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16286,
											"end": 16998,
											"name": "tag",
											"source": 13,
											"value": "699"
										},
										{
											"begin": 16286,
											"end": 16998,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16307,
											"end": 16308,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 16297,
											"end": 16305,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16294,
											"end": 16309,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 16286,
											"end": 16998,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16286,
											"end": 16998,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "701"
										},
										{
											"begin": 16286,
											"end": 16998,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16402,
											"end": 16406,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16397,
											"end": 16400,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16393,
											"end": 16407,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 16387,
											"end": 16391,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16384,
											"end": 16408,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 16381,
											"end": 16431,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16381,
											"end": 16431,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "702"
										},
										{
											"begin": 16381,
											"end": 16431,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16411,
											"end": 16429,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "703"
										},
										{
											"begin": 16411,
											"end": 16429,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 16411,
											"end": 16429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16411,
											"end": 16429,
											"name": "tag",
											"source": 13,
											"value": "703"
										},
										{
											"begin": 16411,
											"end": 16429,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16381,
											"end": 16431,
											"name": "tag",
											"source": 13,
											"value": "702"
										},
										{
											"begin": 16381,
											"end": 16431,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16461,
											"end": 16462,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 16451,
											"end": 16459,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16447,
											"end": 16463,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16444,
											"end": 16895,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16444,
											"end": 16895,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "704"
										},
										{
											"begin": 16444,
											"end": 16895,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16876,
											"end": 16880,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16869,
											"end": 16874,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16865,
											"end": 16881,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 16856,
											"end": 16881,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16856,
											"end": 16881,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16444,
											"end": 16895,
											"name": "tag",
											"source": 13,
											"value": "704"
										},
										{
											"begin": 16444,
											"end": 16895,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16926,
											"end": 16930,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16920,
											"end": 16924,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16916,
											"end": 16931,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 16908,
											"end": 16931,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16908,
											"end": 16931,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16956,
											"end": 16988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "705"
										},
										{
											"begin": 16979,
											"end": 16987,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16956,
											"end": 16988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 16956,
											"end": 16988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16956,
											"end": 16988,
											"name": "tag",
											"source": 13,
											"value": "705"
										},
										{
											"begin": 16956,
											"end": 16988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16944,
											"end": 16988,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 16944,
											"end": 16988,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16286,
											"end": 16998,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "699"
										},
										{
											"begin": 16286,
											"end": 16998,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16286,
											"end": 16998,
											"name": "tag",
											"source": 13,
											"value": "701"
										},
										{
											"begin": 16286,
											"end": 16998,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16156,
											"end": 17004,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 16156,
											"end": 17004,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16156,
											"end": 17004,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 16156,
											"end": 17004,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16156,
											"end": 17004,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16156,
											"end": 17004,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16156,
											"end": 17004,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16156,
											"end": 17004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17010,
											"end": 18083,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 17010,
											"end": 18083,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17064,
											"end": 17069,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17255,
											"end": 17263,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17245,
											"end": 17285,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "707"
										},
										{
											"begin": 17245,
											"end": 17285,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17276,
											"end": 17277,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 17267,
											"end": 17277,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17267,
											"end": 17277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17278,
											"end": 17283,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "706"
										},
										{
											"begin": 17278,
											"end": 17283,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17245,
											"end": 17285,
											"name": "tag",
											"source": 13,
											"value": "707"
										},
										{
											"begin": 17245,
											"end": 17285,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17304,
											"end": 17308,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17294,
											"end": 17330,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "708"
										},
										{
											"begin": 17294,
											"end": 17330,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17321,
											"end": 17322,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17312,
											"end": 17322,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17312,
											"end": 17322,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17323,
											"end": 17328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "706"
										},
										{
											"begin": 17323,
											"end": 17328,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17294,
											"end": 17330,
											"name": "tag",
											"source": 13,
											"value": "708"
										},
										{
											"begin": 17294,
											"end": 17330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17390,
											"end": 17394,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17438,
											"end": 17439,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 17433,
											"end": 17460,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17433,
											"end": 17460,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 17433,
											"end": 17460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "710"
										},
										{
											"begin": 17433,
											"end": 17460,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17474,
											"end": 17475,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 17469,
											"end": 17660,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17469,
											"end": 17660,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 17469,
											"end": 17660,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "711"
										},
										{
											"begin": 17469,
											"end": 17660,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17383,
											"end": 17660,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "709"
										},
										{
											"begin": 17383,
											"end": 17660,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17433,
											"end": 17460,
											"name": "tag",
											"source": 13,
											"value": "710"
										},
										{
											"begin": 17433,
											"end": 17460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17451,
											"end": 17452,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 17442,
											"end": 17452,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17442,
											"end": 17452,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17453,
											"end": 17458,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17453,
											"end": 17458,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "706"
										},
										{
											"begin": 17453,
											"end": 17458,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17469,
											"end": 17660,
											"name": "tag",
											"source": 13,
											"value": "711"
										},
										{
											"begin": 17469,
											"end": 17660,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17514,
											"end": 17517,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 17504,
											"end": 17512,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17501,
											"end": 17518,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 17498,
											"end": 17541,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17498,
											"end": 17541,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "712"
										},
										{
											"begin": 17498,
											"end": 17541,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17521,
											"end": 17539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "713"
										},
										{
											"begin": 17521,
											"end": 17539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 17521,
											"end": 17539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17521,
											"end": 17539,
											"name": "tag",
											"source": 13,
											"value": "713"
										},
										{
											"begin": 17521,
											"end": 17539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17498,
											"end": 17541,
											"name": "tag",
											"source": 13,
											"value": "712"
										},
										{
											"begin": 17498,
											"end": 17541,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17570,
											"end": 17578,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17567,
											"end": 17568,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 17563,
											"end": 17579,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 17554,
											"end": 17579,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17554,
											"end": 17579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17605,
											"end": 17608,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17598,
											"end": 17603,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17595,
											"end": 17609,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 17592,
											"end": 17632,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17592,
											"end": 17632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "714"
										},
										{
											"begin": 17592,
											"end": 17632,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17612,
											"end": 17630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "715"
										},
										{
											"begin": 17612,
											"end": 17630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 17612,
											"end": 17630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17612,
											"end": 17630,
											"name": "tag",
											"source": 13,
											"value": "715"
										},
										{
											"begin": 17612,
											"end": 17630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17592,
											"end": 17632,
											"name": "tag",
											"source": 13,
											"value": "714"
										},
										{
											"begin": 17592,
											"end": 17632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17645,
											"end": 17650,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17645,
											"end": 17650,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "706"
										},
										{
											"begin": 17645,
											"end": 17650,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17383,
											"end": 17660,
											"name": "tag",
											"source": 13,
											"value": "709"
										},
										{
											"begin": 17383,
											"end": 17660,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17383,
											"end": 17660,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17769,
											"end": 17771,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17759,
											"end": 17767,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17756,
											"end": 17772,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 17750,
											"end": 17753,
											"name": "PUSH",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 17744,
											"end": 17748,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17741,
											"end": 17754,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 17737,
											"end": 17773,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 17719,
											"end": 17721,
											"name": "PUSH",
											"source": 13,
											"value": "4E"
										},
										{
											"begin": 17709,
											"end": 17717,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17706,
											"end": 17722,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 17701,
											"end": 17703,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 17695,
											"end": 17699,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17692,
											"end": 17704,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 17688,
											"end": 17723,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 17672,
											"end": 17783,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 17669,
											"end": 17915,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17669,
											"end": 17915,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "716"
										},
										{
											"begin": 17669,
											"end": 17915,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17825,
											"end": 17833,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17819,
											"end": 17823,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17815,
											"end": 17834,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 17806,
											"end": 17834,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17806,
											"end": 17834,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17860,
											"end": 17863,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17853,
											"end": 17858,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17850,
											"end": 17864,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 17847,
											"end": 17887,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17847,
											"end": 17887,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "717"
										},
										{
											"begin": 17847,
											"end": 17887,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17867,
											"end": 17885,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "718"
										},
										{
											"begin": 17867,
											"end": 17885,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 17867,
											"end": 17885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17867,
											"end": 17885,
											"name": "tag",
											"source": 13,
											"value": "718"
										},
										{
											"begin": 17867,
											"end": 17885,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17847,
											"end": 17887,
											"name": "tag",
											"source": 13,
											"value": "717"
										},
										{
											"begin": 17847,
											"end": 17887,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17900,
											"end": 17905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "706"
										},
										{
											"begin": 17900,
											"end": 17905,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17669,
											"end": 17915,
											"name": "tag",
											"source": 13,
											"value": "716"
										},
										{
											"begin": 17669,
											"end": 17915,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17940,
											"end": 17982,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "719"
										},
										{
											"begin": 17978,
											"end": 17981,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17968,
											"end": 17976,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17962,
											"end": 17966,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17959,
											"end": 17960,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 17940,
											"end": 17982,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 17940,
											"end": 17982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17940,
											"end": 17982,
											"name": "tag",
											"source": 13,
											"value": "719"
										},
										{
											"begin": 17940,
											"end": 17982,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17925,
											"end": 17982,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17925,
											"end": 17982,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17925,
											"end": 17982,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17925,
											"end": 17982,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18014,
											"end": 18018,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18009,
											"end": 18012,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18005,
											"end": 18019,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 17998,
											"end": 18003,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17995,
											"end": 18020,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 17992,
											"end": 18043,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17992,
											"end": 18043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "720"
										},
										{
											"begin": 17992,
											"end": 18043,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18023,
											"end": 18041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "721"
										},
										{
											"begin": 18023,
											"end": 18041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 18023,
											"end": 18041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18023,
											"end": 18041,
											"name": "tag",
											"source": 13,
											"value": "721"
										},
										{
											"begin": 18023,
											"end": 18041,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17992,
											"end": 18043,
											"name": "tag",
											"source": 13,
											"value": "720"
										},
										{
											"begin": 17992,
											"end": 18043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18072,
											"end": 18076,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18065,
											"end": 18070,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18061,
											"end": 18077,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 18052,
											"end": 18077,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18052,
											"end": 18077,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17010,
											"end": 18083,
											"name": "tag",
											"source": 13,
											"value": "706"
										},
										{
											"begin": 17010,
											"end": 18083,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17010,
											"end": 18083,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 17010,
											"end": 18083,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17010,
											"end": 18083,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17010,
											"end": 18083,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17010,
											"end": 18083,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17010,
											"end": 18083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18089,
											"end": 18370,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 18089,
											"end": 18370,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18147,
											"end": 18152,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18171,
											"end": 18194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "723"
										},
										{
											"begin": 18189,
											"end": 18193,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18171,
											"end": 18194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 18171,
											"end": 18194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18171,
											"end": 18194,
											"name": "tag",
											"source": 13,
											"value": "723"
										},
										{
											"begin": 18171,
											"end": 18194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18163,
											"end": 18194,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18163,
											"end": 18194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18215,
											"end": 18240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "724"
										},
										{
											"begin": 18231,
											"end": 18239,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18215,
											"end": 18240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 18215,
											"end": 18240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18215,
											"end": 18240,
											"name": "tag",
											"source": 13,
											"value": "724"
										},
										{
											"begin": 18215,
											"end": 18240,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18203,
											"end": 18240,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18203,
											"end": 18240,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18259,
											"end": 18363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "725"
										},
										{
											"begin": 18296,
											"end": 18362,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18286,
											"end": 18294,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18280,
											"end": 18284,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18259,
											"end": 18363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 18259,
											"end": 18363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18259,
											"end": 18363,
											"name": "tag",
											"source": 13,
											"value": "725"
										},
										{
											"begin": 18259,
											"end": 18363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18250,
											"end": 18363,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18250,
											"end": 18363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18089,
											"end": 18370,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18089,
											"end": 18370,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18089,
											"end": 18370,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18089,
											"end": 18370,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18089,
											"end": 18370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18376,
											"end": 18786,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 18376,
											"end": 18786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18416,
											"end": 18423,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18439,
											"end": 18459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "727"
										},
										{
											"begin": 18457,
											"end": 18458,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18439,
											"end": 18459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 18439,
											"end": 18459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18439,
											"end": 18459,
											"name": "tag",
											"source": 13,
											"value": "727"
										},
										{
											"begin": 18439,
											"end": 18459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18434,
											"end": 18459,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18434,
											"end": 18459,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18473,
											"end": 18493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "728"
										},
										{
											"begin": 18491,
											"end": 18492,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18473,
											"end": 18493,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 18473,
											"end": 18493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18473,
											"end": 18493,
											"name": "tag",
											"source": 13,
											"value": "728"
										},
										{
											"begin": 18473,
											"end": 18493,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18468,
											"end": 18493,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18468,
											"end": 18493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18528,
											"end": 18529,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18525,
											"end": 18526,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18521,
											"end": 18530,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 18550,
											"end": 18580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "729"
										},
										{
											"begin": 18568,
											"end": 18579,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18550,
											"end": 18580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 18550,
											"end": 18580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18550,
											"end": 18580,
											"name": "tag",
											"source": 13,
											"value": "729"
										},
										{
											"begin": 18550,
											"end": 18580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18539,
											"end": 18580,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18539,
											"end": 18580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18729,
											"end": 18730,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18720,
											"end": 18727,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18716,
											"end": 18731,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 18713,
											"end": 18714,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18710,
											"end": 18732,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 18690,
											"end": 18691,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18683,
											"end": 18692,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18663,
											"end": 18746,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 18640,
											"end": 18779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "730"
										},
										{
											"begin": 18640,
											"end": 18779,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18759,
											"end": 18777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "731"
										},
										{
											"begin": 18759,
											"end": 18777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 18759,
											"end": 18777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18759,
											"end": 18777,
											"name": "tag",
											"source": 13,
											"value": "731"
										},
										{
											"begin": 18759,
											"end": 18777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18640,
											"end": 18779,
											"name": "tag",
											"source": 13,
											"value": "730"
										},
										{
											"begin": 18640,
											"end": 18779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18424,
											"end": 18786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18376,
											"end": 18786,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18376,
											"end": 18786,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18376,
											"end": 18786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18376,
											"end": 18786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18376,
											"end": 18786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18792,
											"end": 19077,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 18792,
											"end": 19077,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18852,
											"end": 18857,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18876,
											"end": 18899,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "733"
										},
										{
											"begin": 18894,
											"end": 18898,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18876,
											"end": 18899,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 18876,
											"end": 18899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18876,
											"end": 18899,
											"name": "tag",
											"source": 13,
											"value": "733"
										},
										{
											"begin": 18876,
											"end": 18899,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18868,
											"end": 18899,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18868,
											"end": 18899,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18920,
											"end": 18947,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "734"
										},
										{
											"begin": 18938,
											"end": 18946,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18920,
											"end": 18947,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 18920,
											"end": 18947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18920,
											"end": 18947,
											"name": "tag",
											"source": 13,
											"value": "734"
										},
										{
											"begin": 18920,
											"end": 18947,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18908,
											"end": 18947,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18908,
											"end": 18947,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18966,
											"end": 19070,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "735"
										},
										{
											"begin": 19003,
											"end": 19069,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18993,
											"end": 19001,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18987,
											"end": 18991,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18966,
											"end": 19070,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 18966,
											"end": 19070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18966,
											"end": 19070,
											"name": "tag",
											"source": 13,
											"value": "735"
										},
										{
											"begin": 18966,
											"end": 19070,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18957,
											"end": 19070,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18957,
											"end": 19070,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18792,
											"end": 19077,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18792,
											"end": 19077,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18792,
											"end": 19077,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18792,
											"end": 19077,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18792,
											"end": 19077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19083,
											"end": 19226,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 19083,
											"end": 19226,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19140,
											"end": 19145,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19171,
											"end": 19177,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19165,
											"end": 19178,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 19156,
											"end": 19178,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19156,
											"end": 19178,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19187,
											"end": 19220,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "737"
										},
										{
											"begin": 19214,
											"end": 19219,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19187,
											"end": 19220,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 19187,
											"end": 19220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19187,
											"end": 19220,
											"name": "tag",
											"source": 13,
											"value": "737"
										},
										{
											"begin": 19187,
											"end": 19220,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19083,
											"end": 19226,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19083,
											"end": 19226,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19083,
											"end": 19226,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19083,
											"end": 19226,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19083,
											"end": 19226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19232,
											"end": 19583,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 19232,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19302,
											"end": 19308,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19351,
											"end": 19353,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19339,
											"end": 19348,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19330,
											"end": 19337,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19326,
											"end": 19349,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19322,
											"end": 19354,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 19319,
											"end": 19438,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19319,
											"end": 19438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "739"
										},
										{
											"begin": 19319,
											"end": 19438,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19357,
											"end": 19436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "740"
										},
										{
											"begin": 19357,
											"end": 19436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 19357,
											"end": 19436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19357,
											"end": 19436,
											"name": "tag",
											"source": 13,
											"value": "740"
										},
										{
											"begin": 19357,
											"end": 19436,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19319,
											"end": 19438,
											"name": "tag",
											"source": 13,
											"value": "739"
										},
										{
											"begin": 19319,
											"end": 19438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19477,
											"end": 19478,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19502,
											"end": 19566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "741"
										},
										{
											"begin": 19558,
											"end": 19565,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19549,
											"end": 19555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19538,
											"end": 19547,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19534,
											"end": 19556,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19502,
											"end": 19566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 19502,
											"end": 19566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19502,
											"end": 19566,
											"name": "tag",
											"source": 13,
											"value": "741"
										},
										{
											"begin": 19502,
											"end": 19566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19492,
											"end": 19566,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19492,
											"end": 19566,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19448,
											"end": 19576,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19232,
											"end": 19583,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19232,
											"end": 19583,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19232,
											"end": 19583,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19232,
											"end": 19583,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19232,
											"end": 19583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19589,
											"end": 19921,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 19589,
											"end": 19921,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19710,
											"end": 19714,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19748,
											"end": 19750,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19737,
											"end": 19746,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19733,
											"end": 19751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19725,
											"end": 19751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19725,
											"end": 19751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19761,
											"end": 19832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "743"
										},
										{
											"begin": 19829,
											"end": 19830,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19818,
											"end": 19827,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19814,
											"end": 19831,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19805,
											"end": 19811,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19761,
											"end": 19832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 19761,
											"end": 19832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19761,
											"end": 19832,
											"name": "tag",
											"source": 13,
											"value": "743"
										},
										{
											"begin": 19761,
											"end": 19832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19842,
											"end": 19914,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "744"
										},
										{
											"begin": 19910,
											"end": 19912,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19899,
											"end": 19908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19895,
											"end": 19913,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19886,
											"end": 19892,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19842,
											"end": 19914,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 19842,
											"end": 19914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19842,
											"end": 19914,
											"name": "tag",
											"source": 13,
											"value": "744"
										},
										{
											"begin": 19842,
											"end": 19914,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19589,
											"end": 19921,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 19589,
											"end": 19921,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19589,
											"end": 19921,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19589,
											"end": 19921,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19589,
											"end": 19921,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19589,
											"end": 19921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19927,
											"end": 20012,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 19927,
											"end": 20012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19972,
											"end": 19979,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20001,
											"end": 20006,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19990,
											"end": 20006,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19990,
											"end": 20006,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19927,
											"end": 20012,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19927,
											"end": 20012,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19927,
											"end": 20012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19927,
											"end": 20012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20018,
											"end": 20119,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 20018,
											"end": 20119,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20054,
											"end": 20061,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20094,
											"end": 20112,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20087,
											"end": 20092,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20083,
											"end": 20113,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 20072,
											"end": 20113,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20072,
											"end": 20113,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20018,
											"end": 20119,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20018,
											"end": 20119,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20018,
											"end": 20119,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20018,
											"end": 20119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20125,
											"end": 20281,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 20125,
											"end": 20281,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20182,
											"end": 20191,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20215,
											"end": 20275,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "748"
										},
										{
											"begin": 20232,
											"end": 20274,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "749"
										},
										{
											"begin": 20241,
											"end": 20273,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "750"
										},
										{
											"begin": 20267,
											"end": 20272,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20241,
											"end": 20273,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 20241,
											"end": 20273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20241,
											"end": 20273,
											"name": "tag",
											"source": 13,
											"value": "750"
										},
										{
											"begin": 20241,
											"end": 20273,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20232,
											"end": 20274,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 20232,
											"end": 20274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20232,
											"end": 20274,
											"name": "tag",
											"source": 13,
											"value": "749"
										},
										{
											"begin": 20232,
											"end": 20274,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20215,
											"end": 20275,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 20215,
											"end": 20275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20215,
											"end": 20275,
											"name": "tag",
											"source": 13,
											"value": "748"
										},
										{
											"begin": 20215,
											"end": 20275,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20202,
											"end": 20275,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20202,
											"end": 20275,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20125,
											"end": 20281,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20125,
											"end": 20281,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20125,
											"end": 20281,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20125,
											"end": 20281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20287,
											"end": 20432,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 20287,
											"end": 20432,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20381,
											"end": 20425,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "752"
										},
										{
											"begin": 20419,
											"end": 20424,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20381,
											"end": 20425,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 20381,
											"end": 20425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20381,
											"end": 20425,
											"name": "tag",
											"source": 13,
											"value": "752"
										},
										{
											"begin": 20381,
											"end": 20425,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20376,
											"end": 20379,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20369,
											"end": 20426,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20287,
											"end": 20432,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20287,
											"end": 20432,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20287,
											"end": 20432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20438,
											"end": 20674,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 20438,
											"end": 20674,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20538,
											"end": 20542,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20576,
											"end": 20578,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20565,
											"end": 20574,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20561,
											"end": 20579,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20553,
											"end": 20579,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20553,
											"end": 20579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20589,
											"end": 20667,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "754"
										},
										{
											"begin": 20664,
											"end": 20665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20653,
											"end": 20662,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20649,
											"end": 20666,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20640,
											"end": 20646,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20589,
											"end": 20667,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 20589,
											"end": 20667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20589,
											"end": 20667,
											"name": "tag",
											"source": 13,
											"value": "754"
										},
										{
											"begin": 20589,
											"end": 20667,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20438,
											"end": 20674,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20438,
											"end": 20674,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20438,
											"end": 20674,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20438,
											"end": 20674,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20438,
											"end": 20674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20680,
											"end": 20909,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 20680,
											"end": 20909,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20820,
											"end": 20854,
											"name": "PUSH",
											"source": 13,
											"value": "737461696E6162696C6974792077616C6C65742063616E6E6F74206265207A65"
										},
										{
											"begin": 20816,
											"end": 20817,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20808,
											"end": 20814,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20804,
											"end": 20818,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20797,
											"end": 20855,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20889,
											"end": 20901,
											"name": "PUSH",
											"source": 13,
											"value": "726F206164647265737300000000000000000000000000000000000000000000"
										},
										{
											"begin": 20884,
											"end": 20886,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20876,
											"end": 20882,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20872,
											"end": 20887,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20865,
											"end": 20902,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20680,
											"end": 20909,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20680,
											"end": 20909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20915,
											"end": 21281,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 20915,
											"end": 21281,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21057,
											"end": 21060,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21078,
											"end": 21145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "757"
										},
										{
											"begin": 21142,
											"end": 21144,
											"name": "PUSH",
											"source": 13,
											"value": "2A"
										},
										{
											"begin": 21137,
											"end": 21140,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21078,
											"end": 21145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 21078,
											"end": 21145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21078,
											"end": 21145,
											"name": "tag",
											"source": 13,
											"value": "757"
										},
										{
											"begin": 21078,
											"end": 21145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21071,
											"end": 21145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21071,
											"end": 21145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21154,
											"end": 21247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "758"
										},
										{
											"begin": 21243,
											"end": 21246,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21154,
											"end": 21247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 21154,
											"end": 21247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21154,
											"end": 21247,
											"name": "tag",
											"source": 13,
											"value": "758"
										},
										{
											"begin": 21154,
											"end": 21247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21272,
											"end": 21274,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 21267,
											"end": 21270,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21263,
											"end": 21275,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21256,
											"end": 21275,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21256,
											"end": 21275,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20915,
											"end": 21281,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20915,
											"end": 21281,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20915,
											"end": 21281,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20915,
											"end": 21281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21287,
											"end": 21706,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 21287,
											"end": 21706,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21453,
											"end": 21457,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21491,
											"end": 21493,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21480,
											"end": 21489,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21476,
											"end": 21494,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21468,
											"end": 21494,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21540,
											"end": 21549,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21534,
											"end": 21538,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21530,
											"end": 21550,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21526,
											"end": 21527,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21515,
											"end": 21524,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21511,
											"end": 21528,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21504,
											"end": 21551,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21568,
											"end": 21699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "760"
										},
										{
											"begin": 21694,
											"end": 21698,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21568,
											"end": 21699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 21568,
											"end": 21699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21568,
											"end": 21699,
											"name": "tag",
											"source": 13,
											"value": "760"
										},
										{
											"begin": 21568,
											"end": 21699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21560,
											"end": 21699,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21560,
											"end": 21699,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21287,
											"end": 21706,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21287,
											"end": 21706,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21287,
											"end": 21706,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21287,
											"end": 21706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21712,
											"end": 22154,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 21712,
											"end": 22154,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21861,
											"end": 21865,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21899,
											"end": 21901,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 21888,
											"end": 21897,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21884,
											"end": 21902,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21876,
											"end": 21902,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21876,
											"end": 21902,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21912,
											"end": 21983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "762"
										},
										{
											"begin": 21980,
											"end": 21981,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21969,
											"end": 21978,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21965,
											"end": 21982,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21956,
											"end": 21962,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 21912,
											"end": 21983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 21912,
											"end": 21983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21912,
											"end": 21983,
											"name": "tag",
											"source": 13,
											"value": "762"
										},
										{
											"begin": 21912,
											"end": 21983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21993,
											"end": 22065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "763"
										},
										{
											"begin": 22061,
											"end": 22063,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22050,
											"end": 22059,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22046,
											"end": 22064,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22037,
											"end": 22043,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21993,
											"end": 22065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 21993,
											"end": 22065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21993,
											"end": 22065,
											"name": "tag",
											"source": 13,
											"value": "763"
										},
										{
											"begin": 21993,
											"end": 22065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22075,
											"end": 22147,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "764"
										},
										{
											"begin": 22143,
											"end": 22145,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 22132,
											"end": 22141,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22128,
											"end": 22146,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22119,
											"end": 22125,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22075,
											"end": 22147,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 22075,
											"end": 22147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22075,
											"end": 22147,
											"name": "tag",
											"source": 13,
											"value": "764"
										},
										{
											"begin": 22075,
											"end": 22147,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21712,
											"end": 22154,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 21712,
											"end": 22154,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 21712,
											"end": 22154,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21712,
											"end": 22154,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21712,
											"end": 22154,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21712,
											"end": 22154,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21712,
											"end": 22154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22160,
											"end": 22384,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 22160,
											"end": 22384,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22300,
											"end": 22334,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 22296,
											"end": 22297,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22288,
											"end": 22294,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22284,
											"end": 22298,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22277,
											"end": 22335,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22369,
											"end": 22376,
											"name": "PUSH",
											"source": 13,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22364,
											"end": 22366,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22356,
											"end": 22362,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22352,
											"end": 22367,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22345,
											"end": 22377,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22160,
											"end": 22384,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22160,
											"end": 22384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22390,
											"end": 22756,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 22390,
											"end": 22756,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22532,
											"end": 22535,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22553,
											"end": 22620,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "767"
										},
										{
											"begin": 22617,
											"end": 22619,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 22612,
											"end": 22615,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22553,
											"end": 22620,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 22553,
											"end": 22620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22553,
											"end": 22620,
											"name": "tag",
											"source": 13,
											"value": "767"
										},
										{
											"begin": 22553,
											"end": 22620,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22546,
											"end": 22620,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22546,
											"end": 22620,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22629,
											"end": 22722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "768"
										},
										{
											"begin": 22718,
											"end": 22721,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22629,
											"end": 22722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 22629,
											"end": 22722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22629,
											"end": 22722,
											"name": "tag",
											"source": 13,
											"value": "768"
										},
										{
											"begin": 22629,
											"end": 22722,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22747,
											"end": 22749,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 22742,
											"end": 22745,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22738,
											"end": 22750,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22731,
											"end": 22750,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22731,
											"end": 22750,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22390,
											"end": 22756,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22390,
											"end": 22756,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22390,
											"end": 22756,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22390,
											"end": 22756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22762,
											"end": 23181,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 22762,
											"end": 23181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22928,
											"end": 22932,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22966,
											"end": 22968,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22955,
											"end": 22964,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22951,
											"end": 22969,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22943,
											"end": 22969,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22943,
											"end": 22969,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23015,
											"end": 23024,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23009,
											"end": 23013,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23005,
											"end": 23025,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 23001,
											"end": 23002,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22990,
											"end": 22999,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22986,
											"end": 23003,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22979,
											"end": 23026,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23043,
											"end": 23174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "770"
										},
										{
											"begin": 23169,
											"end": 23173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23043,
											"end": 23174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 23043,
											"end": 23174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23043,
											"end": 23174,
											"name": "tag",
											"source": 13,
											"value": "770"
										},
										{
											"begin": 23043,
											"end": 23174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23035,
											"end": 23174,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23035,
											"end": 23174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22762,
											"end": 23181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22762,
											"end": 23181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22762,
											"end": 23181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22762,
											"end": 23181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23187,
											"end": 23409,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 23187,
											"end": 23409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23327,
											"end": 23361,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 23323,
											"end": 23324,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23315,
											"end": 23321,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23311,
											"end": 23325,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23304,
											"end": 23362,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23396,
											"end": 23401,
											"name": "PUSH",
											"source": 13,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23391,
											"end": 23393,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23383,
											"end": 23389,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23379,
											"end": 23394,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23372,
											"end": 23402,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23187,
											"end": 23409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23187,
											"end": 23409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23415,
											"end": 23781,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 23415,
											"end": 23781,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23557,
											"end": 23560,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23578,
											"end": 23645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "773"
										},
										{
											"begin": 23642,
											"end": 23644,
											"name": "PUSH",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 23637,
											"end": 23640,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23578,
											"end": 23645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 23578,
											"end": 23645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23578,
											"end": 23645,
											"name": "tag",
											"source": 13,
											"value": "773"
										},
										{
											"begin": 23578,
											"end": 23645,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23571,
											"end": 23645,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23571,
											"end": 23645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23654,
											"end": 23747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "774"
										},
										{
											"begin": 23743,
											"end": 23746,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23654,
											"end": 23747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 23654,
											"end": 23747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23654,
											"end": 23747,
											"name": "tag",
											"source": 13,
											"value": "774"
										},
										{
											"begin": 23654,
											"end": 23747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23772,
											"end": 23774,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 23767,
											"end": 23770,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23763,
											"end": 23775,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23756,
											"end": 23775,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23756,
											"end": 23775,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23415,
											"end": 23781,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23415,
											"end": 23781,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23415,
											"end": 23781,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23415,
											"end": 23781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23787,
											"end": 24206,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 23787,
											"end": 24206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23953,
											"end": 23957,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23991,
											"end": 23993,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23980,
											"end": 23989,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23976,
											"end": 23994,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23968,
											"end": 23994,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23968,
											"end": 23994,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24040,
											"end": 24049,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24034,
											"end": 24038,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24030,
											"end": 24050,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 24026,
											"end": 24027,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24015,
											"end": 24024,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24011,
											"end": 24028,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24004,
											"end": 24051,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24068,
											"end": 24199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "776"
										},
										{
											"begin": 24194,
											"end": 24198,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24068,
											"end": 24199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 24068,
											"end": 24199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24068,
											"end": 24199,
											"name": "tag",
											"source": 13,
											"value": "776"
										},
										{
											"begin": 24068,
											"end": 24199,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24060,
											"end": 24199,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24060,
											"end": 24199,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23787,
											"end": 24206,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23787,
											"end": 24206,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23787,
											"end": 24206,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23787,
											"end": 24206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24212,
											"end": 24440,
											"name": "tag",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 24212,
											"end": 24440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24352,
											"end": 24386,
											"name": "PUSH",
											"source": 13,
											"value": "5472616E7366657220616D6F756E74206D757374206265206772656174657220"
										},
										{
											"begin": 24348,
											"end": 24349,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24340,
											"end": 24346,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24336,
											"end": 24350,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24329,
											"end": 24387,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24421,
											"end": 24432,
											"name": "PUSH",
											"source": 13,
											"value": "7468616E207A65726F0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24416,
											"end": 24418,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24408,
											"end": 24414,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24404,
											"end": 24419,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24397,
											"end": 24433,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24212,
											"end": 24440,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24212,
											"end": 24440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24446,
											"end": 24812,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 24446,
											"end": 24812,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24588,
											"end": 24591,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24609,
											"end": 24676,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "779"
										},
										{
											"begin": 24673,
											"end": 24675,
											"name": "PUSH",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 24668,
											"end": 24671,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24609,
											"end": 24676,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 24609,
											"end": 24676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24609,
											"end": 24676,
											"name": "tag",
											"source": 13,
											"value": "779"
										},
										{
											"begin": 24609,
											"end": 24676,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24602,
											"end": 24676,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24602,
											"end": 24676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24685,
											"end": 24778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "780"
										},
										{
											"begin": 24774,
											"end": 24777,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24685,
											"end": 24778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 24685,
											"end": 24778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24685,
											"end": 24778,
											"name": "tag",
											"source": 13,
											"value": "780"
										},
										{
											"begin": 24685,
											"end": 24778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24803,
											"end": 24805,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 24798,
											"end": 24801,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24794,
											"end": 24806,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24787,
											"end": 24806,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24787,
											"end": 24806,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24446,
											"end": 24812,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24446,
											"end": 24812,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24446,
											"end": 24812,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24446,
											"end": 24812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24818,
											"end": 25237,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 24818,
											"end": 25237,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24984,
											"end": 24988,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25022,
											"end": 25024,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 25011,
											"end": 25020,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25007,
											"end": 25025,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24999,
											"end": 25025,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24999,
											"end": 25025,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25071,
											"end": 25080,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25065,
											"end": 25069,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25061,
											"end": 25081,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 25057,
											"end": 25058,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25046,
											"end": 25055,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25042,
											"end": 25059,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25035,
											"end": 25082,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 25099,
											"end": 25230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "782"
										},
										{
											"begin": 25225,
											"end": 25229,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25099,
											"end": 25230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 25099,
											"end": 25230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25099,
											"end": 25230,
											"name": "tag",
											"source": 13,
											"value": "782"
										},
										{
											"begin": 25099,
											"end": 25230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25091,
											"end": 25230,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25091,
											"end": 25230,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24818,
											"end": 25237,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24818,
											"end": 25237,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24818,
											"end": 25237,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24818,
											"end": 25237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25243,
											"end": 25414,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 25243,
											"end": 25414,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25383,
											"end": 25406,
											"name": "PUSH",
											"source": 13,
											"value": "53656E64657220697320626C61636B6C69737465640000000000000000000000"
										},
										{
											"begin": 25379,
											"end": 25380,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25371,
											"end": 25377,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25367,
											"end": 25381,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25360,
											"end": 25407,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 25243,
											"end": 25414,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25243,
											"end": 25414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25420,
											"end": 25786,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 25420,
											"end": 25786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25562,
											"end": 25565,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25583,
											"end": 25650,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "785"
										},
										{
											"begin": 25647,
											"end": 25649,
											"name": "PUSH",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 25642,
											"end": 25645,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25583,
											"end": 25650,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 25583,
											"end": 25650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25583,
											"end": 25650,
											"name": "tag",
											"source": 13,
											"value": "785"
										},
										{
											"begin": 25583,
											"end": 25650,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25576,
											"end": 25650,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25576,
											"end": 25650,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25659,
											"end": 25752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "786"
										},
										{
											"begin": 25748,
											"end": 25751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25659,
											"end": 25752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 25659,
											"end": 25752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25659,
											"end": 25752,
											"name": "tag",
											"source": 13,
											"value": "786"
										},
										{
											"begin": 25659,
											"end": 25752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25777,
											"end": 25779,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 25772,
											"end": 25775,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25768,
											"end": 25780,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25761,
											"end": 25780,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25761,
											"end": 25780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25420,
											"end": 25786,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25420,
											"end": 25786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25420,
											"end": 25786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25420,
											"end": 25786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25792,
											"end": 26211,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 25792,
											"end": 26211,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25958,
											"end": 25962,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25996,
											"end": 25998,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 25985,
											"end": 25994,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25981,
											"end": 25999,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25973,
											"end": 25999,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25973,
											"end": 25999,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26045,
											"end": 26054,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26039,
											"end": 26043,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26035,
											"end": 26055,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 26031,
											"end": 26032,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26020,
											"end": 26029,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26016,
											"end": 26033,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26009,
											"end": 26056,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 26073,
											"end": 26204,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "788"
										},
										{
											"begin": 26199,
											"end": 26203,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26073,
											"end": 26204,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 26073,
											"end": 26204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26073,
											"end": 26204,
											"name": "tag",
											"source": 13,
											"value": "788"
										},
										{
											"begin": 26073,
											"end": 26204,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26065,
											"end": 26204,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26065,
											"end": 26204,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25792,
											"end": 26211,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25792,
											"end": 26211,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25792,
											"end": 26211,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25792,
											"end": 26211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26217,
											"end": 26391,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 26217,
											"end": 26391,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26357,
											"end": 26383,
											"name": "PUSH",
											"source": 13,
											"value": "526563697069656E7420697320626C61636B6C69737465640000000000000000"
										},
										{
											"begin": 26353,
											"end": 26354,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26345,
											"end": 26351,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26341,
											"end": 26355,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26334,
											"end": 26384,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 26217,
											"end": 26391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26217,
											"end": 26391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26397,
											"end": 26763,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 26397,
											"end": 26763,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26539,
											"end": 26542,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26560,
											"end": 26627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "791"
										},
										{
											"begin": 26624,
											"end": 26626,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 26619,
											"end": 26622,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26560,
											"end": 26627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 26560,
											"end": 26627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26560,
											"end": 26627,
											"name": "tag",
											"source": 13,
											"value": "791"
										},
										{
											"begin": 26560,
											"end": 26627,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26553,
											"end": 26627,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26553,
											"end": 26627,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26636,
											"end": 26729,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "792"
										},
										{
											"begin": 26725,
											"end": 26728,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26636,
											"end": 26729,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 26636,
											"end": 26729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26636,
											"end": 26729,
											"name": "tag",
											"source": 13,
											"value": "792"
										},
										{
											"begin": 26636,
											"end": 26729,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26754,
											"end": 26756,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 26749,
											"end": 26752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26745,
											"end": 26757,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26738,
											"end": 26757,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26738,
											"end": 26757,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26397,
											"end": 26763,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26397,
											"end": 26763,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26397,
											"end": 26763,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26397,
											"end": 26763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26769,
											"end": 27188,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 26769,
											"end": 27188,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26935,
											"end": 26939,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26973,
											"end": 26975,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 26962,
											"end": 26971,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26958,
											"end": 26976,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26950,
											"end": 26976,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26950,
											"end": 26976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27022,
											"end": 27031,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 27016,
											"end": 27020,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 27012,
											"end": 27032,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 27008,
											"end": 27009,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26997,
											"end": 27006,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26993,
											"end": 27010,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26986,
											"end": 27033,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 27050,
											"end": 27181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "794"
										},
										{
											"begin": 27176,
											"end": 27180,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 27050,
											"end": 27181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 27050,
											"end": 27181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27050,
											"end": 27181,
											"name": "tag",
											"source": 13,
											"value": "794"
										},
										{
											"begin": 27050,
											"end": 27181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27042,
											"end": 27181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27042,
											"end": 27181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26769,
											"end": 27188,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26769,
											"end": 27188,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26769,
											"end": 27188,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26769,
											"end": 27188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27194,
											"end": 27418,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 27194,
											"end": 27418,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27334,
											"end": 27368,
											"name": "PUSH",
											"source": 13,
											"value": "43616E6E6F742062757920262073656C6C206D6F7265207468616E206D617820"
										},
										{
											"begin": 27330,
											"end": 27331,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27322,
											"end": 27328,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27318,
											"end": 27332,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27311,
											"end": 27369,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 27403,
											"end": 27410,
											"name": "PUSH",
											"source": 13,
											"value": "6C696D6974000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27398,
											"end": 27400,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 27390,
											"end": 27396,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27386,
											"end": 27401,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27379,
											"end": 27411,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 27194,
											"end": 27418,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27194,
											"end": 27418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27424,
											"end": 27790,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 27424,
											"end": 27790,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27566,
											"end": 27569,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27587,
											"end": 27654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "797"
										},
										{
											"begin": 27651,
											"end": 27653,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 27646,
											"end": 27649,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27587,
											"end": 27654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 27587,
											"end": 27654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27587,
											"end": 27654,
											"name": "tag",
											"source": 13,
											"value": "797"
										},
										{
											"begin": 27587,
											"end": 27654,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27580,
											"end": 27654,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 27580,
											"end": 27654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27663,
											"end": 27756,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "798"
										},
										{
											"begin": 27752,
											"end": 27755,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27663,
											"end": 27756,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 27663,
											"end": 27756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27663,
											"end": 27756,
											"name": "tag",
											"source": 13,
											"value": "798"
										},
										{
											"begin": 27663,
											"end": 27756,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27781,
											"end": 27783,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 27776,
											"end": 27779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27772,
											"end": 27784,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27765,
											"end": 27784,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27765,
											"end": 27784,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27424,
											"end": 27790,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 27424,
											"end": 27790,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27424,
											"end": 27790,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27424,
											"end": 27790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27796,
											"end": 28215,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 27796,
											"end": 28215,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27962,
											"end": 27966,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28000,
											"end": 28002,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 27989,
											"end": 27998,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27985,
											"end": 28003,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27977,
											"end": 28003,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27977,
											"end": 28003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28049,
											"end": 28058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28043,
											"end": 28047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28039,
											"end": 28059,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 28035,
											"end": 28036,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28024,
											"end": 28033,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 28020,
											"end": 28037,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28013,
											"end": 28060,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 28077,
											"end": 28208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "800"
										},
										{
											"begin": 28203,
											"end": 28207,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28077,
											"end": 28208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 28077,
											"end": 28208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28077,
											"end": 28208,
											"name": "tag",
											"source": 13,
											"value": "800"
										},
										{
											"begin": 28077,
											"end": 28208,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28069,
											"end": 28208,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28069,
											"end": 28208,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27796,
											"end": 28215,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 27796,
											"end": 28215,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27796,
											"end": 28215,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27796,
											"end": 28215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28221,
											"end": 28412,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 28221,
											"end": 28412,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28261,
											"end": 28264,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28280,
											"end": 28300,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "802"
										},
										{
											"begin": 28298,
											"end": 28299,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28280,
											"end": 28300,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 28280,
											"end": 28300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28280,
											"end": 28300,
											"name": "tag",
											"source": 13,
											"value": "802"
										},
										{
											"begin": 28280,
											"end": 28300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28275,
											"end": 28300,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28275,
											"end": 28300,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28314,
											"end": 28334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "803"
										},
										{
											"begin": 28332,
											"end": 28333,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 28314,
											"end": 28334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 28314,
											"end": 28334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28314,
											"end": 28334,
											"name": "tag",
											"source": 13,
											"value": "803"
										},
										{
											"begin": 28314,
											"end": 28334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28309,
											"end": 28334,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 28309,
											"end": 28334,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28357,
											"end": 28358,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28354,
											"end": 28355,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28350,
											"end": 28359,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28343,
											"end": 28359,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28343,
											"end": 28359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28378,
											"end": 28381,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 28375,
											"end": 28376,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28372,
											"end": 28382,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 28369,
											"end": 28405,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 28369,
											"end": 28405,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "804"
										},
										{
											"begin": 28369,
											"end": 28405,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 28385,
											"end": 28403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "805"
										},
										{
											"begin": 28385,
											"end": 28403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 28385,
											"end": 28403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28385,
											"end": 28403,
											"name": "tag",
											"source": 13,
											"value": "805"
										},
										{
											"begin": 28385,
											"end": 28403,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28369,
											"end": 28405,
											"name": "tag",
											"source": 13,
											"value": "804"
										},
										{
											"begin": 28369,
											"end": 28405,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28221,
											"end": 28412,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 28221,
											"end": 28412,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28221,
											"end": 28412,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28221,
											"end": 28412,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28221,
											"end": 28412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28418,
											"end": 28612,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 28418,
											"end": 28612,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28458,
											"end": 28462,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28478,
											"end": 28498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "807"
										},
										{
											"begin": 28496,
											"end": 28497,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28478,
											"end": 28498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 28478,
											"end": 28498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28478,
											"end": 28498,
											"name": "tag",
											"source": 13,
											"value": "807"
										},
										{
											"begin": 28478,
											"end": 28498,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28473,
											"end": 28498,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28473,
											"end": 28498,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28512,
											"end": 28532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "808"
										},
										{
											"begin": 28530,
											"end": 28531,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 28512,
											"end": 28532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 28512,
											"end": 28532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28512,
											"end": 28532,
											"name": "tag",
											"source": 13,
											"value": "808"
										},
										{
											"begin": 28512,
											"end": 28532,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28507,
											"end": 28532,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 28507,
											"end": 28532,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28556,
											"end": 28557,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28553,
											"end": 28554,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28549,
											"end": 28558,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 28541,
											"end": 28558,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28541,
											"end": 28558,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28580,
											"end": 28581,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28574,
											"end": 28578,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28571,
											"end": 28582,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 28568,
											"end": 28605,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 28568,
											"end": 28605,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "809"
										},
										{
											"begin": 28568,
											"end": 28605,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 28585,
											"end": 28603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "810"
										},
										{
											"begin": 28585,
											"end": 28603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 28585,
											"end": 28603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28585,
											"end": 28603,
											"name": "tag",
											"source": 13,
											"value": "810"
										},
										{
											"begin": 28585,
											"end": 28603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28568,
											"end": 28605,
											"name": "tag",
											"source": 13,
											"value": "809"
										},
										{
											"begin": 28568,
											"end": 28605,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28418,
											"end": 28612,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 28418,
											"end": 28612,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28418,
											"end": 28612,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28418,
											"end": 28612,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28418,
											"end": 28612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28618,
											"end": 28798,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 28618,
											"end": 28798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28666,
											"end": 28743,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28663,
											"end": 28664,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28656,
											"end": 28744,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 28763,
											"end": 28767,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 28760,
											"end": 28761,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 28753,
											"end": 28768,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 28787,
											"end": 28791,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 28784,
											"end": 28785,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28777,
											"end": 28792,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 28804,
											"end": 28945,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 28804,
											"end": 28945,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28853,
											"end": 28857,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28876,
											"end": 28879,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28868,
											"end": 28879,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28868,
											"end": 28879,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28899,
											"end": 28902,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28896,
											"end": 28897,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28889,
											"end": 28903,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 28933,
											"end": 28937,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 28930,
											"end": 28931,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28920,
											"end": 28938,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 28912,
											"end": 28938,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28912,
											"end": 28938,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28804,
											"end": 28945,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28804,
											"end": 28945,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28804,
											"end": 28945,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28804,
											"end": 28945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 28951,
											"end": 29044,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 28951,
											"end": 29044,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28988,
											"end": 28994,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 29035,
											"end": 29037,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 29030,
											"end": 29032,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 29023,
											"end": 29028,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 29019,
											"end": 29033,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29015,
											"end": 29038,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 29005,
											"end": 29038,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29005,
											"end": 29038,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28951,
											"end": 29044,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28951,
											"end": 29044,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28951,
											"end": 29044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28951,
											"end": 29044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29050,
											"end": 29157,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 29050,
											"end": 29157,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29094,
											"end": 29102,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 29144,
											"end": 29149,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 29138,
											"end": 29142,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 29134,
											"end": 29150,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 29113,
											"end": 29150,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29113,
											"end": 29150,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29050,
											"end": 29157,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 29050,
											"end": 29157,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 29050,
											"end": 29157,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29050,
											"end": 29157,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29050,
											"end": 29157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29163,
											"end": 29556,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 29163,
											"end": 29556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29232,
											"end": 29238,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 29282,
											"end": 29283,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 29270,
											"end": 29280,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 29266,
											"end": 29284,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 29305,
											"end": 29402,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "816"
										},
										{
											"begin": 29335,
											"end": 29401,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29324,
											"end": 29333,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 29305,
											"end": 29402,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 29305,
											"end": 29402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29305,
											"end": 29402,
											"name": "tag",
											"source": 13,
											"value": "816"
										},
										{
											"begin": 29305,
											"end": 29402,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29423,
											"end": 29462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "817"
										},
										{
											"begin": 29453,
											"end": 29461,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 29442,
											"end": 29451,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 29423,
											"end": 29462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 29423,
											"end": 29462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29423,
											"end": 29462,
											"name": "tag",
											"source": 13,
											"value": "817"
										},
										{
											"begin": 29423,
											"end": 29462,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29411,
											"end": 29462,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 29411,
											"end": 29462,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29495,
											"end": 29499,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 29491,
											"end": 29500,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 29484,
											"end": 29489,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 29480,
											"end": 29501,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 29471,
											"end": 29501,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 29471,
											"end": 29501,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29544,
											"end": 29548,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 29534,
											"end": 29542,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 29530,
											"end": 29549,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 29523,
											"end": 29528,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 29520,
											"end": 29550,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 29510,
											"end": 29550,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 29510,
											"end": 29550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29239,
											"end": 29556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29239,
											"end": 29556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29163,
											"end": 29556,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 29163,
											"end": 29556,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 29163,
											"end": 29556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29163,
											"end": 29556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29163,
											"end": 29556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29163,
											"end": 29556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29562,
											"end": 29704,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 29562,
											"end": 29704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29612,
											"end": 29621,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 29645,
											"end": 29698,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "819"
										},
										{
											"begin": 29663,
											"end": 29697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "820"
										},
										{
											"begin": 29672,
											"end": 29696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "821"
										},
										{
											"begin": 29690,
											"end": 29695,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 29672,
											"end": 29696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 29672,
											"end": 29696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29672,
											"end": 29696,
											"name": "tag",
											"source": 13,
											"value": "821"
										},
										{
											"begin": 29672,
											"end": 29696,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29663,
											"end": 29697,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 29663,
											"end": 29697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29663,
											"end": 29697,
											"name": "tag",
											"source": 13,
											"value": "820"
										},
										{
											"begin": 29663,
											"end": 29697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29645,
											"end": 29698,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 29645,
											"end": 29698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29645,
											"end": 29698,
											"name": "tag",
											"source": 13,
											"value": "819"
										},
										{
											"begin": 29645,
											"end": 29698,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29632,
											"end": 29698,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29632,
											"end": 29698,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29562,
											"end": 29704,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 29562,
											"end": 29704,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29562,
											"end": 29704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29562,
											"end": 29704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29710,
											"end": 29785,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 29710,
											"end": 29785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29753,
											"end": 29756,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 29774,
											"end": 29779,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 29767,
											"end": 29779,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29767,
											"end": 29779,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29710,
											"end": 29785,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 29710,
											"end": 29785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29710,
											"end": 29785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29710,
											"end": 29785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29791,
											"end": 30060,
											"name": "tag",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 29791,
											"end": 30060,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29901,
											"end": 29940,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "824"
										},
										{
											"begin": 29932,
											"end": 29939,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 29901,
											"end": 29940,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 29901,
											"end": 29940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29901,
											"end": 29940,
											"name": "tag",
											"source": 13,
											"value": "824"
										},
										{
											"begin": 29901,
											"end": 29940,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29962,
											"end": 30053,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "825"
										},
										{
											"begin": 30011,
											"end": 30052,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "826"
										},
										{
											"begin": 30035,
											"end": 30051,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 30011,
											"end": 30052,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 30011,
											"end": 30052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30011,
											"end": 30052,
											"name": "tag",
											"source": 13,
											"value": "826"
										},
										{
											"begin": 30011,
											"end": 30052,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30003,
											"end": 30009,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 29996,
											"end": 30000,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 29990,
											"end": 30001,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 29962,
											"end": 30053,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 29962,
											"end": 30053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 29962,
											"end": 30053,
											"name": "tag",
											"source": 13,
											"value": "825"
										},
										{
											"begin": 29962,
											"end": 30053,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29956,
											"end": 29960,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 29949,
											"end": 30054,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 29867,
											"end": 30060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29791,
											"end": 30060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29791,
											"end": 30060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29791,
											"end": 30060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29791,
											"end": 30060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30066,
											"end": 30139,
											"name": "tag",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 30066,
											"end": 30139,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30111,
											"end": 30114,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 30066,
											"end": 30139,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 30066,
											"end": 30139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30145,
											"end": 30334,
											"name": "tag",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 30145,
											"end": 30334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30222,
											"end": 30254,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "829"
										},
										{
											"begin": 30222,
											"end": 30254,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 30222,
											"end": 30254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30222,
											"end": 30254,
											"name": "tag",
											"source": 13,
											"value": "829"
										},
										{
											"begin": 30222,
											"end": 30254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30263,
											"end": 30328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "830"
										},
										{
											"begin": 30321,
											"end": 30327,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 30313,
											"end": 30319,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 30307,
											"end": 30311,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 30263,
											"end": 30328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 30263,
											"end": 30328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30263,
											"end": 30328,
											"name": "tag",
											"source": 13,
											"value": "830"
										},
										{
											"begin": 30263,
											"end": 30328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30198,
											"end": 30334,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30145,
											"end": 30334,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30145,
											"end": 30334,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30145,
											"end": 30334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30340,
											"end": 30526,
											"name": "tag",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 30340,
											"end": 30526,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30400,
											"end": 30520,
											"name": "tag",
											"source": 13,
											"value": "832"
										},
										{
											"begin": 30400,
											"end": 30520,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30417,
											"end": 30420,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 30410,
											"end": 30415,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 30407,
											"end": 30421,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 30400,
											"end": 30520,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 30400,
											"end": 30520,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "834"
										},
										{
											"begin": 30400,
											"end": 30520,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 30471,
											"end": 30510,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "835"
										},
										{
											"begin": 30508,
											"end": 30509,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 30501,
											"end": 30506,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 30471,
											"end": 30510,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 30471,
											"end": 30510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30471,
											"end": 30510,
											"name": "tag",
											"source": 13,
											"value": "835"
										},
										{
											"begin": 30471,
											"end": 30510,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30444,
											"end": 30445,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 30437,
											"end": 30442,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 30433,
											"end": 30446,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 30424,
											"end": 30446,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 30424,
											"end": 30446,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30400,
											"end": 30520,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "832"
										},
										{
											"begin": 30400,
											"end": 30520,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30400,
											"end": 30520,
											"name": "tag",
											"source": 13,
											"value": "834"
										},
										{
											"begin": 30400,
											"end": 30520,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30340,
											"end": 30526,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30340,
											"end": 30526,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30340,
											"end": 30526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30532,
											"end": 31075,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 30532,
											"end": 31075,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30633,
											"end": 30635,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 30628,
											"end": 30631,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 30625,
											"end": 30636,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 30622,
											"end": 31068,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 30622,
											"end": 31068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "837"
										},
										{
											"begin": 30622,
											"end": 31068,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 30667,
											"end": 30705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "838"
										},
										{
											"begin": 30699,
											"end": 30704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 30667,
											"end": 30705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 30667,
											"end": 30705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30667,
											"end": 30705,
											"name": "tag",
											"source": 13,
											"value": "838"
										},
										{
											"begin": 30667,
											"end": 30705,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30751,
											"end": 30780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "839"
										},
										{
											"begin": 30769,
											"end": 30779,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 30751,
											"end": 30780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 30751,
											"end": 30780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30751,
											"end": 30780,
											"name": "tag",
											"source": 13,
											"value": "839"
										},
										{
											"begin": 30751,
											"end": 30780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30741,
											"end": 30749,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 30737,
											"end": 30781,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 30934,
											"end": 30936,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 30922,
											"end": 30932,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 30919,
											"end": 30937,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 30916,
											"end": 30965,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 30916,
											"end": 30965,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "840"
										},
										{
											"begin": 30916,
											"end": 30965,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 30955,
											"end": 30963,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 30940,
											"end": 30963,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 30940,
											"end": 30963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30916,
											"end": 30965,
											"name": "tag",
											"source": 13,
											"value": "840"
										},
										{
											"begin": 30916,
											"end": 30965,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30978,
											"end": 31058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "841"
										},
										{
											"begin": 31034,
											"end": 31056,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "842"
										},
										{
											"begin": 31052,
											"end": 31055,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 31034,
											"end": 31056,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 31034,
											"end": 31056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 31034,
											"end": 31056,
											"name": "tag",
											"source": 13,
											"value": "842"
										},
										{
											"begin": 31034,
											"end": 31056,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31024,
											"end": 31032,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 31020,
											"end": 31057,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 31007,
											"end": 31018,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 30978,
											"end": 31058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 30978,
											"end": 31058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 30978,
											"end": 31058,
											"name": "tag",
											"source": 13,
											"value": "841"
										},
										{
											"begin": 30978,
											"end": 31058,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30637,
											"end": 31068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30637,
											"end": 31068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30622,
											"end": 31068,
											"name": "tag",
											"source": 13,
											"value": "837"
										},
										{
											"begin": 30622,
											"end": 31068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30532,
											"end": 31075,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30532,
											"end": 31075,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30532,
											"end": 31075,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30532,
											"end": 31075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 31081,
											"end": 31198,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 31081,
											"end": 31198,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31135,
											"end": 31143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 31185,
											"end": 31190,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 31179,
											"end": 31183,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 31175,
											"end": 31191,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 31154,
											"end": 31191,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 31154,
											"end": 31191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31081,
											"end": 31198,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 31081,
											"end": 31198,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 31081,
											"end": 31198,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31081,
											"end": 31198,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31081,
											"end": 31198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 31204,
											"end": 31373,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 31204,
											"end": 31373,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31248,
											"end": 31254,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 31281,
											"end": 31332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "845"
										},
										{
											"begin": 31329,
											"end": 31330,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 31325,
											"end": 31331,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 31317,
											"end": 31322,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 31314,
											"end": 31315,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 31310,
											"end": 31323,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 31281,
											"end": 31332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 31281,
											"end": 31332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 31281,
											"end": 31332,
											"name": "tag",
											"source": 13,
											"value": "845"
										},
										{
											"begin": 31281,
											"end": 31332,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31277,
											"end": 31333,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 31362,
											"end": 31366,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 31356,
											"end": 31360,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 31352,
											"end": 31367,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 31342,
											"end": 31367,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 31342,
											"end": 31367,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31255,
											"end": 31373,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31204,
											"end": 31373,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 31204,
											"end": 31373,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 31204,
											"end": 31373,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31204,
											"end": 31373,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31204,
											"end": 31373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 31378,
											"end": 31673,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 31378,
											"end": 31673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31454,
											"end": 31458,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 31600,
											"end": 31629,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "847"
										},
										{
											"begin": 31625,
											"end": 31628,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 31619,
											"end": 31623,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 31600,
											"end": 31629,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 31600,
											"end": 31629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 31600,
											"end": 31629,
											"name": "tag",
											"source": 13,
											"value": "847"
										},
										{
											"begin": 31600,
											"end": 31629,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31592,
											"end": 31629,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 31592,
											"end": 31629,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31662,
											"end": 31665,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 31659,
											"end": 31660,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 31655,
											"end": 31666,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 31649,
											"end": 31653,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 31646,
											"end": 31667,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 31638,
											"end": 31667,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 31638,
											"end": 31667,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31378,
											"end": 31673,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 31378,
											"end": 31673,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 31378,
											"end": 31673,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31378,
											"end": 31673,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31378,
											"end": 31673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 31678,
											"end": 33073,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 31678,
											"end": 33073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31795,
											"end": 31832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "849"
										},
										{
											"begin": 31828,
											"end": 31831,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 31795,
											"end": 31832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 31795,
											"end": 31832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 31795,
											"end": 31832,
											"name": "tag",
											"source": 13,
											"value": "849"
										},
										{
											"begin": 31795,
											"end": 31832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31897,
											"end": 31915,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31889,
											"end": 31895,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31886,
											"end": 31916,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 31883,
											"end": 31939,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 31883,
											"end": 31939,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "850"
										},
										{
											"begin": 31883,
											"end": 31939,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 31919,
											"end": 31937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "851"
										},
										{
											"begin": 31919,
											"end": 31937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 31919,
											"end": 31937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 31919,
											"end": 31937,
											"name": "tag",
											"source": 13,
											"value": "851"
										},
										{
											"begin": 31919,
											"end": 31937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31883,
											"end": 31939,
											"name": "tag",
											"source": 13,
											"value": "850"
										},
										{
											"begin": 31883,
											"end": 31939,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31963,
											"end": 32001,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "852"
										},
										{
											"begin": 31995,
											"end": 31999,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 31989,
											"end": 32000,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 31963,
											"end": 32001,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 31963,
											"end": 32001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 31963,
											"end": 32001,
											"name": "tag",
											"source": 13,
											"value": "852"
										},
										{
											"begin": 31963,
											"end": 32001,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 32048,
											"end": 32115,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "853"
										},
										{
											"begin": 32108,
											"end": 32114,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 32100,
											"end": 32106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 32094,
											"end": 32098,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 32048,
											"end": 32115,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 32048,
											"end": 32115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 32048,
											"end": 32115,
											"name": "tag",
											"source": 13,
											"value": "853"
										},
										{
											"begin": 32048,
											"end": 32115,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 32142,
											"end": 32143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 32166,
											"end": 32170,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 32153,
											"end": 32170,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 32153,
											"end": 32170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32198,
											"end": 32200,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 32190,
											"end": 32196,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 32187,
											"end": 32201,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 32215,
											"end": 32216,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 32210,
											"end": 32828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 32210,
											"end": 32828,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 32210,
											"end": 32828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "855"
										},
										{
											"begin": 32210,
											"end": 32828,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 32872,
											"end": 32873,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 32889,
											"end": 32895,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 32886,
											"end": 32963,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 32886,
											"end": 32963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "856"
										},
										{
											"begin": 32886,
											"end": 32963,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 32938,
											"end": 32947,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 32933,
											"end": 32936,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 32929,
											"end": 32948,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 32923,
											"end": 32949,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 32914,
											"end": 32949,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 32914,
											"end": 32949,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32886,
											"end": 32963,
											"name": "tag",
											"source": 13,
											"value": "856"
										},
										{
											"begin": 32886,
											"end": 32963,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 32989,
											"end": 33056,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "857"
										},
										{
											"begin": 33049,
											"end": 33055,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 33042,
											"end": 33047,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 32989,
											"end": 33056,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 32989,
											"end": 33056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 32989,
											"end": 33056,
											"name": "tag",
											"source": 13,
											"value": "857"
										},
										{
											"begin": 32989,
											"end": 33056,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 32983,
											"end": 32987,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 32976,
											"end": 33057,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 32845,
											"end": 33067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32180,
											"end": 33067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "854"
										},
										{
											"begin": 32180,
											"end": 33067,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 32210,
											"end": 32828,
											"name": "tag",
											"source": 13,
											"value": "855"
										},
										{
											"begin": 32210,
											"end": 32828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 32262,
											"end": 32266,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 32258,
											"end": 32267,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 32250,
											"end": 32256,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 32246,
											"end": 32268,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 32296,
											"end": 32333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "858"
										},
										{
											"begin": 32328,
											"end": 32332,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 32296,
											"end": 32333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 32296,
											"end": 32333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 32296,
											"end": 32333,
											"name": "tag",
											"source": 13,
											"value": "858"
										},
										{
											"begin": 32296,
											"end": 32333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 32355,
											"end": 32356,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 32369,
											"end": 32577,
											"name": "tag",
											"source": 13,
											"value": "859"
										},
										{
											"begin": 32369,
											"end": 32577,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 32383,
											"end": 32390,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 32380,
											"end": 32381,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 32377,
											"end": 32391,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 32369,
											"end": 32577,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 32369,
											"end": 32577,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "861"
										},
										{
											"begin": 32369,
											"end": 32577,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 32462,
											"end": 32471,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 32457,
											"end": 32460,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 32453,
											"end": 32472,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 32447,
											"end": 32473,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 32439,
											"end": 32445,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 32432,
											"end": 32474,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 32513,
											"end": 32514,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 32505,
											"end": 32511,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 32501,
											"end": 32515,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 32491,
											"end": 32515,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 32491,
											"end": 32515,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32560,
											"end": 32562,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 32549,
											"end": 32558,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 32545,
											"end": 32563,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 32532,
											"end": 32563,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 32532,
											"end": 32563,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32406,
											"end": 32410,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 32403,
											"end": 32404,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 32399,
											"end": 32411,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 32394,
											"end": 32411,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 32394,
											"end": 32411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32369,
											"end": 32577,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "859"
										},
										{
											"begin": 32369,
											"end": 32577,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 32369,
											"end": 32577,
											"name": "tag",
											"source": 13,
											"value": "861"
										},
										{
											"begin": 32369,
											"end": 32577,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 32605,
											"end": 32611,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 32596,
											"end": 32603,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 32593,
											"end": 32612,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 32590,
											"end": 32769,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 32590,
											"end": 32769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "862"
										},
										{
											"begin": 32590,
											"end": 32769,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 32663,
											"end": 32672,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 32658,
											"end": 32661,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 32654,
											"end": 32673,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 32648,
											"end": 32674,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 32706,
											"end": 32754,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "863"
										},
										{
											"begin": 32748,
											"end": 32752,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 32740,
											"end": 32746,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 32736,
											"end": 32753,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 32725,
											"end": 32734,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 32706,
											"end": 32754,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 32706,
											"end": 32754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 32706,
											"end": 32754,
											"name": "tag",
											"source": 13,
											"value": "863"
										},
										{
											"begin": 32706,
											"end": 32754,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 32698,
											"end": 32704,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 32691,
											"end": 32755,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 32613,
											"end": 32769,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32590,
											"end": 32769,
											"name": "tag",
											"source": 13,
											"value": "862"
										},
										{
											"begin": 32590,
											"end": 32769,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 32815,
											"end": 32816,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 32811,
											"end": 32812,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 32803,
											"end": 32809,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 32799,
											"end": 32813,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 32795,
											"end": 32817,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 32789,
											"end": 32793,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 32782,
											"end": 32818,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 32217,
											"end": 32828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32217,
											"end": 32828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32217,
											"end": 32828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32180,
											"end": 33067,
											"name": "tag",
											"source": 13,
											"value": "854"
										},
										{
											"begin": 32180,
											"end": 33067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 32180,
											"end": 33067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31770,
											"end": 33073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31770,
											"end": 33073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31770,
											"end": 33073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31678,
											"end": 33073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31678,
											"end": 33073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31678,
											"end": 33073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 33079,
											"end": 33259,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 33079,
											"end": 33259,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 33127,
											"end": 33204,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33124,
											"end": 33125,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 33117,
											"end": 33205,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 33224,
											"end": 33228,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 33221,
											"end": 33222,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 33214,
											"end": 33229,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 33248,
											"end": 33252,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 33245,
											"end": 33246,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 33238,
											"end": 33253,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 33265,
											"end": 33450,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 33265,
											"end": 33450,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 33305,
											"end": 33306,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 33322,
											"end": 33342,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "866"
										},
										{
											"begin": 33340,
											"end": 33341,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 33322,
											"end": 33342,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 33322,
											"end": 33342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 33322,
											"end": 33342,
											"name": "tag",
											"source": 13,
											"value": "866"
										},
										{
											"begin": 33322,
											"end": 33342,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 33317,
											"end": 33342,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 33317,
											"end": 33342,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 33356,
											"end": 33376,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "867"
										},
										{
											"begin": 33374,
											"end": 33375,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 33356,
											"end": 33376,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 33356,
											"end": 33376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 33356,
											"end": 33376,
											"name": "tag",
											"source": 13,
											"value": "867"
										},
										{
											"begin": 33356,
											"end": 33376,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 33351,
											"end": 33376,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 33351,
											"end": 33376,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 33395,
											"end": 33396,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 33385,
											"end": 33420,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "868"
										},
										{
											"begin": 33385,
											"end": 33420,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 33400,
											"end": 33418,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "869"
										},
										{
											"begin": 33400,
											"end": 33418,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 33400,
											"end": 33418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 33400,
											"end": 33418,
											"name": "tag",
											"source": 13,
											"value": "869"
										},
										{
											"begin": 33400,
											"end": 33418,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 33385,
											"end": 33420,
											"name": "tag",
											"source": 13,
											"value": "868"
										},
										{
											"begin": 33385,
											"end": 33420,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 33442,
											"end": 33443,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 33439,
											"end": 33440,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 33435,
											"end": 33444,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 33430,
											"end": 33444,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 33430,
											"end": 33444,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 33265,
											"end": 33450,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 33265,
											"end": 33450,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 33265,
											"end": 33450,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 33265,
											"end": 33450,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 33265,
											"end": 33450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"Token/123.sol",
								"Token/IUniswapV2Factory.sol",
								"Token/IUniswapV2Pair.sol",
								"Token/IUniswapV2Router01.sol",
								"Token/IUniswapV2Router02.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addToBlacklist(address)": "44337ea1",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"developmentWallet()": "c04a5414",
							"developmentWalletTax()": "11e91b84",
							"initialize()": "8129fc1c",
							"isBlacklisted(address)": "fe575a87",
							"marketingWallet()": "75f0a874",
							"marketingWalletTax()": "8206cf5a",
							"maxTransactionAmount()": "c8c8ebe4",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"removeFromBlacklist(address)": "537df3b6",
							"renounceOwnership()": "715018a6",
							"setDevelopmentWallet(address)": "72ac2486",
							"setDevelopmentWalletTax(uint256)": "85fbae56",
							"setMarketingWallet(address)": "5d098b38",
							"setMarketingWalletTax(uint256)": "88696f2f",
							"setMaxAmount(uint256)": "4fe47f70",
							"setSustainabilityWallet(address)": "be20b15d",
							"setSustainabilityWalletTax(uint256)": "6ddfa4b4",
							"sustainabilityWallet()": "fedcb861",
							"sustainabilityWalletTax()": "e7d88de5",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"uniswapPair()": "c816841b",
							"uniswapV2Router()": "1694505e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_updatedDevelopmentWallet\",\"type\":\"address\"}],\"name\":\"UpdatedDevelopmentWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_updatedMarketingWallet\",\"type\":\"address\"}],\"name\":\"UpdatedMarketingWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_updatedMarketingWalletTax\",\"type\":\"uint256\"}],\"name\":\"UpdatedMarketingWalletTax\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_updatedMaxAmount\",\"type\":\"uint256\"}],\"name\":\"UpdatedMaxAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_updatedSustainabilityWallet\",\"type\":\"address\"}],\"name\":\"UpdatedSustainabilityWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_updatedtDevelopmentWalletTax\",\"type\":\"uint256\"}],\"name\":\"UpdatedtDevelopmentWalletTax\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_updatedtSustainabilityWalletTax\",\"type\":\"uint256\"}],\"name\":\"UpdatedtSustainabilityWalletTax\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addToBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"developmentWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"developmentWalletTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingWalletTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTransactionAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeFromBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setDevelopmentWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_taxPercentage\",\"type\":\"uint256\"}],\"name\":\"setDevelopmentWalletTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setMarketingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_taxPercentage\",\"type\":\"uint256\"}],\"name\":\"setMarketingWalletTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMaxAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setSustainabilityWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_taxPercentage\",\"type\":\"uint256\"}],\"name\":\"setSustainabilityWalletTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sustainabilityWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sustainabilityWalletTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addToBlacklist(address)\":{\"details\":\"Adds an account to the blacklist. This function allows the owner to blacklist an address, preventing it from  participating in transactions involving this token.\",\"params\":{\"account\":\"The address to be added to the blacklist. Must not be the owner's address.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"isBlacklisted(address)\":{\"details\":\"Checks if an address is blacklisted. This function allows anyone to check if a particular address is currently blacklisted, meaning it is restricted from participating in transactions involving this token.\",\"params\":{\"account\":\"The address to check the blacklist status of.\"},\"returns\":{\"_0\":\"bool True if the account is blacklisted, false otherwise.\"}},\"mint(address,uint256)\":{\"details\":\"Allows the owner to mint new tokens to a specified address. This function can be used to increase the total supply of tokens.\",\"params\":{\"amount\":\"The amount of tokens to mint.\",\"to\":\"The address to which the new tokens will be minted.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeFromBlacklist(address)\":{\"details\":\"Removes an account from the blacklist. This function allows the owner to remove an address from the blacklist, allowing it to participate in transactions involving this token again.\",\"params\":{\"account\":\"The address to be removed from the blacklist. Must be currently blacklisted.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDevelopmentWallet(address)\":{\"details\":\"Sets the Development wallet address. This function allows the owner to update the address where Development-related funds or taxes will be sent.\",\"params\":{\"_wallet\":\"The new Development wallet address. Must not be the zero address.\"}},\"setDevelopmentWalletTax(uint256)\":{\"details\":\"Sets the development wallet tax percentage. This function allows the owner to update the tax percentage that will be applied to development transactions.\",\"params\":{\"_taxPercentage\":\"The new tax percentage to be set. It is expected to be in basis points (i.e., 100 basis points = 1%). The maximum allowed value is 10000 basis points (100%).\"}},\"setMarketingWallet(address)\":{\"details\":\"Sets the marketing wallet address. This function allows the owner to update the address where marketing-related  funds or taxes will be sent.\",\"params\":{\"_wallet\":\"The new marketing wallet address. Must not be the zero address.\"}},\"setMarketingWalletTax(uint256)\":{\"details\":\"Sets the marketing wallet tax percentage. This function allows the owner to update the tax percentage that will be applied to marketing transactions.\",\"params\":{\"_taxPercentage\":\"The new tax percentage to be set. It is expected to be in basis points (i.e., 100 basis points = 1%). The maximum allowed value is 10000 basis points (100%).\"}},\"setMaxAmount(uint256)\":{\"details\":\"Sets the maximum transaction amount. This function allows the owner to update the maximum amount of tokens that can be transferred in a single transaction.\",\"params\":{\"_amount\":\"The new maximum transaction amount. Must be greater than 0.\"}},\"setSustainabilityWallet(address)\":{\"details\":\"Sets the sustainability wallet address. This function allows the owner to update the address where sustainability-related funds or taxes will be sent.\",\"params\":{\"_wallet\":\"The new sustainability wallet address. Must not be the zero address.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token/123.sol\":\"Trabajo24Token\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9fd4de76241f3c5b9b6394d99020848235c289e393f3cee1a7fbd53aff65b7d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ac5a3376a8d51eba34ec8d455125590c9022c8a96d73e3bd92e29db76ab4e5e\",\"dweb:/ipfs/QmcmcbM9UAXHajF2v1GE7hu1r5Q8xZAv4tHa7aALYKBtd9\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xe74dd150d031e8ecf9755893a2aae02dec954158140424f11c28ff689a48492f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://554e0934aecff6725e10d4aeb2e70ff214384b68782b1ba9f9322a0d16105a2f\",\"dweb:/ipfs/QmVvmHc7xPftEkWvJRNAqv7mXihKLEAVXpiebG7RT5rhMW\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"Token/123.sol\":{\"keccak256\":\"0x90797d6fdc1f93a1729c45c9720b4aa9c6a52adc5a57d41df09c308fe5b55234\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a749b35048d57cada8f994dbb2fa96204765f4f058b8f3da0530765cf4aec08\",\"dweb:/ipfs/Qmf36yrZmPwM3yVtPAvvgfZ79fC49QASJ1D13HdKduSVe2\"]},\"Token/IUniswapV2Factory.sol\":{\"keccak256\":\"0x95808cc9d881373fb832667dd6f88e78bc981d6c674614ed9cf84d2070605402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9072f0759c28767f4db38dc1435127ef0f806567d951a5dbdb1fff01881521c8\",\"dweb:/ipfs/QmdAYyUcKL7RzoiCwqdBW9HdYFskXLQv8avVF3THqUH5oL\"]},\"Token/IUniswapV2Pair.sol\":{\"keccak256\":\"0xf95c4eb1e4b368fc5fe3220934c9d4bfaea72c4467b720919765aae34ff45a81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3bd882fa9109b9dfe5e86a1cab847c9e52a5505cc2cb2754d17bb0d65c71db2\",\"dweb:/ipfs/QmQS5mYhioNGZuPCHMmUrLigrfQtKDWms8ecPP6kRPou48\"]},\"Token/IUniswapV2Router01.sol\":{\"keccak256\":\"0x76ead32a90ce10a820dcfd8988f908a30dc136e5de3f50d72fb4dc7885ccd704\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c56d9c19d99ec1ef1e911db18b7d3af90b1e13953b8c5ccb416dca560c452\",\"dweb:/ipfs/QmaFrMqBWGwbAjbYotLQ7uQAdAboGp236e5XWtmccB2Arx\"]},\"Token/IUniswapV2Router02.sol\":{\"keccak256\":\"0xbe37279470c6cd4fe39b9569616710ee697b0e988493b9024692d6a5ea7da0c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://758f4ffcaa3111e7a134abd82d72456e550df94a80412bfd1e7b8ee79460b6e3\",\"dweb:/ipfs/QmcD6BtpeaMEMGvep6RL6qk26CyotMPr8L4BihBtD4SkWt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1441,
								"contract": "Token/123.sol:Trabajo24Token",
								"label": "marketingWallet",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1443,
								"contract": "Token/123.sol:Trabajo24Token",
								"label": "developmentWallet",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1445,
								"contract": "Token/123.sol:Trabajo24Token",
								"label": "sustainabilityWallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1447,
								"contract": "Token/123.sol:Trabajo24Token",
								"label": "marketingWalletTax",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1449,
								"contract": "Token/123.sol:Trabajo24Token",
								"label": "developmentWalletTax",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1451,
								"contract": "Token/123.sol:Trabajo24Token",
								"label": "sustainabilityWalletTax",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1453,
								"contract": "Token/123.sol:Trabajo24Token",
								"label": "maxTransactionAmount",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1455,
								"contract": "Token/123.sol:Trabajo24Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1459,
								"contract": "Token/123.sol:Trabajo24Token",
								"label": "_blacklisted",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1465,
								"contract": "Token/123.sol:Trabajo24Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1468,
								"contract": "Token/123.sol:Trabajo24Token",
								"label": "uniswapV2Router",
								"offset": 0,
								"slot": "10",
								"type": "t_contract(IUniswapV2Router02)2800"
							},
							{
								"astId": 1470,
								"contract": "Token/123.sol:Trabajo24Token",
								"label": "uniswapPair",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IUniswapV2Router02)2800": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Token/IUniswapV2Factory.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token/IUniswapV2Factory.sol\":{\"keccak256\":\"0x95808cc9d881373fb832667dd6f88e78bc981d6c674614ed9cf84d2070605402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9072f0759c28767f4db38dc1435127ef0f806567d951a5dbdb1fff01881521c8\",\"dweb:/ipfs/QmdAYyUcKL7RzoiCwqdBW9HdYFskXLQv8avVF3THqUH5oL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Token/IUniswapV2Pair.sol": {
				"IUniswapV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token/IUniswapV2Pair.sol\":{\"keccak256\":\"0xf95c4eb1e4b368fc5fe3220934c9d4bfaea72c4467b720919765aae34ff45a81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3bd882fa9109b9dfe5e86a1cab847c9e52a5505cc2cb2754d17bb0d65c71db2\",\"dweb:/ipfs/QmQS5mYhioNGZuPCHMmUrLigrfQtKDWms8ecPP6kRPou48\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Token/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token/IUniswapV2Router01.sol\":{\"keccak256\":\"0x76ead32a90ce10a820dcfd8988f908a30dc136e5de3f50d72fb4dc7885ccd704\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c56d9c19d99ec1ef1e911db18b7d3af90b1e13953b8c5ccb416dca560c452\",\"dweb:/ipfs/QmaFrMqBWGwbAjbYotLQ7uQAdAboGp236e5XWtmccB2Arx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Token/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token/IUniswapV2Router01.sol\":{\"keccak256\":\"0x76ead32a90ce10a820dcfd8988f908a30dc136e5de3f50d72fb4dc7885ccd704\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c56d9c19d99ec1ef1e911db18b7d3af90b1e13953b8c5ccb416dca560c452\",\"dweb:/ipfs/QmaFrMqBWGwbAjbYotLQ7uQAdAboGp236e5XWtmccB2Arx\"]},\"Token/IUniswapV2Router02.sol\":{\"keccak256\":\"0xbe37279470c6cd4fe39b9569616710ee697b0e988493b9024692d6a5ea7da0c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://758f4ffcaa3111e7a134abd82d72456e550df94a80412bfd1e7b8ee79460b6e3\",\"dweb:/ipfs/QmcD6BtpeaMEMGvep6RL6qk26CyotMPr8L4BihBtD4SkWt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1173
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 1174,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1173,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1173,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								1173,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1155,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1173
						],
						"ERC20Upgradeable": [
							1065
						],
						"IERC20": [
							1388
						],
						"IERC20Errors": [
							1215
						],
						"IERC20Metadata": [
							1414
						],
						"Initializable": [
							448
						]
					},
					"id": 1066,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1066,
							"sourceUnit": 1389,
							"src": "131:70:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1388,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1066,
							"sourceUnit": 1415,
							"src": "202:97:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 453,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1414,
										"src": "210:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 456,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1066,
							"sourceUnit": 1174,
							"src": "300:70:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 455,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1173,
										"src": "308:18:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 458,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1066,
							"sourceUnit": 1311,
							"src": "371:83:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 457,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1215,
										"src": "379:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 460,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1066,
							"sourceUnit": 449,
							"src": "455:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 459,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "463:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 462,
										"name": "Initializable",
										"nameLocations": [
											"1614:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1614:13:2"
									},
									"id": 463,
									"nodeType": "InheritanceSpecifier",
									"src": "1614:13:2"
								},
								{
									"baseName": {
										"id": 464,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1629:18:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1173,
										"src": "1629:18:2"
									},
									"id": 465,
									"nodeType": "InheritanceSpecifier",
									"src": "1629:18:2"
								},
								{
									"baseName": {
										"id": 466,
										"name": "IERC20",
										"nameLocations": [
											"1649:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1388,
										"src": "1649:6:2"
									},
									"id": 467,
									"nodeType": "InheritanceSpecifier",
									"src": "1649:6:2"
								},
								{
									"baseName": {
										"id": 468,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1657:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1414,
										"src": "1657:14:2"
									},
									"id": 469,
									"nodeType": "InheritanceSpecifier",
									"src": "1657:14:2"
								},
								{
									"baseName": {
										"id": 470,
										"name": "IERC20Errors",
										"nameLocations": [
											"1673:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1215,
										"src": "1673:12:2"
									},
									"id": 471,
									"nodeType": "InheritanceSpecifier",
									"src": "1673:12:2"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 461,
								"nodeType": "StructuredDocumentation",
								"src": "523:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1065,
							"linearizedBaseContracts": [
								1065,
								1215,
								1414,
								1388,
								1173,
								448
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1594:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "1692:63:2",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 489,
									"members": [
										{
											"constant": false,
											"id": 476,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1826:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 489,
											"src": "1790:45:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 475,
												"keyName": "account",
												"keyNameLocation": "1806:7:2",
												"keyType": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1790:35:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1817:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 482,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1910:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 489,
											"src": "1846:75:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 481,
												"keyName": "account",
												"keyNameLocation": "1862:7:2",
												"keyType": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1846:63:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 480,
													"keyName": "spender",
													"keyNameLocation": "1889:7:2",
													"keyType": {
														"id": 478,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1881:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1873:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 479,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1900:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 484,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1940:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 489,
											"src": "1932:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 483,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1932:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 486,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1970:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 489,
											"src": "1963:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 485,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1963:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 488,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1992:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 489,
											"src": "1985:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 487,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1985:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1767:12:2",
									"nodeType": "StructDefinition",
									"scope": 1065,
									"src": "1760:246:2",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 492,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "2146:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 1065,
									"src": "2121:114:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 490,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2121:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 491,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2169:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "2316:79:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2335:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2349:30:2",
															"value": {
																"name": "ERC20StorageLocation",
																"nodeType": "YulIdentifier",
																"src": "2359:20:2"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2349:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 496,
														"isOffset": false,
														"isSlot": true,
														"src": "2349:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 492,
														"isOffset": false,
														"isSlot": false,
														"src": "2359:20:2",
														"valueSize": 1
													}
												],
												"id": 498,
												"nodeType": "InlineAssembly",
												"src": "2326:63:2"
											}
										]
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "2251:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2267:2:2"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2313:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2292:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 495,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 494,
														"name": "ERC20Storage",
														"nameLocations": [
															"2292:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 489,
														"src": "2292:12:2"
													},
													"referencedDeclaration": 489,
													"src": "2292:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2291:24:2"
									},
									"scope": 1065,
									"src": "2242:153:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "2669:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 511,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "2702:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 512,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "2709:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 510,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "2679:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2679:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "2679:38:2"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "2401:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 508,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 507,
												"name": "onlyInitializing",
												"nameLocations": [
													"2652:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2652:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2652:16:2"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2586:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2613:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "2599:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 502,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2599:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2634:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "2620:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 504,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2620:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2598:44:2"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2669:0:2"
									},
									"scope": 1065,
									"src": "2577:147:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "2832:114:2",
										"statements": [
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2863:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 543,
														"src": "2842:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 526,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 525,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2842:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 489,
																"src": "2842:12:2"
															},
															"referencedDeclaration": 489,
															"src": "2842:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 530,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 528,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "2867:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2867:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2842:43:2"
											},
											{
												"expression": {
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 531,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "2895:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 533,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2897:5:2",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 486,
														"src": "2895:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 534,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "2905:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2895:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "2895:15:2"
											},
											{
												"expression": {
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 537,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "2920:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 539,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2922:7:2",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 488,
														"src": "2920:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 540,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "2932:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2920:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "2920:19:2"
											}
										]
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 523,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 522,
												"name": "onlyInitializing",
												"nameLocations": [
													"2815:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2815:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2815:16:2"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2739:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2776:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2762:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 517,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2762:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2797:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "2783:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 519,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2783:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2761:44:2"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2832:0:2"
									},
									"scope": 1065,
									"src": "2730:216:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1401
									],
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "3071:84:2",
										"statements": [
											{
												"assignments": [
													552
												],
												"declarations": [
													{
														"constant": false,
														"id": 552,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3102:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 559,
														"src": "3081:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 551,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 550,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3081:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 489,
																"src": "3081:12:2"
															},
															"referencedDeclaration": 489,
															"src": "3081:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 555,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 553,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "3106:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3106:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3081:43:2"
											},
											{
												"expression": {
													"expression": {
														"id": 556,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "3141:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3143:5:2",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 486,
													"src": "3141:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 549,
												"id": 558,
												"nodeType": "Return",
												"src": "3134:14:2"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "2952:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3020:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3024:2:2"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "3056:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 547,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3056:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3055:15:2"
									},
									"scope": 1065,
									"src": "3011:144:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1407
									],
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "3330:86:2",
										"statements": [
											{
												"assignments": [
													568
												],
												"declarations": [
													{
														"constant": false,
														"id": 568,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3361:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 575,
														"src": "3340:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 567,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 566,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3340:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 489,
																"src": "3340:12:2"
															},
															"referencedDeclaration": 489,
															"src": "3340:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 571,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 569,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "3365:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3365:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3340:43:2"
											},
											{
												"expression": {
													"expression": {
														"id": 572,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "3400:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3402:7:2",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 488,
													"src": "3400:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 565,
												"id": 574,
												"nodeType": "Return",
												"src": "3393:16:2"
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "3161:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3277:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3283:2:2"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "3315:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 563,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3315:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3314:15:2"
									},
									"scope": 1065,
									"src": "3268:148:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1413
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "4105:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4122:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "4115:9:2"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "3422:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4058:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4066:2:2"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "4098:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 579,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4098:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4097:7:2"
									},
									"scope": 1065,
									"src": "4049:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1337
									],
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "4252:91:2",
										"statements": [
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4283:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 600,
														"src": "4262:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 592,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 591,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4262:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 489,
																"src": "4262:12:2"
															},
															"referencedDeclaration": 489,
															"src": "4262:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 596,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 594,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "4287:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4287:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4262:43:2"
											},
											{
												"expression": {
													"expression": {
														"id": 597,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "4322:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4324:12:2",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 484,
													"src": "4322:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 590,
												"id": 599,
												"nodeType": "Return",
												"src": "4315:21:2"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "4137:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4200:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4211:2:2"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4243:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4243:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4242:9:2"
									},
									"scope": 1065,
									"src": "4191:152:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1345
									],
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "4475:97:2",
										"statements": [
											{
												"assignments": [
													611
												],
												"declarations": [
													{
														"constant": false,
														"id": 611,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4506:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 620,
														"src": "4485:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 610,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 609,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4485:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 489,
																"src": "4485:12:2"
															},
															"referencedDeclaration": 489,
															"src": "4485:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 614,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 612,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "4510:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4510:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4485:43:2"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 615,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "4545:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 616,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4547:9:2",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 476,
														"src": "4545:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 618,
													"indexExpression": {
														"id": 617,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "4557:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4545:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 608,
												"id": 619,
												"nodeType": "Return",
												"src": "4538:27:2"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "4349:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4410:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4428:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "4420:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4420:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4419:17:2"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "4466:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4465:9:2"
									},
									"scope": 1065,
									"src": "4401:171:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1355
									],
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "4842:103:2",
										"statements": [
											{
												"assignments": [
													632
												],
												"declarations": [
													{
														"constant": false,
														"id": 632,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4860:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 644,
														"src": "4852:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 631,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4852:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 635,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 633,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "4868:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4868:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4852:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 637,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "4900:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "4907:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "4911:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 636,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "4890:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4890:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "4890:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4934:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 630,
												"id": 643,
												"nodeType": "Return",
												"src": "4927:11:2"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "4578:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4776:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4793:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4785:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4805:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4797:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4797:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4784:27:2"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "4836:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4836:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4835:6:2"
									},
									"scope": 1065,
									"src": "4767:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1365
									],
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "5092:106:2",
										"statements": [
											{
												"assignments": [
													657
												],
												"declarations": [
													{
														"constant": false,
														"id": 657,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "5123:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 668,
														"src": "5102:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 656,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 655,
																"name": "ERC20Storage",
																"nameLocations": [
																	"5102:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 489,
																"src": "5102:12:2"
															},
															"referencedDeclaration": 489,
															"src": "5102:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 660,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 658,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "5127:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5127:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5102:43:2"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 661,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 657,
																"src": "5162:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5164:11:2",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 482,
															"src": "5162:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 664,
														"indexExpression": {
															"id": 663,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "5176:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5162:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 666,
													"indexExpression": {
														"id": 665,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5183:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5162:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 654,
												"id": 667,
												"nodeType": "Return",
												"src": "5155:36:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "4951:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5012:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5030:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "5022:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5045:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "5037:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5021:32:2"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "5083:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5083:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5082:9:2"
									},
									"scope": 1065,
									"src": "5003:195:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "5584:107:2",
										"statements": [
											{
												"assignments": [
													680
												],
												"declarations": [
													{
														"constant": false,
														"id": 680,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5602:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 692,
														"src": "5594:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 679,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5594:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 683,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 681,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "5610:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5610:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5594:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 685,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "5641:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 686,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "5648:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 687,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "5657:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 684,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1016
														],
														"referencedDeclaration": 948,
														"src": "5632:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5632:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "5632:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5680:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 678,
												"id": 691,
												"nodeType": "Return",
												"src": "5673:11:2"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "5204:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5514:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5530:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "5522:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5522:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5547:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "5539:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5539:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5521:32:2"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "5578:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 676,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5578:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5577:6:2"
									},
									"scope": 1065,
									"src": "5505:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1387
									],
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "6344:151:2",
										"statements": [
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6362:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "6354:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 705,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6354:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 709,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 707,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "6372:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6372:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6354:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 711,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "6410:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "6416:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 713,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "6425:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 710,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "6394:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6394:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "6394:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "6451:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "6457:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 719,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "6461:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 716,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "6441:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6441:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "6441:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6484:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 704,
												"id": 723,
												"nodeType": "Return",
												"src": "6477:11:2"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "5697:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6260:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6281:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "6273:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6273:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6295:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "6287:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6287:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6307:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "6299:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6299:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:41:2"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "6338:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 702,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6338:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6337:6:2"
									},
									"scope": 1065,
									"src": "6251:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "6939:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 735,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "6953:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6969:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6961:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 736,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6961:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6961:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6953:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 749,
												"nodeType": "IfStatement",
												"src": "6949:86:2",
												"trueBody": {
													"id": 748,
													"nodeType": "Block",
													"src": "6973:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 744,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7021:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7013:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 742,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7013:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7013:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 741,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "6994:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6994:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 747,
															"nodeType": "RevertStatement",
															"src": "6987:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 750,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "7048:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7062:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7054:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 751,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7054:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7054:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7048:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 764,
												"nodeType": "IfStatement",
												"src": "7044:86:2",
												"trueBody": {
													"id": 763,
													"nodeType": "Block",
													"src": "7066:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7116:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7108:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 757,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7108:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7108:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 756,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "7087:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7087:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 762,
															"nodeType": "RevertStatement",
															"src": "7080:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 766,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "7147:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 767,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "7153:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 768,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "7157:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 765,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "7139:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7139:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "7139:24:2"
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "6501:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6877:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6895:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "6887:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6887:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6909:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "6901:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6901:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6921:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "6913:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6913:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6886:41:2"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6939:0:2"
									},
									"scope": 1065,
									"src": "6868:302:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "7560:1095:2",
										"statements": [
											{
												"assignments": [
													784
												],
												"declarations": [
													{
														"constant": false,
														"id": 784,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7591:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 863,
														"src": "7570:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 783,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 782,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7570:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 489,
																"src": "7570:12:2"
															},
															"referencedDeclaration": 489,
															"src": "7570:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 787,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 785,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "7595:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7595:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7570:43:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 788,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "7627:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7643:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7635:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 789,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7635:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7635:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7627:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 830,
													"nodeType": "Block",
													"src": "7803:366:2",
													"statements": [
														{
															"assignments": [
																802
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 802,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7825:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 830,
																	"src": "7817:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 801,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7817:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 807,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 803,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "7839:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 804,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7841:9:2",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 476,
																	"src": "7839:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 806,
																"indexExpression": {
																	"id": 805,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 775,
																	"src": "7851:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7839:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7817:39:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 808,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "7874:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 809,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "7888:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7874:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 818,
															"nodeType": "IfStatement",
															"src": "7870:115:2",
															"trueBody": {
																"id": 817,
																"nodeType": "Block",
																"src": "7895:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 812,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 775,
																					"src": "7945:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 813,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 802,
																					"src": "7951:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 814,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 779,
																					"src": "7964:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 811,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1185,
																				"src": "7920:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7920:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 816,
																		"nodeType": "RevertStatement",
																		"src": "7913:57:2"
																	}
																]
															}
														},
														{
															"id": 829,
															"nodeType": "UncheckedBlock",
															"src": "7998:161:2",
															"statements": [
																{
																	"expression": {
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 819,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 784,
																					"src": "8105:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 822,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8107:9:2",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 476,
																				"src": "8105:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 823,
																			"indexExpression": {
																				"id": 821,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 775,
																				"src": "8117:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8105:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 824,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 802,
																				"src": "8125:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 825,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 779,
																				"src": "8139:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8125:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8105:39:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 828,
																	"nodeType": "ExpressionStatement",
																	"src": "8105:39:2"
																}
															]
														}
													]
												},
												"id": 831,
												"nodeType": "IfStatement",
												"src": "7623:546:2",
												"trueBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "7647:150:2",
													"statements": [
														{
															"expression": {
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 794,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "7763:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 796,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7765:12:2",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 484,
																	"src": "7763:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 797,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "7781:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7763:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 799,
															"nodeType": "ExpressionStatement",
															"src": "7763:23:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "8183:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8197:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8189:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 833,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8189:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8189:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8183:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 855,
													"nodeType": "Block",
													"src": "8400:208:2",
													"statements": [
														{
															"id": 854,
															"nodeType": "UncheckedBlock",
															"src": "8414:184:2",
															"statements": [
																{
																	"expression": {
																		"id": 852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 846,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 784,
																					"src": "8559:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 849,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8561:9:2",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 476,
																				"src": "8559:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 850,
																			"indexExpression": {
																				"id": 848,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 777,
																				"src": "8571:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8559:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 851,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 779,
																			"src": "8578:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8559:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 853,
																	"nodeType": "ExpressionStatement",
																	"src": "8559:24:2"
																}
															]
														}
													]
												},
												"id": 856,
												"nodeType": "IfStatement",
												"src": "8179:429:2",
												"trueBody": {
													"id": 845,
													"nodeType": "Block",
													"src": "8201:193:2",
													"statements": [
														{
															"id": 844,
															"nodeType": "UncheckedBlock",
															"src": "8215:169:2",
															"statements": [
																{
																	"expression": {
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 838,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 784,
																				"src": "8346:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 840,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "8348:12:2",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 484,
																			"src": "8346:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 841,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 779,
																			"src": "8364:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8346:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 843,
																	"nodeType": "ExpressionStatement",
																	"src": "8346:23:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 858,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "8632:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "8638:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 860,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "8642:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 857,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "8623:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8623:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 862,
												"nodeType": "EmitStatement",
												"src": "8618:30:2"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "7176:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7494:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7510:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "7502:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7502:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7524:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "7516:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7516:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7536:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "7528:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:41:2"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7560:0:2"
									},
									"scope": 1065,
									"src": "7485:1170:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "9054:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 872,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "9068:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9087:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9079:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 873,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9079:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9079:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9068:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 886,
												"nodeType": "IfStatement",
												"src": "9064:91:2",
												"trueBody": {
													"id": 885,
													"nodeType": "Block",
													"src": "9091:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9141:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9133:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 879,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9133:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9133:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 878,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "9112:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9112:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 884,
															"nodeType": "RevertStatement",
															"src": "9105:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9180:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9172:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 888,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9172:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9172:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 892,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "9184:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 893,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "9193:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 887,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "9164:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9164:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "9164:35:2"
											}
										]
									},
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "8661:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9007:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9021:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "9013:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9013:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9038:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "9030:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9030:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9012:32:2"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9054:0:2"
									},
									"scope": 1065,
									"src": "8998:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "9580:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 905,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "9594:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9613:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9605:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 906,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9605:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9605:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9594:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 919,
												"nodeType": "IfStatement",
												"src": "9590:89:2",
												"trueBody": {
													"id": 918,
													"nodeType": "Block",
													"src": "9617:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 914,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9665:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9657:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 912,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9657:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9657:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 911,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "9638:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9638:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 917,
															"nodeType": "RevertStatement",
															"src": "9631:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 921,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "9696:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9713:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9705:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 922,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9705:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9705:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 926,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "9717:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 920,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "9688:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9688:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "9688:35:2"
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "9212:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9533:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9547:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "9539:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9539:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9564:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "9556:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9556:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9538:32:2"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9580:0:2"
									},
									"scope": 1065,
									"src": "9524:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "10340:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "10359:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "10366:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 943,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "10375:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10382:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 940,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1016
														],
														"referencedDeclaration": 1016,
														"src": "10350:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10350:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "10350:37:2"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "9736:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10275:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10292:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "10284:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10284:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10307:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "10299:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10299:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10324:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "10316:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10316:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10283:47:2"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10340:0:2"
									},
									"scope": 1065,
									"src": "10266:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "11324:389:2",
										"statements": [
											{
												"assignments": [
													962
												],
												"declarations": [
													{
														"constant": false,
														"id": 962,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11355:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 1015,
														"src": "11334:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 961,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 960,
																"name": "ERC20Storage",
																"nameLocations": [
																	"11334:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 489,
																"src": "11334:12:2"
															},
															"referencedDeclaration": 489,
															"src": "11334:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 965,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 963,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "11359:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$489_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11359:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11334:43:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 966,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "11391:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11408:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11400:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 967,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11400:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 970,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11400:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11391:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 980,
												"nodeType": "IfStatement",
												"src": "11387:89:2",
												"trueBody": {
													"id": 979,
													"nodeType": "Block",
													"src": "11412:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 975,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11462:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11454:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 973,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11454:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11454:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 972,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1209,
																	"src": "11433:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11433:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 978,
															"nodeType": "RevertStatement",
															"src": "11426:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 981,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "11489:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11508:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11500:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 982,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11500:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11500:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11489:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 995,
												"nodeType": "IfStatement",
												"src": "11485:90:2",
												"trueBody": {
													"id": 994,
													"nodeType": "Block",
													"src": "11512:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 990,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11561:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11553:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 988,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11553:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11553:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 987,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "11533:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11533:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 993,
															"nodeType": "RevertStatement",
															"src": "11526:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 996,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "11584:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$489_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11586:11:2",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 482,
																"src": "11584:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1001,
															"indexExpression": {
																"id": 998,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "11598:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11584:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1002,
														"indexExpression": {
															"id": 999,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "11605:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11584:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1003,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "11616:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11584:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "11584:37:2"
											},
											{
												"condition": {
													"id": 1006,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 957,
													"src": "11635:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1014,
												"nodeType": "IfStatement",
												"src": "11631:76:2",
												"trueBody": {
													"id": 1013,
													"nodeType": "Block",
													"src": "11646:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1008,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "11674:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1009,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "11681:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1010,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "11690:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1007,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "11665:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11665:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1012,
															"nodeType": "EmitStatement",
															"src": "11660:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "10400:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11235:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11252:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "11244:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11244:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11267:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "11259:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11259:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11284:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "11276:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11276:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11296:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "11291:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 956,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11291:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11243:63:2"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11324:0:2"
									},
									"scope": 1065,
									"src": "11226:487:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "12084:388:2",
										"statements": [
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "12102:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 1063,
														"src": "12094:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1026,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12094:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1032,
												"initialValue": {
													"arguments": [
														{
															"id": 1029,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "12131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1030,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "12138:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1028,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "12121:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12121:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12094:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1033,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "12160:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12185:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1035,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12185:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1034,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12180:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12180:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12194:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12180:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12160:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1062,
												"nodeType": "IfStatement",
												"src": "12156:310:2",
												"trueBody": {
													"id": 1061,
													"nodeType": "Block",
													"src": "12199:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1040,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "12217:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1041,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "12236:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12217:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1050,
															"nodeType": "IfStatement",
															"src": "12213:130:2",
															"trueBody": {
																"id": 1049,
																"nodeType": "Block",
																"src": "12243:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1044,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1021,
																					"src": "12295:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1045,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1027,
																					"src": "12304:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1046,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1023,
																					"src": "12322:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1043,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1204,
																				"src": "12268:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12268:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1048,
																		"nodeType": "RevertStatement",
																		"src": "12261:67:2"
																	}
																]
															}
														},
														{
															"id": 1060,
															"nodeType": "UncheckedBlock",
															"src": "12356:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1052,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1019,
																				"src": "12393:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1053,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1021,
																				"src": "12400:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1054,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1027,
																					"src": "12409:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1055,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1023,
																					"src": "12428:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12409:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1057,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12435:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1051,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				948,
																				1016
																			],
																			"referencedDeclaration": 1016,
																			"src": "12384:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12384:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1059,
																	"nodeType": "ExpressionStatement",
																	"src": "12384:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "11719:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "12004:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12028:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "12020:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12043:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "12035:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12035:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12060:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "12052:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12052:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12019:47:2"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:2"
									},
									"scope": 1065,
									"src": "11995:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1066,
							"src": "1576:10898:2",
							"usedErrors": [
								211,
								214,
								1185,
								1190,
								1195,
								1204,
								1209,
								1214
							],
							"usedEvents": [
								219,
								1322,
								1331
							]
						}
					],
					"src": "105:12370:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1173
						],
						"ERC20BurnableUpgradeable": [
							1127
						],
						"ERC20Upgradeable": [
							1065
						],
						"Initializable": [
							448
						]
					},
					"id": 1128,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1067,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "../ERC20Upgradeable.sol",
							"id": 1069,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1128,
							"sourceUnit": 1066,
							"src": "150:57:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1068,
										"name": "ERC20Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1065,
										"src": "158:16:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../../utils/ContextUpgradeable.sol",
							"id": 1071,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1128,
							"sourceUnit": 1174,
							"src": "208:73:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1070,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1173,
										"src": "216:18:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../../proxy/utils/Initializable.sol",
							"id": 1073,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1128,
							"sourceUnit": 449,
							"src": "282:69:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1072,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "290:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1075,
										"name": "Initializable",
										"nameLocations": [
											"608:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "608:13:3"
									},
									"id": 1076,
									"nodeType": "InheritanceSpecifier",
									"src": "608:13:3"
								},
								{
									"baseName": {
										"id": 1077,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"623:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1173,
										"src": "623:18:3"
									},
									"id": 1078,
									"nodeType": "InheritanceSpecifier",
									"src": "623:18:3"
								},
								{
									"baseName": {
										"id": 1079,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"643:16:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1065,
										"src": "643:16:3"
									},
									"id": 1080,
									"nodeType": "InheritanceSpecifier",
									"src": "643:16:3"
								}
							],
							"canonicalName": "ERC20BurnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1074,
								"nodeType": "StructuredDocumentation",
								"src": "353:208:3",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 1127,
							"linearizedBaseContracts": [
								1127,
								1065,
								1215,
								1414,
								1388,
								1173,
								448
							],
							"name": "ERC20BurnableUpgradeable",
							"nameLocation": "580:24:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1085,
										"nodeType": "Block",
										"src": "724:7:3",
										"statements": []
									},
									"id": 1086,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1083,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1082,
												"name": "onlyInitializing",
												"nameLocations": [
													"707:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "707:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "707:16:3"
										}
									],
									"name": "__ERC20Burnable_init",
									"nameLocation": "675:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:2:3"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "724:0:3"
									},
									"scope": 1127,
									"src": "666:65:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "805:7:3",
										"statements": []
									},
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1089,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1088,
												"name": "onlyInitializing",
												"nameLocations": [
													"788:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "788:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "788:16:3"
										}
									],
									"name": "__ERC20Burnable_init_unchained",
									"nameLocation": "746:30:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:2:3"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:0:3"
									},
									"scope": 1127,
									"src": "737:75:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "975:43:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1099,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "991:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "991:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1101,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "1005:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1098,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "985:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "985:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "985:26:3"
											}
										]
									},
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "817:109:3",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "940:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "953:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "945:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "945:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "944:15:3"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "975:0:3"
									},
									"scope": 1127,
									"src": "931:87:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "1399:93:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1114,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "1425:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1115,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "1434:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1434:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1117,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "1448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1113,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "1409:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1409:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "1409:45:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "1470:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "1479:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1120,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "1464:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1464:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "1464:21:3"
											}
										]
									},
									"documentation": {
										"id": 1106,
										"nodeType": "StructuredDocumentation",
										"src": "1024:305:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1343:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1360:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "1352:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1377:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "1369:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1351:32:3"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1399:0:3"
									},
									"scope": 1127,
									"src": "1334:158:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1128,
							"src": "562:932:3",
							"usedErrors": [
								211,
								214,
								1185,
								1190,
								1195,
								1204,
								1209,
								1214
							],
							"usedEvents": [
								219,
								1322,
								1331
							]
						}
					],
					"src": "124:1371:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1173
						],
						"Initializable": [
							448
						]
					},
					"id": 1174,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1129,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1131,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1174,
							"sourceUnit": 449,
							"src": "126:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1130,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1133,
										"name": "Initializable",
										"nameLocations": [
											"728:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:4"
									},
									"id": 1134,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:4"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1132,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1173,
							"linearizedBaseContracts": [
								1173,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "800:7:4",
										"statements": []
									},
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1137,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1136,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:4"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:4"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:4"
									},
									"scope": 1173,
									"src": "748:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "875:7:4",
										"statements": []
									},
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1143,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1142,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:4"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:4"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:4"
									},
									"scope": 1173,
									"src": "813:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "949:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1151,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1150,
												"id": 1153,
												"nodeType": "Return",
												"src": "959:17:4"
											}
										]
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:4"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "940:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:4"
									},
									"scope": 1173,
									"src": "887:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "1056:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1160,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1159,
												"id": 1162,
												"nodeType": "Return",
												"src": "1066:15:4"
											}
										]
									},
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:4"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "1040:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:4"
									},
									"scope": 1173,
									"src": "989:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "1166:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1168,
												"id": 1170,
												"nodeType": "Return",
												"src": "1176:8:4"
											}
										]
									},
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:4"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "1157:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:4"
									},
									"scope": 1173,
									"src": "1094:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1174,
							"src": "688:505:4",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1310
						],
						"IERC20Errors": [
							1215
						],
						"IERC721Errors": [
							1263
						]
					},
					"id": 1311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1176,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:5",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 1215,
							"linearizedBaseContracts": [
								1215
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:5",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1185,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "652:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "668:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "685:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:5"
									},
									"src": "621:80:5"
								},
								{
									"documentation": {
										"id": 1186,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1190,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "889:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:5"
									},
									"src": "864:41:5"
								},
								{
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1195,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1102:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:5"
									},
									"src": "1075:45:5"
								},
								{
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:5",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1204,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "1509:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "1526:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "1545:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:5"
									},
									"src": "1476:85:5"
								},
								{
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1209,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "1773:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:5"
									},
									"src": "1746:45:5"
								},
								{
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:5",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1214,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "2023:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:5"
									},
									"src": "1997:43:5"
								}
							],
							"scope": 1311,
							"src": "278:1764:5",
							"usedErrors": [
								1185,
								1190,
								1195,
								1204,
								1209,
								1214
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1216,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:5",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 1263,
							"linearizedBaseContracts": [
								1263
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:5",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1221,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "2465:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:5"
									},
									"src": "2440:40:5"
								},
								{
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:5",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1226,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "2652:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:5"
									},
									"src": "2623:46:5"
								},
								{
									"documentation": {
										"id": 1227,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:5",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1235,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "2996:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3012:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "3029:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:5"
									},
									"src": "2969:75:5"
								},
								{
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1240,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "3233:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:5"
									},
									"src": "3207:42:5"
								},
								{
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1245,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "3447:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:5"
									},
									"src": "3419:46:5"
								},
								{
									"documentation": {
										"id": 1246,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:5",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1252,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "3756:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "3774:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:5"
									},
									"src": "3723:68:5"
								},
								{
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1257,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "4004:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:5"
									},
									"src": "3976:46:5"
								},
								{
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:5",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1262,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "4258:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:5"
									},
									"src": "4230:46:5"
								}
							],
							"scope": 1311,
							"src": "2186:2092:5",
							"usedErrors": [
								1221,
								1226,
								1235,
								1240,
								1245,
								1252,
								1257,
								1262
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1264,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:5",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1310,
							"linearizedBaseContracts": [
								1310
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:5",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1275,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4854:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4870:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4887:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4903:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:5"
									},
									"src": "4821:99:5"
								},
								{
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1280,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "5110:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:5"
									},
									"src": "5083:43:5"
								},
								{
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1285,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "5325:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:5"
									},
									"src": "5296:47:5"
								},
								{
									"documentation": {
										"id": 1286,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:5",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1292,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "5645:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "5663:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:5"
									},
									"src": "5610:68:5"
								},
								{
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1297,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "5892:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:5"
									},
									"src": "5863:47:5"
								},
								{
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:5",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1302,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "6147:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:5"
									},
									"src": "6118:47:5"
								},
								{
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:5",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1309,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "6488:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "6507:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:5"
									},
									"src": "6456:73:5"
								}
							],
							"scope": 1311,
							"src": "4424:2107:5",
							"usedErrors": [
								1275,
								1280,
								1285,
								1292,
								1297,
								1302,
								1309
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1388
						]
					},
					"id": 1389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1313,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:6",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1388,
							"linearizedBaseContracts": [
								1388
							],
							"name": "IERC20",
							"nameLocation": "213:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1322,
									"name": "Transfer",
									"nameLocation": "395:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "404:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "426:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "446:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:6"
									},
									"src": "389:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1331,
									"name": "Approval",
									"nameLocation": "626:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "635:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "658:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "683:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:6"
									},
									"src": "620:78:6"
								},
								{
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:6"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "820:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:6"
									},
									"scope": 1388,
									"src": "774:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1338,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "930:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:6"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "970:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:6"
									},
									"scope": 1388,
									"src": "911:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1221:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1233:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:6"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1266:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:6"
									},
									"scope": 1388,
									"src": "1203:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "1566:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "1581:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:6"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "1621:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:6"
									},
									"scope": 1388,
									"src": "1547:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "2325:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:6"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1372,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 1388,
									"src": "2308:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2711:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2725:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2737:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:6"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2770:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1384,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:6"
									},
									"scope": 1388,
									"src": "2689:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1389,
							"src": "203:2575:6",
							"usedErrors": [],
							"usedEvents": [
								1322,
								1331
							]
						}
					],
					"src": "106:2673:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1388
						],
						"IERC20Metadata": [
							1414
						]
					},
					"id": 1415,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1390,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1415,
							"sourceUnit": 1389,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1391,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1388,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1394,
										"name": "IERC20",
										"nameLocations": [
											"305:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1388,
										"src": "305:6:7"
									},
									"id": 1395,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1393,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:7",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1414,
							"linearizedBaseContracts": [
								1414,
								1388
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:7"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "416:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1398,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:7"
									},
									"scope": 1414,
									"src": "377:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1402,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:7"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "539:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:7"
									},
									"scope": 1414,
									"src": "498:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:7"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "673:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1410,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:7"
									},
									"scope": 1414,
									"src": "630:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1415,
							"src": "277:405:7",
							"usedErrors": [],
							"usedEvents": [
								1322,
								1331
							]
						}
					],
					"src": "125:558:7"
				},
				"id": 7
			},
			"Token/123.sol": {
				"ast": {
					"absolutePath": "Token/123.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1173
						],
						"ERC20BurnableUpgradeable": [
							1127
						],
						"ERC20Upgradeable": [
							1065
						],
						"IERC20": [
							1388
						],
						"IERC20Errors": [
							1215
						],
						"IERC20Metadata": [
							1414
						],
						"IUniswapV2Factory": [
							2162
						],
						"IUniswapV2Pair": [
							2404
						],
						"IUniswapV2Router01": [
							2712
						],
						"IUniswapV2Router02": [
							2800
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"Trabajo24Token": [
							2099
						]
					},
					"id": 2100,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1416,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1961:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 1417,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2100,
							"sourceUnit": 1066,
							"src": "1988:78:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
							"id": 1418,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2100,
							"sourceUnit": 1128,
							"src": "2068:97:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1419,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2100,
							"sourceUnit": 195,
							"src": "2167:75:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1420,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2100,
							"sourceUnit": 449,
							"src": "2244:75:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Token/IUniswapV2Pair.sol",
							"file": "./IUniswapV2Pair.sol",
							"id": 1421,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2100,
							"sourceUnit": 2405,
							"src": "2321:30:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Token/IUniswapV2Router02.sol",
							"file": "./IUniswapV2Router02.sol",
							"id": 1422,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2100,
							"sourceUnit": 2801,
							"src": "2353:34:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Token/IUniswapV2Factory.sol",
							"file": "./IUniswapV2Factory.sol",
							"id": 1423,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2100,
							"sourceUnit": 2163,
							"src": "2389:33:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1424,
										"name": "Initializable",
										"nameLocations": [
											"2453:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "2453:13:8"
									},
									"id": 1425,
									"nodeType": "InheritanceSpecifier",
									"src": "2453:13:8"
								},
								{
									"baseName": {
										"id": 1426,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"2468:16:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1065,
										"src": "2468:16:8"
									},
									"id": 1427,
									"nodeType": "InheritanceSpecifier",
									"src": "2468:16:8"
								},
								{
									"baseName": {
										"id": 1428,
										"name": "ERC20BurnableUpgradeable",
										"nameLocations": [
											"2486:24:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1127,
										"src": "2486:24:8"
									},
									"id": 1429,
									"nodeType": "InheritanceSpecifier",
									"src": "2486:24:8"
								},
								{
									"baseName": {
										"id": 1430,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"2512:18:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "2512:18:8"
									},
									"id": 1431,
									"nodeType": "InheritanceSpecifier",
									"src": "2512:18:8"
								}
							],
							"canonicalName": "Trabajo24Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2099,
							"linearizedBaseContracts": [
								2099,
								194,
								1127,
								1065,
								1215,
								1414,
								1388,
								1173,
								448
							],
							"name": "Trabajo24Token",
							"nameLocation": "2435:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "2606:41:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1435,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "2617:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2617:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "2617:22:8"
											}
										]
									},
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "2538:48:8",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 1439,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:8"
									},
									"returnParameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2606:0:8"
									},
									"scope": 2099,
									"src": "2592:55:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "75f0a874",
									"id": 1441,
									"mutability": "mutable",
									"name": "marketingWallet",
									"nameLocation": "2671:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2099,
									"src": "2655:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1440,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2655:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c04a5414",
									"id": 1443,
									"mutability": "mutable",
									"name": "developmentWallet",
									"nameLocation": "2709:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2099,
									"src": "2693:33:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1442,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2693:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fedcb861",
									"id": 1445,
									"mutability": "mutable",
									"name": "sustainabilityWallet",
									"nameLocation": "2749:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 2099,
									"src": "2733:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1444,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2733:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8206cf5a",
									"id": 1447,
									"mutability": "mutable",
									"name": "marketingWalletTax",
									"nameLocation": "2798:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 2099,
									"src": "2782:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1446,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2782:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "11e91b84",
									"id": 1449,
									"mutability": "mutable",
									"name": "developmentWalletTax",
									"nameLocation": "2840:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 2099,
									"src": "2824:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1448,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2824:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e7d88de5",
									"id": 1451,
									"mutability": "mutable",
									"name": "sustainabilityWalletTax",
									"nameLocation": "2883:23:8",
									"nodeType": "VariableDeclaration",
									"scope": 2099,
									"src": "2867:39:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1450,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2867:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8c8ebe4",
									"id": 1453,
									"mutability": "mutable",
									"name": "maxTransactionAmount",
									"nameLocation": "2929:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 2099,
									"src": "2913:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1452,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2913:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1455,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "2972:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2099,
									"src": "2956:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1454,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2956:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1459,
									"mutability": "mutable",
									"name": "_blacklisted",
									"nameLocation": "3026:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2099,
									"src": "2993:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1458,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1456,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3001:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2993:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1457,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "3012:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1465,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "3101:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2099,
									"src": "3045:67:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1464,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1460,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3053:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3045:47:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1463,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1461,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3072:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3064:27:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1462,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3083:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "1694505e",
									"id": 1468,
									"mutability": "mutable",
									"name": "uniswapV2Router",
									"nameLocation": "3147:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2099,
									"src": "3121:41:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$2800",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 1467,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1466,
											"name": "IUniswapV2Router02",
											"nameLocations": [
												"3121:18:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2800,
											"src": "3121:18:8"
										},
										"referencedDeclaration": 2800,
										"src": "3121:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$2800",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c816841b",
									"id": 1470,
									"mutability": "mutable",
									"name": "uniswapPair",
									"nameLocation": "3184:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2099,
									"src": "3169:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1469,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3169:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "153e5299255e24f1fd2ceee40599bfdc41290fd92340ff6173fc24efd6c299a6",
									"id": 1474,
									"name": "UpdatedMarketingWalletTax",
									"nameLocation": "3210:25:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"indexed": false,
												"mutability": "mutable",
												"name": "_updatedMarketingWalletTax",
												"nameLocation": "3244:26:8",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "3236:34:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3236:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:36:8"
									},
									"src": "3204:68:8"
								},
								{
									"anonymous": false,
									"eventSelector": "d3f51aabcf3bcbd05f9260c8ccec9728da097c538dd797a90f527e255ae30838",
									"id": 1478,
									"name": "UpdatedtDevelopmentWalletTax",
									"nameLocation": "3284:28:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"indexed": false,
												"mutability": "mutable",
												"name": "_updatedtDevelopmentWalletTax",
												"nameLocation": "3321:29:8",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "3313:37:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3313:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:39:8"
									},
									"src": "3278:74:8"
								},
								{
									"anonymous": false,
									"eventSelector": "28ad5f14a54b644d089d89d6140175fbbf7199a6fa1275e827904c157f491546",
									"id": 1482,
									"name": "UpdatedtSustainabilityWalletTax",
									"nameLocation": "3364:31:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"indexed": false,
												"mutability": "mutable",
												"name": "_updatedtSustainabilityWalletTax",
												"nameLocation": "3404:32:8",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "3396:40:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3396:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3395:42:8"
									},
									"src": "3358:80:8"
								},
								{
									"anonymous": false,
									"eventSelector": "44d540c6079791f805bc9b5d5a643dbf1f545ec260212b2b2478ef9d9ed0768e",
									"id": 1486,
									"name": "UpdatedMaxAmount",
									"nameLocation": "3450:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"indexed": false,
												"mutability": "mutable",
												"name": "_updatedMaxAmount",
												"nameLocation": "3475:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "3467:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3467:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3466:27:8"
									},
									"src": "3444:50:8"
								},
								{
									"anonymous": false,
									"eventSelector": "2026f0b479f097ea9d4c74dac26e5271ba4d59931603970da5458ea8aa3dcf37",
									"id": 1490,
									"name": "UpdatedMarketingWallet",
									"nameLocation": "3506:22:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"indexed": false,
												"mutability": "mutable",
												"name": "_updatedMarketingWallet",
												"nameLocation": "3537:23:8",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "3529:31:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3529:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3528:33:8"
									},
									"src": "3500:62:8"
								},
								{
									"anonymous": false,
									"eventSelector": "7404946ba3969d72cc11e8a0c21a8ab3b8dddeb41e78f235dfad9ffcda3f617c",
									"id": 1494,
									"name": "UpdatedDevelopmentWallet",
									"nameLocation": "3574:24:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"indexed": false,
												"mutability": "mutable",
												"name": "_updatedDevelopmentWallet",
												"nameLocation": "3607:25:8",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "3599:33:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3599:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3598:35:8"
									},
									"src": "3568:66:8"
								},
								{
									"anonymous": false,
									"eventSelector": "5d4a0c152f269a59530b6c3a84f5a90ac341c463c9e6d5d0d04cf75596776e4f",
									"id": 1498,
									"name": "UpdatedSustainabilityWallet",
									"nameLocation": "3646:27:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"indexed": false,
												"mutability": "mutable",
												"name": "_updatedSustainabilityWallet",
												"nameLocation": "3682:28:8",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "3674:36:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3674:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3673:38:8"
									},
									"src": "3640:72:8"
								},
								{
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "4539:1362:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1504,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4565:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4569:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4565:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1503,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "4550:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4550:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1507,
												"nodeType": "ExpressionStatement",
												"src": "4550:26:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1508,
														"name": "__ERC20Burnable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "4587:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4587:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1510,
												"nodeType": "ExpressionStatement",
												"src": "4587:22:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "54726162616a6f3234",
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4633:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70eb4acfad2a52ea4eed2a3c01f9807d9891358a891ce9e5fcb2ac87850fd7ca",
																"typeString": "literal_string \"Trabajo24\""
															},
															"value": "Trabajo24"
														},
														{
															"hexValue": "543234",
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4645:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_82bac1cfa0d884067c09dd1a5f72f4e7b7931d4625c28b750e140bdb82fee0e8",
																"typeString": "literal_string \"T24\""
															},
															"value": "T24"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_70eb4acfad2a52ea4eed2a3c01f9807d9891358a891ce9e5fcb2ac87850fd7ca",
																"typeString": "literal_string \"Trabajo24\""
															},
															{
																"typeIdentifier": "t_stringliteral_82bac1cfa0d884067c09dd1a5f72f4e7b7931d4625c28b750e140bdb82fee0e8",
																"typeString": "literal_string \"T24\""
															}
														],
														"id": 1511,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "4620:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4620:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1515,
												"nodeType": "ExpressionStatement",
												"src": "4620:31:8"
											},
											{
												"expression": {
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1516,
														"name": "marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "4662:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307830376534336433336345336542653036613042666146666330344163613337633441636244334135",
														"id": 1517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4679:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x07e43d33cE3eBe06a0BfaFfc04Aca37c4AcbD3A5"
													},
													"src": "4662:59:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1519,
												"nodeType": "ExpressionStatement",
												"src": "4662:59:8"
											},
											{
												"expression": {
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1520,
														"name": "developmentWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "4751:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307835454438314639624332343032613262624437386533383143394141316564643939423930413535",
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4771:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x5ED81F9bC2402a2bbD78e381C9AA1edd99B90A55"
													},
													"src": "4751:62:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1523,
												"nodeType": "ExpressionStatement",
												"src": "4751:62:8"
											},
											{
												"expression": {
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1524,
														"name": "sustainabilityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "4845:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307844343336633130643739316337613935353839353041323531613034393837313831316242303730",
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4868:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xD436c10d791c7a9558950A251a049871811bB070"
													},
													"src": "4845:65:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "4845:65:8"
											},
											{
												"expression": {
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1528,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "4945:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "313030303030303030",
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4960:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100000000_by_1",
																"typeString": "int_const 100000000"
															},
															"value": "100000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4972:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1531,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "4978:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																		"typeString": "function () view returns (uint8)"
																	}
																},
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4978:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "4972:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4960:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4945:43:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1536,
												"nodeType": "ExpressionStatement",
												"src": "4945:43:8"
											},
											{
												"expression": {
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1537,
														"name": "marketingWalletTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "4999:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130",
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5020:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "4999:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "4999:23:8"
											},
											{
												"expression": {
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1541,
														"name": "developmentWalletTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "5042:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3230",
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5065:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "5042:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "5042:25:8"
											},
											{
												"expression": {
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1545,
														"name": "sustainabilityWalletTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "5087:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313530",
														"id": 1546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5112:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_150_by_1",
															"typeString": "int_const 150"
														},
														"value": "150"
													},
													"src": "5087:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1548,
												"nodeType": "ExpressionStatement",
												"src": "5087:28:8"
											},
											{
												"expression": {
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1549,
														"name": "maxTransactionAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "5181:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3230303030303030",
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5204:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20000000_by_1",
																"typeString": "int_const 20000000"
															},
															"value": "20000000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5215:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1554,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 585,
																			"src": "5229:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																				"typeString": "function () view returns (uint8)"
																			}
																		},
																		"id": 1555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5229:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5221:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1552,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5221:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5221:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5215:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5204:36:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5181:59:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1560,
												"nodeType": "ExpressionStatement",
												"src": "5181:59:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1562,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5289:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5293:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5289:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1564,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "5300:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1561,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "5283:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5283:30:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1566,
												"nodeType": "ExpressionStatement",
												"src": "5283:30:8"
											},
											{
												"assignments": [
													1569
												],
												"declarations": [
													{
														"constant": false,
														"id": 1569,
														"mutability": "mutable",
														"name": "_uniswapV2Router",
														"nameLocation": "5345:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 1635,
														"src": "5326:35:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$2800",
															"typeString": "contract IUniswapV2Router02"
														},
														"typeName": {
															"id": 1568,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1567,
																"name": "IUniswapV2Router02",
																"nameLocations": [
																	"5326:18:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2800,
																"src": "5326:18:8"
															},
															"referencedDeclaration": 2800,
															"src": "5326:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$2800",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1573,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "307844393944316333334639664333343434663831303137353461424334366335323431363535304431",
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5396:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0xD99D1c33F9fC3444f8101754aBC46c52416550D1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1570,
														"name": "IUniswapV2Router02",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2800,
														"src": "5364:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$2800_$",
															"typeString": "type(contract IUniswapV2Router02)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5364:100:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$2800",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5326:138:8"
											},
											{
												"expression": {
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1574,
														"name": "uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "5478:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$2800",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1575,
														"name": "_uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "5496:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$2800",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "5478:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$2800",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "5478:34:8"
											},
											{
												"expression": {
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1578,
														"name": "uniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "5523:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1587,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5616:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Trabajo24Token_$2099",
																			"typeString": "contract Trabajo24Token"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Trabajo24Token_$2099",
																			"typeString": "contract Trabajo24Token"
																		}
																	],
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5608:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1585,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5608:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5608:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1589,
																		"name": "_uniswapV2Router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1569,
																		"src": "5636:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Router02_$2800",
																			"typeString": "contract IUniswapV2Router02"
																		}
																	},
																	"id": 1590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5653:4:8",
																	"memberName": "WETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2416,
																	"src": "5636:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																		"typeString": "function () pure external returns (address)"
																	}
																},
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5636:23:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1580,
																				"name": "_uniswapV2Router",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1569,
																				"src": "5555:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$2800",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			},
																			"id": 1581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5572:7:8",
																			"memberName": "factory",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2411,
																			"src": "5555:24:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																				"typeString": "function () pure external returns (address)"
																			}
																		},
																		"id": 1582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5555:26:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1579,
																	"name": "IUniswapV2Factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2162,
																	"src": "5537:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$2162_$",
																		"typeString": "type(contract IUniswapV2Factory)"
																	}
																},
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5537:45:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Factory_$2162",
																	"typeString": "contract IUniswapV2Factory"
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5583:10:8",
															"memberName": "createPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2151,
															"src": "5537:56:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) external returns (address)"
															}
														},
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5537:133:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5523:147:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1594,
												"nodeType": "ExpressionStatement",
												"src": "5523:147:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1596,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5693:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5697:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5693:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1600,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "5713:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2800",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2800",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5705:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1598,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5705:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5705:24:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5736:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1603,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5736:7:8",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1602,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "5731:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5731:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5745:3:8",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "5731:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1595,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1016
														],
														"referencedDeclaration": 948,
														"src": "5684:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5684:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1608,
												"nodeType": "ExpressionStatement",
												"src": "5684:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1612,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5777:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Trabajo24Token_$2099",
																		"typeString": "contract Trabajo24Token"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Trabajo24Token_$2099",
																		"typeString": "contract Trabajo24Token"
																	}
																],
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5769:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1610,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5769:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5769:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1616,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "5792:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2800",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2800",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5784:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1614,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5784:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5784:24:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5815:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1619,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5815:7:8",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1618,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "5810:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5810:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5824:3:8",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "5810:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1609,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1016
														],
														"referencedDeclaration": 948,
														"src": "5760:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5760:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1624,
												"nodeType": "ExpressionStatement",
												"src": "5760:68:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5864:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5856:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1626,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5856:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5856:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1630,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5868:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5872:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5868:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1632,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "5880:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1625,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "5847:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5847:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1634,
												"nodeType": "EmitStatement",
												"src": "5842:51:8"
											}
										]
									},
									"functionSelector": "8129fc1c",
									"id": 1636,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1501,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1500,
												"name": "initializer",
												"nameLocations": [
													"4527:11:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "4527:11:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4527:11:8"
										}
									],
									"name": "initialize",
									"nameLocation": "4507:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4517:2:8"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4539:0:8"
									},
									"scope": 2099,
									"src": "4498:1403:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1651,
										"nodeType": "Block",
										"src": "6250:36:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1647,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "6267:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1648,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "6271:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1646,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "6261:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6261:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1650,
												"nodeType": "ExpressionStatement",
												"src": "6261:17:8"
											}
										]
									},
									"documentation": {
										"id": 1637,
										"nodeType": "StructuredDocumentation",
										"src": "5909:276:8",
										"text": " @dev Allows the owner to mint new tokens to a specified address.\n This function can be used to increase the total supply of tokens.\n @param to The address to which the new tokens will be minted.\n @param amount The amount of tokens to mint."
									},
									"functionSelector": "40c10f19",
									"id": 1652,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1644,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1643,
												"name": "onlyOwner",
												"nameLocations": [
													"6240:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "6240:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "6240:9:8"
										}
									],
									"name": "mint",
									"nameLocation": "6200:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6213:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "6205:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6205:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6225:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "6217:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6204:28:8"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6250:0:8"
									},
									"scope": 2099,
									"src": "6191:95:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1675,
										"nodeType": "Block",
										"src": "6752:194:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1661,
																"name": "_taxPercentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "6771:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6789:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "6771:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5461782070657263656e746167652063616e6e6f74206578636565642031303025",
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6795:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c980fa47fa3eacfad4b8fb78485548f91ccfcb341cc7d44b4581776d57ff05ba",
																"typeString": "literal_string \"Tax percentage cannot exceed 100%\""
															},
															"value": "Tax percentage cannot exceed 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c980fa47fa3eacfad4b8fb78485548f91ccfcb341cc7d44b4581776d57ff05ba",
																"typeString": "literal_string \"Tax percentage cannot exceed 100%\""
															}
														],
														"id": 1660,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6763:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6763:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1666,
												"nodeType": "ExpressionStatement",
												"src": "6763:68:8"
											},
											{
												"expression": {
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1667,
														"name": "marketingWalletTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "6842:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1668,
														"name": "_taxPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1655,
														"src": "6863:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6842:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "6842:35:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1672,
															"name": "marketingWalletTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "6919:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1671,
														"name": "UpdatedMarketingWalletTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "6893:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6893:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1674,
												"nodeType": "EmitStatement",
												"src": "6888:50:8"
											}
										]
									},
									"documentation": {
										"id": 1653,
										"nodeType": "StructuredDocumentation",
										"src": "6298:374:8",
										"text": " @dev Sets the marketing wallet tax percentage. This function allows the owner to update the tax percentage\n that will be applied to marketing transactions.\n @param _taxPercentage The new tax percentage to be set. It is expected to be in basis points (i.e., 100 basis points = 1%).\n The maximum allowed value is 10000 basis points (100%)."
									},
									"functionSelector": "88696f2f",
									"id": 1676,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1658,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1657,
												"name": "onlyOwner",
												"nameLocations": [
													"6742:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "6742:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "6742:9:8"
										}
									],
									"name": "setMarketingWalletTax",
									"nameLocation": "6687:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "_taxPercentage",
												"nameLocation": "6717:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "6709:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6709:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6708:24:8"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6752:0:8"
									},
									"scope": 2099,
									"src": "6678:268:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "7418:201:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1685,
																"name": "_taxPercentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1679,
																"src": "7437:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7455:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "7437:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5461782070657263656e746167652063616e6e6f74206578636565642031303025",
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7461:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c980fa47fa3eacfad4b8fb78485548f91ccfcb341cc7d44b4581776d57ff05ba",
																"typeString": "literal_string \"Tax percentage cannot exceed 100%\""
															},
															"value": "Tax percentage cannot exceed 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c980fa47fa3eacfad4b8fb78485548f91ccfcb341cc7d44b4581776d57ff05ba",
																"typeString": "literal_string \"Tax percentage cannot exceed 100%\""
															}
														],
														"id": 1684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7429:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7429:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1690,
												"nodeType": "ExpressionStatement",
												"src": "7429:68:8"
											},
											{
												"expression": {
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1691,
														"name": "developmentWalletTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "7508:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1692,
														"name": "_taxPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "7531:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7508:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "7508:37:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1696,
															"name": "developmentWalletTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "7590:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1695,
														"name": "UpdatedtDevelopmentWalletTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "7561:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7561:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1698,
												"nodeType": "EmitStatement",
												"src": "7556:55:8"
											}
										]
									},
									"documentation": {
										"id": 1677,
										"nodeType": "StructuredDocumentation",
										"src": "6958:378:8",
										"text": " @dev Sets the development wallet tax percentage. This function allows the owner to update the tax percentage\n that will be applied to development transactions.\n @param _taxPercentage The new tax percentage to be set. It is expected to be in basis points (i.e., 100 basis points = 1%).\n The maximum allowed value is 10000 basis points (100%)."
									},
									"functionSelector": "85fbae56",
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1682,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1681,
												"name": "onlyOwner",
												"nameLocations": [
													"7408:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "7408:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7408:9:8"
										}
									],
									"name": "setDevelopmentWalletTax",
									"nameLocation": "7351:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "_taxPercentage",
												"nameLocation": "7383:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "7375:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7375:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7374:24:8"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:8"
									},
									"scope": 2099,
									"src": "7342:277:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1722,
										"nodeType": "Block",
										"src": "7706:210:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1708,
																"name": "_taxPercentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1702,
																"src": "7725:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 1709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7743:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "7725:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5461782070657263656e746167652063616e6e6f74206578636565642031303025",
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7749:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c980fa47fa3eacfad4b8fb78485548f91ccfcb341cc7d44b4581776d57ff05ba",
																"typeString": "literal_string \"Tax percentage cannot exceed 100%\""
															},
															"value": "Tax percentage cannot exceed 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c980fa47fa3eacfad4b8fb78485548f91ccfcb341cc7d44b4581776d57ff05ba",
																"typeString": "literal_string \"Tax percentage cannot exceed 100%\""
															}
														],
														"id": 1707,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7717:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7717:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1713,
												"nodeType": "ExpressionStatement",
												"src": "7717:68:8"
											},
											{
												"expression": {
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1714,
														"name": "sustainabilityWalletTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "7796:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1715,
														"name": "_taxPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1702,
														"src": "7822:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7796:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1717,
												"nodeType": "ExpressionStatement",
												"src": "7796:40:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1719,
															"name": "sustainabilityWalletTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "7884:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1718,
														"name": "UpdatedtSustainabilityWalletTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "7852:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7852:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1721,
												"nodeType": "EmitStatement",
												"src": "7847:61:8"
											}
										]
									},
									"functionSelector": "6ddfa4b4",
									"id": 1723,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1705,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1704,
												"name": "onlyOwner",
												"nameLocations": [
													"7696:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "7696:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7696:9:8"
										}
									],
									"name": "setSustainabilityWalletTax",
									"nameLocation": "7636:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "_taxPercentage",
												"nameLocation": "7671:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "7663:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7663:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7662:24:8"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7706:0:8"
									},
									"scope": 2099,
									"src": "7627:289:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1746,
										"nodeType": "Block",
										"src": "8260:167:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1732,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "8279:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8289:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8279:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e742073686f756c6420626520677265617465207468616e2030",
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8291:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3c55b8f56c3715bd9a22d992ef46e98dbd5578d1c853a2ff1e6c29147cf488a8",
																"typeString": "literal_string \"amount should be greate than 0\""
															},
															"value": "amount should be greate than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3c55b8f56c3715bd9a22d992ef46e98dbd5578d1c853a2ff1e6c29147cf488a8",
																"typeString": "literal_string \"amount should be greate than 0\""
															}
														],
														"id": 1731,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8271:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8271:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1737,
												"nodeType": "ExpressionStatement",
												"src": "8271:53:8"
											},
											{
												"expression": {
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1738,
														"name": "maxTransactionAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "8335:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1739,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "8358:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8335:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1741,
												"nodeType": "ExpressionStatement",
												"src": "8335:30:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1743,
															"name": "maxTransactionAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "8398:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1742,
														"name": "UpdatedMaxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1486,
														"src": "8381:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8381:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1745,
												"nodeType": "EmitStatement",
												"src": "8376:43:8"
											}
										]
									},
									"documentation": {
										"id": 1724,
										"nodeType": "StructuredDocumentation",
										"src": "7928:268:8",
										"text": " @dev Sets the maximum transaction amount. This function allows the owner to update the maximum amount of tokens\n that can be transferred in a single transaction.\n @param _amount The new maximum transaction amount. Must be greater than 0."
									},
									"functionSelector": "4fe47f70",
									"id": 1747,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1729,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1728,
												"name": "onlyOwner",
												"nameLocations": [
													"8250:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "8250:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "8250:9:8"
										}
									],
									"name": "setMaxAmount",
									"nameLocation": "8211:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8232:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "8224:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8224:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8223:17:8"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8260:0:8"
									},
									"scope": 2099,
									"src": "8202:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1773,
										"nodeType": "Block",
										"src": "8767:179:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1756,
																"name": "_wallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1750,
																"src": "8785:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8804:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8796:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1757,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8796:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8796:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8785:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61726b6574696e672077616c6c65742063616e6e6f74206265207a65726f2061646472657373",
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8807:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4e23601e5f0eff9b92f6d8acd455a927d51dd1f6d23ed8a0b187a03c322e2eb3",
																"typeString": "literal_string \"Marketing wallet cannot be zero address\""
															},
															"value": "Marketing wallet cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4e23601e5f0eff9b92f6d8acd455a927d51dd1f6d23ed8a0b187a03c322e2eb3",
																"typeString": "literal_string \"Marketing wallet cannot be zero address\""
															}
														],
														"id": 1755,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8777:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8777:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1764,
												"nodeType": "ExpressionStatement",
												"src": "8777:72:8"
											},
											{
												"expression": {
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1765,
														"name": "marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "8859:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1766,
														"name": "_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1750,
														"src": "8877:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8859:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1768,
												"nodeType": "ExpressionStatement",
												"src": "8859:25:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1770,
															"name": "marketingWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "8922:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1769,
														"name": "UpdatedMarketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "8899:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8899:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1772,
												"nodeType": "EmitStatement",
												"src": "8894:44:8"
											}
										]
									},
									"documentation": {
										"id": 1748,
										"nodeType": "StructuredDocumentation",
										"src": "8439:258:8",
										"text": " @dev Sets the marketing wallet address. This function allows the owner to update the address where marketing-related \n funds or taxes will be sent.\n @param _wallet The new marketing wallet address. Must not be the zero address."
									},
									"functionSelector": "5d098b38",
									"id": 1774,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1753,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1752,
												"name": "onlyOwner",
												"nameLocations": [
													"8757:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "8757:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "8757:9:8"
										}
									],
									"name": "setMarketingWallet",
									"nameLocation": "8712:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "_wallet",
												"nameLocation": "8739:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "8731:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8731:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8730:17:8"
									},
									"returnParameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8767:0:8"
									},
									"scope": 2099,
									"src": "8703:243:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1800,
										"nodeType": "Block",
										"src": "9293:182:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1783,
																"name": "_wallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1777,
																"src": "9312:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9331:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9323:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1784,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9323:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9323:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9312:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4465762077616c6c65742063616e6e6f74206265207a65726f2061646472657373",
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9334:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ab50c48371346557ee1e1a620334035014c71e69572d4d3f31f134c125e07703",
																"typeString": "literal_string \"Dev wallet cannot be zero address\""
															},
															"value": "Dev wallet cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ab50c48371346557ee1e1a620334035014c71e69572d4d3f31f134c125e07703",
																"typeString": "literal_string \"Dev wallet cannot be zero address\""
															}
														],
														"id": 1782,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9304:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9304:66:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1791,
												"nodeType": "ExpressionStatement",
												"src": "9304:66:8"
											},
											{
												"expression": {
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1792,
														"name": "developmentWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "9381:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1793,
														"name": "_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "9401:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9381:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1795,
												"nodeType": "ExpressionStatement",
												"src": "9381:27:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1797,
															"name": "developmentWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "9449:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1796,
														"name": "UpdatedDevelopmentWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "9424:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9424:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1799,
												"nodeType": "EmitStatement",
												"src": "9419:48:8"
											}
										]
									},
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "8954:267:8",
										"text": " @dev Sets the Development wallet address. This function allows the owner to update the address where Development-related\n funds or taxes will be sent.\n @param _wallet The new Development wallet address. Must not be the zero address."
									},
									"functionSelector": "72ac2486",
									"id": 1801,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1780,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1779,
												"name": "onlyOwner",
												"nameLocations": [
													"9283:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "9283:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "9283:9:8"
										}
									],
									"name": "setDevelopmentWallet",
									"nameLocation": "9236:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "_wallet",
												"nameLocation": "9265:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "9257:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9257:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9256:17:8"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9293:0:8"
									},
									"scope": 2099,
									"src": "9227:248:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1827,
										"nodeType": "Block",
										"src": "9830:197:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1810,
																"name": "_wallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1804,
																"src": "9848:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9867:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9859:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1811,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9859:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9848:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "737461696e6162696c6974792077616c6c65742063616e6e6f74206265207a65726f2061646472657373",
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9870:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_219bea5a61efa3b24140009507cd3511599910dbff559ec8c9faf0a37bd765f6",
																"typeString": "literal_string \"stainability wallet cannot be zero address\""
															},
															"value": "stainability wallet cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_219bea5a61efa3b24140009507cd3511599910dbff559ec8c9faf0a37bd765f6",
																"typeString": "literal_string \"stainability wallet cannot be zero address\""
															}
														],
														"id": 1809,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9840:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9840:75:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1818,
												"nodeType": "ExpressionStatement",
												"src": "9840:75:8"
											},
											{
												"expression": {
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1819,
														"name": "sustainabilityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "9925:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1820,
														"name": "_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "9948:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9925:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1822,
												"nodeType": "ExpressionStatement",
												"src": "9925:30:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1824,
															"name": "sustainabilityWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "9998:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1823,
														"name": "UpdatedSustainabilityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "9970:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9970:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1826,
												"nodeType": "EmitStatement",
												"src": "9965:54:8"
											}
										]
									},
									"documentation": {
										"id": 1802,
										"nodeType": "StructuredDocumentation",
										"src": "9483:272:8",
										"text": " @dev Sets the sustainability wallet address. This function allows the owner to update the address where sustainability-related\n funds or taxes will be sent.\n @param _wallet The new sustainability wallet address. Must not be the zero address."
									},
									"functionSelector": "be20b15d",
									"id": 1828,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1807,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1806,
												"name": "onlyOwner",
												"nameLocations": [
													"9820:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "9820:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "9820:9:8"
										}
									],
									"name": "setSustainabilityWallet",
									"nameLocation": "9770:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "_wallet",
												"nameLocation": "9802:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "9794:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9794:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9793:17:8"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9830:0:8"
									},
									"scope": 2099,
									"src": "9761:266:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1858,
										"nodeType": "Block",
										"src": "10393:191:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10412:22:8",
															"subExpression": {
																"baseExpression": {
																	"id": 1837,
																	"name": "_blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1459,
																	"src": "10413:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1839,
																"indexExpression": {
																	"id": 1838,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "10426:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10413:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e7420697320616c726561647920626c61636b6c6973746564",
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10436:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a",
																"typeString": "literal_string \"Account is already blacklisted\""
															},
															"value": "Account is already blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_54ea05c876195fdb955160bed5ab1ecaad8490a72dbe2e336faa010620aa7a2a",
																"typeString": "literal_string \"Account is already blacklisted\""
															}
														],
														"id": 1836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10404:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10404:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1843,
												"nodeType": "ExpressionStatement",
												"src": "10404:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1845,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "10488:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10488:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1847,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1831,
																"src": "10504:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10488:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420626c61636b6c6973742073656c66",
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10513:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30746d5fd3aefc8393bb6dc5cb0e9157927b231c1b6a9f1c23804427d78f58e9",
																"typeString": "literal_string \"Cannot blacklist self\""
															},
															"value": "Cannot blacklist self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30746d5fd3aefc8393bb6dc5cb0e9157927b231c1b6a9f1c23804427d78f58e9",
																"typeString": "literal_string \"Cannot blacklist self\""
															}
														],
														"id": 1844,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10480:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10480:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1851,
												"nodeType": "ExpressionStatement",
												"src": "10480:57:8"
											},
											{
												"expression": {
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1852,
															"name": "_blacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "10548:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1854,
														"indexExpression": {
															"id": 1853,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "10561:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10548:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1855,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10572:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "10548:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1857,
												"nodeType": "ExpressionStatement",
												"src": "10548:28:8"
											}
										]
									},
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "10035:293:8",
										"text": " @dev Adds an account to the blacklist. This function allows the owner to blacklist an address, preventing it from \n participating in transactions involving this token.\n @param account The address to be added to the blacklist. Must not be the owner's address."
									},
									"functionSelector": "44337ea1",
									"id": 1859,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1834,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1833,
												"name": "onlyOwner",
												"nameLocations": [
													"10384:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "10384:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "10384:9:8"
										}
									],
									"name": "addToBlacklist",
									"nameLocation": "10343:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10366:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "10358:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10357:17:8"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10393:0:8"
									},
									"scope": 2099,
									"src": "10334:250:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1888,
										"nodeType": "Block",
										"src": "10977:199:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1868,
																"name": "_blacklisted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1459,
																"src": "10996:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1870,
															"indexExpression": {
																"id": 1869,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "11009:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10996:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e74206973206e6f7420626c61636b6c6973746564",
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11019:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9",
																"typeString": "literal_string \"Account is not blacklisted\""
															},
															"value": "Account is not blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9f73da62a7747409466e75ede86b32b73f82ec9525b404453823ba7f8e77b2c9",
																"typeString": "literal_string \"Account is not blacklisted\""
															}
														],
														"id": 1867,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10988:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10988:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1873,
												"nodeType": "ExpressionStatement",
												"src": "10988:60:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1875,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "11067:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11067:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1877,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "11083:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11067:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742072656d6f76652073656c662066726f6d20626c61636b6c697374",
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11092:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa39be2dce503f936b45247ea43a2cf859da154cbb440268f1e122cce235bd49",
																"typeString": "literal_string \"Cannot remove self from blacklist\""
															},
															"value": "Cannot remove self from blacklist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa39be2dce503f936b45247ea43a2cf859da154cbb440268f1e122cce235bd49",
																"typeString": "literal_string \"Cannot remove self from blacklist\""
															}
														],
														"id": 1874,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11059:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11059:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1881,
												"nodeType": "ExpressionStatement",
												"src": "11059:69:8"
											},
											{
												"expression": {
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1882,
															"name": "_blacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "11139:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1884,
														"indexExpression": {
															"id": 1883,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "11152:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11139:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11163:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "11139:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1887,
												"nodeType": "ExpressionStatement",
												"src": "11139:29:8"
											}
										]
									},
									"documentation": {
										"id": 1860,
										"nodeType": "StructuredDocumentation",
										"src": "10592:315:8",
										"text": " @dev Removes an account from the blacklist. This function allows the owner to remove an address from the blacklist,\n allowing it to participate in transactions involving this token again.\n @param account The address to be removed from the blacklist. Must be currently blacklisted."
									},
									"functionSelector": "537df3b6",
									"id": 1889,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1865,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1864,
												"name": "onlyOwner",
												"nameLocations": [
													"10968:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "10968:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "10968:9:8"
										}
									],
									"name": "removeFromBlacklist",
									"nameLocation": "10922:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10950:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "10942:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10942:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10941:17:8"
									},
									"returnParameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10977:0:8"
									},
									"scope": 2099,
									"src": "10913:263:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1901,
										"nodeType": "Block",
										"src": "11643:47:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1897,
														"name": "_blacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "11661:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1899,
													"indexExpression": {
														"id": 1898,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1892,
														"src": "11674:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11661:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1896,
												"id": 1900,
												"nodeType": "Return",
												"src": "11654:28:8"
											}
										]
									},
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "11184:384:8",
										"text": " @dev Checks if an address is blacklisted.\n This function allows anyone to check if a particular address is currently blacklisted,\n meaning it is restricted from participating in transactions involving this token.\n @param account The address to check the blacklist status of.\n @return bool True if the account is blacklisted, false otherwise."
									},
									"functionSelector": "fe575a87",
									"id": 1902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBlacklisted",
									"nameLocation": "11583:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11605:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "11597:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11597:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11596:17:8"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "11637:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1894,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11637:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11636:6:8"
									},
									"scope": 2099,
									"src": "11574:116:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 2078,
										"nodeType": "Block",
										"src": "12343:1516:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1914,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1905,
																"src": "12362:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12380:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12372:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1915,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12372:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12372:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12362:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12384:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1913,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12354:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12354:70:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1922,
												"nodeType": "ExpressionStatement",
												"src": "12354:70:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1924,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1907,
																"src": "12443:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12464:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12456:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1925,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12456:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12456:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12443:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12468:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1923,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12435:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12435:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1932,
												"nodeType": "ExpressionStatement",
												"src": "12435:71:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1934,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1909,
																"src": "12525:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12534:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12525:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12537:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															},
															"value": "Transfer amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															}
														],
														"id": 1933,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12517:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12517:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1939,
												"nodeType": "ExpressionStatement",
												"src": "12517:64:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "12602:21:8",
															"subExpression": {
																"baseExpression": {
																	"id": 1941,
																	"name": "_blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1459,
																	"src": "12603:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1943,
																"indexExpression": {
																	"id": 1942,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1905,
																	"src": "12616:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12603:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e64657220697320626c61636b6c6973746564",
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12625:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_772c14a65a109aa6926c7b0454d5343eee60cf1188cabde66bc21bf88396e37f",
																"typeString": "literal_string \"Sender is blacklisted\""
															},
															"value": "Sender is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_772c14a65a109aa6926c7b0454d5343eee60cf1188cabde66bc21bf88396e37f",
																"typeString": "literal_string \"Sender is blacklisted\""
															}
														],
														"id": 1940,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12594:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12594:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1947,
												"nodeType": "ExpressionStatement",
												"src": "12594:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "12668:24:8",
															"subExpression": {
																"baseExpression": {
																	"id": 1949,
																	"name": "_blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1459,
																	"src": "12669:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1951,
																"indexExpression": {
																	"id": 1950,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1907,
																	"src": "12682:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12669:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526563697069656e7420697320626c61636b6c6973746564",
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12694:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f12d94dd452ac2a3ca7cab5d5d89cd55e903d07a3231732454f5351055f47ba",
																"typeString": "literal_string \"Recipient is blacklisted\""
															},
															"value": "Recipient is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f12d94dd452ac2a3ca7cab5d5d89cd55e903d07a3231732454f5351055f47ba",
																"typeString": "literal_string \"Recipient is blacklisted\""
															}
														],
														"id": 1948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12660:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12660:61:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1955,
												"nodeType": "ExpressionStatement",
												"src": "12660:61:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1956,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1905,
																"src": "12790:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1957,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "12800:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12800:7:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12790:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1960,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1907,
																"src": "12811:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1961,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "12824:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12824:7:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12811:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "12790:41:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1965,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "12835:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1968,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12853:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Trabajo24Token_$2099",
																		"typeString": "contract Trabajo24Token"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Trabajo24Token_$2099",
																		"typeString": "contract Trabajo24Token"
																	}
																],
																"id": 1967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12845:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1966,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12845:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12845:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12835:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12790:68:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1982,
												"nodeType": "IfStatement",
												"src": "12786:161:8",
												"trueBody": {
													"id": 1981,
													"nodeType": "Block",
													"src": "12860:87:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1975,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1905,
																		"src": "12888:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1976,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1907,
																		"src": "12896:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1977,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "12907:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1972,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "12874:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_Trabajo24Token_$2099_$",
																			"typeString": "type(contract super Trabajo24Token)"
																		}
																	},
																	"id": 1974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12880:7:8",
																	"memberName": "_update",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 864,
																	"src": "12874:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12874:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1979,
															"nodeType": "ExpressionStatement",
															"src": "12874:40:8"
														},
														{
															"functionReturnParameters": 1912,
															"id": 1980,
															"nodeType": "Return",
															"src": "12929:7:8"
														}
													]
												}
											},
											{
												"assignments": [
													1984
												],
												"declarations": [
													{
														"constant": false,
														"id": 1984,
														"mutability": "mutable",
														"name": "isBuy",
														"nameLocation": "12964:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 2078,
														"src": "12959:10:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1983,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12959:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1988,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1985,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1905,
														"src": "12972:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1986,
														"name": "uniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "12982:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12972:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12959:34:8"
											},
											{
												"assignments": [
													1990
												],
												"declarations": [
													{
														"constant": false,
														"id": 1990,
														"mutability": "mutable",
														"name": "isSell",
														"nameLocation": "13009:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2078,
														"src": "13004:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1989,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13004:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1994,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1991,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1907,
														"src": "13018:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1992,
														"name": "uniswapPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "13031:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13018:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13004:38:8"
											},
											{
												"assignments": [
													1996
												],
												"declarations": [
													{
														"constant": false,
														"id": 1996,
														"mutability": "mutable",
														"name": "marketingTax",
														"nameLocation": "13063:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 2078,
														"src": "13055:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1995,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13055:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1997,
												"nodeType": "VariableDeclarationStatement",
												"src": "13055:20:8"
											},
											{
												"assignments": [
													1999
												],
												"declarations": [
													{
														"constant": false,
														"id": 1999,
														"mutability": "mutable",
														"name": "developmentTax",
														"nameLocation": "13094:14:8",
														"nodeType": "VariableDeclaration",
														"scope": 2078,
														"src": "13086:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1998,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13086:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2000,
												"nodeType": "VariableDeclarationStatement",
												"src": "13086:22:8"
											},
											{
												"assignments": [
													2002
												],
												"declarations": [
													{
														"constant": false,
														"id": 2002,
														"mutability": "mutable",
														"name": "sustainabilityTax",
														"nameLocation": "13127:17:8",
														"nodeType": "VariableDeclaration",
														"scope": 2078,
														"src": "13119:25:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2001,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13119:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2003,
												"nodeType": "VariableDeclarationStatement",
												"src": "13119:25:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2004,
														"name": "isBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1984,
														"src": "13160:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 2005,
														"name": "isSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1990,
														"src": "13169:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13160:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2060,
												"nodeType": "IfStatement",
												"src": "13157:566:8",
												"trueBody": {
													"id": 2059,
													"nodeType": "Block",
													"src": "13176:547:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2008,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1909,
																			"src": "13200:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 2009,
																			"name": "maxTransactionAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1453,
																			"src": "13210:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13200:30:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "43616e6e6f742062757920262073656c6c206d6f7265207468616e206d6178206c696d6974",
																		"id": 2011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13232:39:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b4c7ac7c638c2c8267bea1b1928e0f2a3c289eeb7ccb96778d2551c9fe24c37c",
																			"typeString": "literal_string \"Cannot buy & sell more than max limit\""
																		},
																		"value": "Cannot buy & sell more than max limit"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b4c7ac7c638c2c8267bea1b1928e0f2a3c289eeb7ccb96778d2551c9fe24c37c",
																			"typeString": "literal_string \"Cannot buy & sell more than max limit\""
																		}
																	],
																	"id": 2007,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "13191:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13191:81:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2013,
															"nodeType": "ExpressionStatement",
															"src": "13191:81:8"
														},
														{
															"expression": {
																"id": 2019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2014,
																	"name": "marketingTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1996,
																	"src": "13287:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2016,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1909,
																			"src": "13316:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2017,
																			"name": "marketingWalletTax",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1447,
																			"src": "13323:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2015,
																		"name": "_calculateTax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2098,
																		"src": "13302:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13302:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13287:55:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2020,
															"nodeType": "ExpressionStatement",
															"src": "13287:55:8"
														},
														{
															"expression": {
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2021,
																	"name": "developmentTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1999,
																	"src": "13357:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2023,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1909,
																			"src": "13388:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2024,
																			"name": "developmentWalletTax",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1449,
																			"src": "13395:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2022,
																		"name": "_calculateTax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2098,
																		"src": "13374:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13374:42:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13357:59:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2027,
															"nodeType": "ExpressionStatement",
															"src": "13357:59:8"
														},
														{
															"expression": {
																"id": 2033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2028,
																	"name": "sustainabilityTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2002,
																	"src": "13431:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2030,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1909,
																			"src": "13465:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2031,
																			"name": "sustainabilityWalletTax",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1451,
																			"src": "13472:23:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2029,
																		"name": "_calculateTax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2098,
																		"src": "13451:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13451:45:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13431:65:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2034,
															"nodeType": "ExpressionStatement",
															"src": "13431:65:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2038,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1905,
																		"src": "13527:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2039,
																		"name": "marketingWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1441,
																		"src": "13535:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2040,
																		"name": "marketingTax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "13552:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2035,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "13513:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_Trabajo24Token_$2099_$",
																			"typeString": "type(contract super Trabajo24Token)"
																		}
																	},
																	"id": 2037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13519:7:8",
																	"memberName": "_update",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 864,
																	"src": "13513:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13513:52:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2042,
															"nodeType": "ExpressionStatement",
															"src": "13513:52:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2046,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1905,
																		"src": "13593:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2047,
																		"name": "developmentWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1443,
																		"src": "13601:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2048,
																		"name": "developmentTax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1999,
																		"src": "13620:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2043,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "13579:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_Trabajo24Token_$2099_$",
																			"typeString": "type(contract super Trabajo24Token)"
																		}
																	},
																	"id": 2045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13585:7:8",
																	"memberName": "_update",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 864,
																	"src": "13579:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13579:56:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2050,
															"nodeType": "ExpressionStatement",
															"src": "13579:56:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2054,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1905,
																		"src": "13663:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2055,
																		"name": "sustainabilityWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1445,
																		"src": "13671:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2056,
																		"name": "sustainabilityTax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2002,
																		"src": "13693:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2051,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "13649:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_Trabajo24Token_$2099_$",
																			"typeString": "type(contract super Trabajo24Token)"
																		}
																	},
																	"id": 2053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13655:7:8",
																	"memberName": "_update",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 864,
																	"src": "13649:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13649:62:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2058,
															"nodeType": "ExpressionStatement",
															"src": "13649:62:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2061,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "13736:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2062,
																		"name": "marketingTax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "13747:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2063,
																		"name": "developmentTax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1999,
																		"src": "13762:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13747:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2065,
																	"name": "sustainabilityTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2002,
																	"src": "13779:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13747:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2067,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "13746:51:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13736:61:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2069,
												"nodeType": "ExpressionStatement",
												"src": "13736:61:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2073,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "13823:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2074,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "13831:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2075,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "13842:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2070,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "13809:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Trabajo24Token_$2099_$",
																"typeString": "type(contract super Trabajo24Token)"
															}
														},
														"id": 2072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13815:7:8",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 864,
														"src": "13809:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13809:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2077,
												"nodeType": "ExpressionStatement",
												"src": "13809:40:8"
											}
										]
									},
									"documentation": {
										"id": 1903,
										"nodeType": "StructuredDocumentation",
										"src": "11698:554:8",
										"text": " @dev Internal function for transferring tokens from one address to another.\n If the sender, recipient, or token contract itself is the owner, it performs a regular transfer.\n If the transfer involves buy or sell on Uniswap, a marketing tax is applied before transferring tokens.\n Emits Transfer events for both the marketing tax and the token transfer.\n @param sender The address of the sender.\n @param recipient The address of the recipient.\n @param amount The amount of tokens to transfer."
									},
									"id": 2079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "12267:7:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1911,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12335:8:8"
									},
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "12283:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "12275:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12275:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "12299:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "12291:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12291:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12318:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "12310:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12310:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12274:51:8"
									},
									"returnParameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12343:0:8"
									},
									"scope": 2099,
									"src": "12258:1601:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2097,
										"nodeType": "Block",
										"src": "14466:60:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2089,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2082,
															"src": "14484:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"id": 2090,
																	"name": "taxPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2084,
																	"src": "14494:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2091,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14493:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14484:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"hexValue": "3130303030",
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14512:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															}
														],
														"id": 2094,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14511:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														}
													},
													"src": "14484:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2088,
												"id": 2096,
												"nodeType": "Return",
												"src": "14477:41:8"
											}
										]
									},
									"documentation": {
										"id": 2080,
										"nodeType": "StructuredDocumentation",
										"src": "13871:495:8",
										"text": " @dev Calculates the tax amount based on a given tax percentage.\n This internal function computes the tax to be applied on a specified amount based on a tax percentage.\n The tax percentage is assumed to be given in basis points (i.e., 100 basis points = 1%).\n @param amount The total amount on which tax is to be calculated.\n @param taxPercentage The tax percentage to be applied, given in basis points.\n @return uint256 The calculated tax amount."
									},
									"id": 2098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateTax",
									"nameLocation": "14381:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14403:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "14395:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14395:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "taxPercentage",
												"nameLocation": "14419:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "14411:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14411:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14394:39:8"
									},
									"returnParameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "14457:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14457:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14456:9:8"
									},
									"scope": 2099,
									"src": "14372:154:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2100,
							"src": "2426:12103:8",
							"usedErrors": [
								30,
								35,
								211,
								214,
								1185,
								1190,
								1195,
								1204,
								1209,
								1214
							],
							"usedEvents": [
								41,
								219,
								1322,
								1331,
								1474,
								1478,
								1482,
								1486,
								1490,
								1494,
								1498
							]
						}
					],
					"src": "1961:12570:8"
				},
				"id": 8
			},
			"Token/IUniswapV2Factory.sol": {
				"ast": {
					"absolutePath": "Token/IUniswapV2Factory.sol",
					"exportedSymbols": {
						"IUniswapV2Factory": [
							2162
						]
					},
					"id": 2163,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2101,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2162,
							"linearizedBaseContracts": [
								2162
							],
							"name": "IUniswapV2Factory",
							"nameLocation": "69:17:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
									"id": 2111,
									"name": "PairCreated",
									"nameLocation": "99:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "127:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "111:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "111:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2105,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "151:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "135:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "167:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "159:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "159:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2109,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "173:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2108,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "173:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "110:68:9"
									},
									"src": "93:86:9"
								},
								{
									"functionSelector": "017e7e58",
									"id": 2116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nameLocation": "194:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "199:2:9"
									},
									"returnParameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "225:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "225:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "224:9:9"
									},
									"scope": 2162,
									"src": "185:49:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 2121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nameLocation": "248:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "259:2:9"
									},
									"returnParameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "285:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "285:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "284:9:9"
									},
									"scope": 2162,
									"src": "239:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 2130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nameLocation": "309:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "325:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "317:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "317:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "341:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "333:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "316:32:9"
									},
									"returnParameters": {
										"id": 2129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "380:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "372:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "372:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "371:14:9"
									},
									"scope": 2162,
									"src": "300:86:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 2137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nameLocation": "400:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "409:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "409:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:6:9"
									},
									"returnParameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "446:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2137,
												"src": "438:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:14:9"
									},
									"scope": 2162,
									"src": "391:61:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 2142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nameLocation": "466:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "480:2:9"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "506:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "506:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "505:6:9"
									},
									"scope": 2162,
									"src": "457:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 2151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "527:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "546:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "538:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "562:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "554:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:32:9"
									},
									"returnParameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "596:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "588:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:14:9"
									},
									"scope": 2162,
									"src": "518:84:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f46901ed",
									"id": 2156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nameLocation": "617:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "626:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "625:9:9"
									},
									"returnParameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "643:0:9"
									},
									"scope": 2162,
									"src": "608:36:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a2e74af6",
									"id": 2161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nameLocation": "658:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "673:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:9:9"
									},
									"returnParameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:9"
									},
									"scope": 2162,
									"src": "649:42:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2163,
							"src": "59:634:9",
							"usedErrors": [],
							"usedEvents": [
								2111
							]
						}
					],
					"src": "33:660:9"
				},
				"id": 9
			},
			"Token/IUniswapV2Pair.sol": {
				"ast": {
					"absolutePath": "Token/IUniswapV2Pair.sol",
					"exportedSymbols": {
						"IUniswapV2Pair": [
							2404
						]
					},
					"id": 2405,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2164,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Pair",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2404,
							"linearizedBaseContracts": [
								2404
							],
							"name": "IUniswapV2Pair",
							"nameLocation": "69:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2172,
									"name": "Approval",
									"nameLocation": "96:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "121:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "105:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "105:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "144:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "128:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "128:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "158:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "153:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "153:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "104:60:10"
									},
									"src": "90:75:10"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2180,
									"name": "Transfer",
									"nameLocation": "176:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "201:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "185:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2176,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "223:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "207:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2178,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "232:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "227:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2177,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "227:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "184:54:10"
									},
									"src": "170:69:10"
								},
								{
									"functionSelector": "06fdde03",
									"id": 2185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "254:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "258:2:10"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "284:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2182,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "284:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "283:15:10"
									},
									"scope": 2404,
									"src": "245:54:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 2190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "313:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "319:2:10"
									},
									"returnParameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "345:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2187,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "345:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "344:15:10"
									},
									"scope": 2404,
									"src": "304:56:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 2195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "374:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "382:2:10"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "408:5:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2192,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "408:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:7:10"
									},
									"scope": 2404,
									"src": "365:50:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 2200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "429:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "440:2:10"
									},
									"returnParameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "466:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2197,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "466:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "465:6:10"
									},
									"scope": 2404,
									"src": "420:52:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 2207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "486:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "504:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "496:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "496:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:15:10"
									},
									"returnParameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "534:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2204,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "534:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:6:10"
									},
									"scope": 2404,
									"src": "477:63:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 2216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "554:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "572:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "564:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "564:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "587:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "579:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "579:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "563:32:10"
									},
									"returnParameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "619:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "619:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "618:6:10"
									},
									"scope": 2404,
									"src": "545:80:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 2225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "640:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "656:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "648:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "670:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "665:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2219,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "665:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "647:29:10"
									},
									"returnParameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "695:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "695:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:6:10"
									},
									"scope": 2404,
									"src": "631:70:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 2234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "715:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "732:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "724:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "741:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "736:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2228,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "736:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "723:24:10"
									},
									"returnParameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "766:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2231,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "766:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "765:6:10"
									},
									"scope": 2404,
									"src": "706:66:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 2245,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "786:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "807:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "799:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "821:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "813:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "830:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "825:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2239,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "825:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:38:10"
									},
									"returnParameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "855:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:10"
									},
									"scope": 2404,
									"src": "777:84:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 2250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "876:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:10"
									},
									"returnParameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "918:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2247,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "917:9:10"
									},
									"scope": 2404,
									"src": "867:60:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 2255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "941:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "956:2:10"
									},
									"returnParameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "982:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2252,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:10"
									},
									"scope": 2404,
									"src": "932:59:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 2262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1005:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1020:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "1012:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:15:10"
									},
									"returnParameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "1050:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2259,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1050:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1049:6:10"
									},
									"scope": 2404,
									"src": "996:60:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 2279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1071:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "1078:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "1093:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1115:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "1110:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2267,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1110:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1127:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "1122:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1122:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1143:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "1137:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2271,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1137:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1154:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "1146:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2273,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1165:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "1157:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2275,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:90:10"
									},
									"returnParameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1176:0:10"
									},
									"scope": 2404,
									"src": "1062:115:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f",
									"id": 2287,
									"name": "Mint",
									"nameLocation": "1189:4:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1210:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "1194:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1194:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1223:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "1218:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2282,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1218:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2285,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1237:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "1232:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2284,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1232:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1193:52:10"
									},
									"src": "1183:63:10"
								},
								{
									"anonymous": false,
									"eventSelector": "dccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496",
									"id": 2297,
									"name": "Burn",
									"nameLocation": "1257:4:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1278:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "1262:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2291,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1291:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "1286:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2290,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1286:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2293,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1305:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "1300:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2292,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1300:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1330:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "1314:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1314:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:72:10"
									},
									"src": "1251:83:10"
								},
								{
									"anonymous": false,
									"eventSelector": "d78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822",
									"id": 2311,
									"name": "Swap",
									"nameLocation": "1345:4:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1375:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "1359:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1359:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2301,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nameLocation": "1396:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "1391:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2300,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1391:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2303,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nameLocation": "1420:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "1415:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2302,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1415:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2305,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "1444:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "1439:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2304,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1439:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2307,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "1469:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "1464:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2306,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1464:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2309,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1505:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2311,
												"src": "1489:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1489:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1349:164:10"
									},
									"src": "1339:175:10"
								},
								{
									"anonymous": false,
									"eventSelector": "1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1",
									"id": 2317,
									"name": "Sync",
									"nameLocation": "1525:4:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2313,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1538:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "1530:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2312,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1530:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2315,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1556:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "1548:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2314,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1529:36:10"
									},
									"src": "1519:47:10"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 2322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nameLocation": "1581:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1598:2:10"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "1624:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1624:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1623:6:10"
									},
									"scope": 2404,
									"src": "1572:58:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 2327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "1644:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1651:2:10"
									},
									"returnParameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "1677:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1677:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1676:9:10"
									},
									"scope": 2404,
									"src": "1635:51:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 2332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "1700:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1706:2:10"
									},
									"returnParameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "1732:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1732:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1731:9:10"
									},
									"scope": 2404,
									"src": "1691:50:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 2337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "1755:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1761:2:10"
									},
									"returnParameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2337,
												"src": "1787:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1787:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1786:9:10"
									},
									"scope": 2404,
									"src": "1746:50:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 2346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "1810:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1821:2:10"
									},
									"returnParameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "1855:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "1847:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2339,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1847:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "1873:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "1865:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2341,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1865:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nameLocation": "1890:18:10",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "1883:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2343,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1883:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1846:63:10"
									},
									"scope": 2404,
									"src": "1801:109:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 2351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nameLocation": "1924:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1944:2:10"
									},
									"returnParameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "1970:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2348,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1970:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1969:6:10"
									},
									"scope": 2404,
									"src": "1915:61:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 2356,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nameLocation": "1990:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2010:2:10"
									},
									"returnParameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2356,
												"src": "2036:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2353,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2036:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2035:6:10"
									},
									"scope": 2404,
									"src": "1981:61:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7464fc3d",
									"id": 2361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nameLocation": "2056:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2061:2:10"
									},
									"returnParameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "2087:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2358,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2086:6:10"
									},
									"scope": 2404,
									"src": "2047:46:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 2368,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "2108:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2121:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "2113:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2113:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2112:12:10"
									},
									"returnParameters": {
										"id": 2367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2148:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "2143:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2365,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2143:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2142:16:10"
									},
									"scope": 2404,
									"src": "2099:60:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 2377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2173:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2186:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "2178:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2178:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2177:12:10"
									},
									"returnParameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2213:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "2208:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2372,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2208:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2227:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "2222:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2374,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2222:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:28:10"
									},
									"scope": 2404,
									"src": "2164:72:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 2388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "2250:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "2260:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "2255:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2378,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2255:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "2277:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "2272:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2380,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2272:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2297:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "2289:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2289:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2316:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "2301:19:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2384,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2301:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2254:67:10"
									},
									"returnParameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2330:0:10"
									},
									"scope": 2404,
									"src": "2241:90:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 2393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nameLocation": "2345:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2358:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "2350:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2350:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2349:12:10"
									},
									"returnParameters": {
										"id": 2392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2370:0:10"
									},
									"scope": 2404,
									"src": "2336:35:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 2396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nameLocation": "2385:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2389:2:10"
									},
									"returnParameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2400:0:10"
									},
									"scope": 2404,
									"src": "2376:25:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "485cc955",
									"id": 2403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "2416:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "2427:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "2436:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2436:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2426:18:10"
									},
									"returnParameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2453:0:10"
									},
									"scope": 2404,
									"src": "2407:47:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2405,
							"src": "59:2397:10",
							"usedErrors": [],
							"usedEvents": [
								2172,
								2180,
								2287,
								2297,
								2311,
								2317
							]
						}
					],
					"src": "33:2423:10"
				},
				"id": 10
			},
			"Token/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "Token/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							2712
						]
					},
					"id": 2713,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2406,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router01",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2712,
							"linearizedBaseContracts": [
								2712
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "68:18:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 2411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "102:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "109:2:11"
									},
									"returnParameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "135:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "135:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "134:9:11"
									},
									"scope": 2712,
									"src": "93:51:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 2416,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "158:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "162:2:11"
									},
									"returnParameters": {
										"id": 2415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2416,
												"src": "188:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "188:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "187:9:11"
									},
									"scope": 2712,
									"src": "149:48:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 2441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "212:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "242:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "234:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "266:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "258:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "287:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "282:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2421,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "282:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "316:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "311:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2423,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "311:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "345:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "340:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2425,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "340:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "370:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "365:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2427,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "365:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "398:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "390:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "415:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "410:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2431,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "410:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "224:205:11"
									},
									"returnParameters": {
										"id": 2440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "453:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "448:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2434,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "448:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "467:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "462:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2436,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "462:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "481:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "476:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2438,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "476:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:44:11"
									},
									"scope": 2712,
									"src": "203:289:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 2462,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "506:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "539:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "531:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "559:18:11",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "554:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2444,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "554:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "592:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "587:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2446,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "587:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "621:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "616:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2448,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "616:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2451,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "651:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "643:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2453,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "668:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "663:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2452,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "663:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:161:11"
									},
									"returnParameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "714:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "709:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2455,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "709:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "732:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "727:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2457,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "727:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "748:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "743:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2459,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "743:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:50:11"
									},
									"scope": 2712,
									"src": "497:262:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 2483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "773:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "806:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "798:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "830:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "822:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "851:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "846:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2467,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "846:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "875:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "870:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2469,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "870:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "900:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "895:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2471,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "895:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2474,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "928:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "920:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "945:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "940:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2475,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "940:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:171:11"
									},
									"returnParameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "983:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "978:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "978:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "997:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2483,
												"src": "992:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2480,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "992:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "977:28:11"
									},
									"scope": 2712,
									"src": "764:242:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 2502,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "1020:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1056:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "1048:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1076:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "1071:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2486,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1071:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1100:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "1095:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2488,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1095:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1129:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "1124:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2490,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1124:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1159:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "1151:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2495,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1176:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "1171:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2494,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1171:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:152:11"
									},
									"returnParameters": {
										"id": 2501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2498,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1214:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "1209:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2497,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1209:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1232:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "1227:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2499,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1227:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1208:34:11"
									},
									"scope": 2712,
									"src": "1011:232:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 2531,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1257:25:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1300:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1292:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1324:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1316:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1316:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1345:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1340:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2507,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1340:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1369:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1364:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2509,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1364:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1394:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1389:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2511,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1389:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1422:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1414:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1414:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1439:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1434:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2515,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1434:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2518,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1462:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1457:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2517,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1457:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1480:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1474:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2519,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1474:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1491:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1483:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2521,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1483:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1502:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1494:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2523,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:227:11"
									},
									"returnParameters": {
										"id": 2530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1533:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1528:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1528:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1547:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1542:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2528,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1542:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1527:28:11"
									},
									"scope": 2712,
									"src": "1248:308:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 2558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1570:28:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2533,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1616:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "1608:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1608:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1636:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "1631:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2534,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1631:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2537,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1660:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "1655:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2536,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1655:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1689:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "1684:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2538,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1684:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1719:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "1711:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1736:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "1731:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1731:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1759:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "1754:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2544,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1754:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1777:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "1771:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2546,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1771:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1788:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "1780:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2548,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1799:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "1791:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2550,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1598:208:11"
									},
									"returnParameters": {
										"id": 2557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2554,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1830:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "1825:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2553,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1825:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2556,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1848:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "1843:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2555,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1843:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1824:34:11"
									},
									"scope": 2712,
									"src": "1561:298:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 2575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1873:24:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2560,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1912:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "1907:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2559,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1907:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1935:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "1930:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2561,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1930:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1976:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "1957:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2563,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1957:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2564,
													"nodeType": "ArrayTypeName",
													"src": "1957:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1998:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "1990:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1990:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2015:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "2010:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2568,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2010:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1897:132:11"
									},
									"returnParameters": {
										"id": 2574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2062:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "2048:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2571,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2048:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2572,
													"nodeType": "ArrayTypeName",
													"src": "2048:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2047:23:11"
									},
									"scope": 2712,
									"src": "1864:207:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 2592,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2085:24:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2124:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2592,
												"src": "2119:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2576,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2119:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2148:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2592,
												"src": "2143:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2578,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2143:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2188:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2592,
												"src": "2169:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2580,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2169:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2581,
													"nodeType": "ArrayTypeName",
													"src": "2169:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2584,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2210:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2592,
												"src": "2202:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2227:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2592,
												"src": "2222:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2585,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2222:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2109:132:11"
									},
									"returnParameters": {
										"id": 2591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2274:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2592,
												"src": "2260:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2588,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2260:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2589,
													"nodeType": "ArrayTypeName",
													"src": "2260:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2259:23:11"
									},
									"scope": 2712,
									"src": "2076:207:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 2607,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2297:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2324:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "2319:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2319:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2597,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2357:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "2338:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2595,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2338:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2596,
													"nodeType": "ArrayTypeName",
													"src": "2338:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2599,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2371:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "2363:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2363:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2380:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "2375:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2600,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2318:71:11"
									},
									"returnParameters": {
										"id": 2606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2454:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "2440:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2603,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2440:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2604,
													"nodeType": "ArrayTypeName",
													"src": "2440:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:23:11"
									},
									"scope": 2712,
									"src": "2288:175:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 2624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2477:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2609,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2504:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "2499:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2608,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2499:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2520:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "2515:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2610,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2515:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2552:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "2533:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2612,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2533:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2613,
													"nodeType": "ArrayTypeName",
													"src": "2533:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2566:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "2558:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2575:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "2570:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2617,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2570:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2498:86:11"
									},
									"returnParameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2633:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "2619:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2620,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2619:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2621,
													"nodeType": "ArrayTypeName",
													"src": "2619:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2618:23:11"
									},
									"scope": 2712,
									"src": "2468:174:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 2641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2656:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2683:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "2678:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2625,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2678:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2698:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "2693:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2627,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2693:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2631,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2731:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "2712:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2629,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2712:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2630,
													"nodeType": "ArrayTypeName",
													"src": "2712:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2633,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2745:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "2737:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2754:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "2749:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2634,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2749:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2677:86:11"
									},
									"returnParameters": {
										"id": 2640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2812:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2641,
												"src": "2798:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2637,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2798:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2638,
													"nodeType": "ArrayTypeName",
													"src": "2798:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2797:23:11"
									},
									"scope": 2712,
									"src": "2647:174:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 2656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2835:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2862:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "2857:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2642,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2857:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2892:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "2873:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2644,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2873:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2645,
													"nodeType": "ArrayTypeName",
													"src": "2873:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2648,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2906:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "2898:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2898:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2915:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "2910:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2649,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2910:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2856:68:11"
									},
									"returnParameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2989:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "2975:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2652,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2975:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2653,
													"nodeType": "ArrayTypeName",
													"src": "2975:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2974:23:11"
									},
									"scope": 2712,
									"src": "2826:172:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 2667,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "3013:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "3024:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2667,
												"src": "3019:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2657,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3019:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2660,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3038:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2667,
												"src": "3033:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2659,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3033:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2662,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3053:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2667,
												"src": "3048:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2661,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3048:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3018:44:11"
									},
									"returnParameters": {
										"id": 2666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2665,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3091:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2667,
												"src": "3086:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2664,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3086:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3085:14:11"
									},
									"scope": 2712,
									"src": "3004:96:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 2678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3114:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3132:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "3127:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2668,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3127:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2671,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3147:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "3142:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2670,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3142:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2673,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3163:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "3158:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2672,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3158:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3126:48:11"
									},
									"returnParameters": {
										"id": 2677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2676,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3203:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "3198:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2675,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3198:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3197:16:11"
									},
									"scope": 2712,
									"src": "3105:109:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 2689,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3228:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3245:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2689,
												"src": "3240:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2679,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3261:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2689,
												"src": "3256:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2681,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3256:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2684,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3277:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2689,
												"src": "3272:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2683,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3272:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3239:49:11"
									},
									"returnParameters": {
										"id": 2688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2687,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3317:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2689,
												"src": "3312:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2686,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3312:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3311:15:11"
									},
									"scope": 2712,
									"src": "3219:108:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 2700,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3341:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3360:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "3355:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2690,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3355:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3389:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "3370:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2692,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3370:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2693,
													"nodeType": "ArrayTypeName",
													"src": "3370:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3354:40:11"
									},
									"returnParameters": {
										"id": 2699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2698,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3432:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "3418:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2696,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3418:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2697,
													"nodeType": "ArrayTypeName",
													"src": "3418:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3417:23:11"
									},
									"scope": 2712,
									"src": "3332:109:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 2711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3455:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2702,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3473:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "3468:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2701,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3468:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3503:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "3484:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2703,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3484:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2704,
													"nodeType": "ArrayTypeName",
													"src": "3484:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3467:41:11"
									},
									"returnParameters": {
										"id": 2710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2709,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3546:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "3532:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2707,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3532:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2708,
													"nodeType": "ArrayTypeName",
													"src": "3532:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3531:23:11"
									},
									"scope": 2712,
									"src": "3446:109:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2713,
							"src": "58:3499:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:3524:11"
				},
				"id": 11
			},
			"Token/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "Token/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							2712
						],
						"IUniswapV2Router02": [
							2800
						]
					},
					"id": 2801,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2714,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"absolutePath": "Token/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 2715,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2801,
							"sourceUnit": 2713,
							"src": "58:34:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2716,
										"name": "IUniswapV2Router01",
										"nameLocations": [
											"127:18:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2712,
										"src": "127:18:12"
									},
									"id": 2717,
									"nodeType": "InheritanceSpecifier",
									"src": "127:18:12"
								}
							],
							"canonicalName": "IUniswapV2Router02",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2800,
							"linearizedBaseContracts": [
								2800,
								2712
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "105:18:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 2734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "161:47:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "226:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "218:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "218:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2721,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "246:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "241:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2720,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "241:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "270:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "265:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2722,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "265:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2725,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "299:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "294:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2724,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "294:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "329:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "321:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "321:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2729,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "346:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "341:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2728,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "341:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "208:152:12"
									},
									"returnParameters": {
										"id": 2733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2732,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "384:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "379:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2731,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "379:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:16:12"
									},
									"scope": 2800,
									"src": "152:243:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 2759,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "409:57:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2736,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "484:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "476:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "476:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2738,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "504:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "499:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2737,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "499:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2740,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "528:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "523:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2739,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "523:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "557:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "552:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2741,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "552:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "587:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "579:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "579:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2746,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "604:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "599:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2745,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "599:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2748,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "627:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "622:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2747,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "622:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "645:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "639:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2749,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "639:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "656:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "648:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2751,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "667:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "659:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2753,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "466:208:12"
									},
									"returnParameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "698:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "693:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2756,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "693:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:16:12"
									},
									"scope": 2800,
									"src": "400:309:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 2773,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "724:53:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2761,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "792:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "787:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2760,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "787:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2763,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "815:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "810:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2762,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "810:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "856:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "837:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2764,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "837:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2765,
													"nodeType": "ArrayTypeName",
													"src": "837:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "878:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "870:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2770,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "895:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "890:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2769,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "890:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:132:12"
									},
									"returnParameters": {
										"id": 2772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "918:0:12"
									},
									"scope": 2800,
									"src": "715:204:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 2785,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "933:50:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "998:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2785,
												"src": "993:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2774,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "993:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1039:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2785,
												"src": "1020:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2776,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1020:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2777,
													"nodeType": "ArrayTypeName",
													"src": "1020:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2780,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2785,
												"src": "1053:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2782,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1078:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2785,
												"src": "1073:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2781,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1073:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:109:12"
									},
									"returnParameters": {
										"id": 2784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1109:0:12"
									},
									"scope": 2800,
									"src": "924:186:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 2799,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1124:50:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1189:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2799,
												"src": "1184:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2786,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1184:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1212:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2799,
												"src": "1207:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2788,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1207:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2792,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1253:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2799,
												"src": "1234:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2790,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1234:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2791,
													"nodeType": "ArrayTypeName",
													"src": "1234:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2794,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1275:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2799,
												"src": "1267:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1292:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2799,
												"src": "1287:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2795,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1287:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:132:12"
									},
									"returnParameters": {
										"id": 2798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1315:0:12"
									},
									"scope": 2800,
									"src": "1115:201:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2801,
							"src": "95:1223:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1285:12"
				},
				"id": 12
			}
		}
	}
}