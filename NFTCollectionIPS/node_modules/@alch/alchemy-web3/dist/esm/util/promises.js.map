{"version":3,"file":"promises.js","sourceRoot":"","sources":["../../../src/util/promises.ts"],"names":[],"mappings":";AAEA;;;GAGG;AACH,MAAM,UAAU,SAAS,CACvB,CAAsC;IAEtC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QACjC,OAAA,CAAC,CAAC,UAAC,KAAK,EAAE,MAAM;YACd,IAAI,KAAK,IAAI,IAAI,EAAE;gBACjB,MAAM,CAAC,KAAK,CAAC,CAAC;aACf;iBAAM;gBACL,OAAO,CAAC,MAAO,CAAC,CAAC;aAClB;QACH,CAAC,CAAC;IANF,CAME,CACH,CAAC;AACJ,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,YAAY,CAC1B,OAAmB,EACnB,QAAyB;IAEzB,OAAO,CAAC,IAAI,CACV,UAAC,MAAM;QACL,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACzB,CAAC,EACD,UAAC,KAAK;QACJ,QAAQ,CAAC,KAAK,CAAC,CAAC;IAClB,CAAC,CACF,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,KAAK,CAAC,EAAU;IAC9B,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,IAAK,OAAA,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAAC;AAC3D,CAAC;AAED,MAAM,UAAU,WAAW,CAAI,OAAmB,EAAE,EAAU;IAC5D,OAAO,OAAO,CAAC,IAAI,CAAC;QAClB,OAAO;QACP,IAAI,OAAO,CAAI,UAAC,CAAC,EAAE,MAAM;YACvB,OAAA,UAAU,CAAC,cAAM,OAAA,MAAM,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,EAA5B,CAA4B,EAAE,EAAE,CAAC;QAAlD,CAAkD,CACnD;KACF,CAAC,CAAC;AACL,CAAC;AAED,IAAM,eAAe,GAAG,IAAI,CAAC;AAC7B,IAAM,oBAAoB,GAAG,CAAC,CAAC;AAC/B,IAAM,eAAe,GAAG,KAAK,CAAC;AAE9B,MAAM,UAAgB,kBAAkB,CACtC,CAAmB,EACnB,UAAkB,EAClB,WAAqD;IAArD,4BAAA,EAAA,4BAAiD,OAAA,IAAI,EAAJ,CAAI;;;;;;oBAEjD,YAAY,GAAG,CAAC,CAAC;oBACjB,CAAC,GAAG,CAAC,CAAC;;;yBACH,IAAI;;;;oBAEA,qBAAM,CAAC,EAAE,EAAA;wBAAhB,sBAAO,SAAS,EAAC;;;oBAEjB,CAAC,EAAE,CAAC;oBACJ,IAAI,CAAC,IAAI,UAAU,IAAI,CAAC,WAAW,CAAC,OAAK,CAAC,EAAE;wBAC1C,MAAM,OAAK,CAAC;qBACb;oBACD,qBAAM,KAAK,CAAC,YAAY,CAAC,EAAA;;oBAAzB,SAAyB,CAAC;oBAC1B,IAAI,CAAC,WAAW,CAAC,OAAK,CAAC,EAAE;wBACvB,MAAM,OAAK,CAAC;qBACb;oBACD,YAAY;wBACV,YAAY,KAAK,CAAC;4BAChB,CAAC,CAAC,eAAe;4BACjB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,oBAAoB,GAAG,YAAY,CAAC,CAAC;;;;;;;CAG1E;AAOD,MAAM,UAAU,eAAe;IAC7B,IAAI,SAAS,GAAG,KAAK,CAAC;IACtB,OAAO,EAAE,MAAM,EAAE,cAAM,OAAA,CAAC,SAAS,GAAG,IAAI,CAAC,EAAlB,CAAkB,EAAE,WAAW,EAAE,cAAM,OAAA,SAAS,EAAT,CAAS,EAAE,CAAC;AAC5E,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,WAA0B;IACzD,IAAI,WAAW,EAAE,EAAE;QACjB,MAAM,SAAS,CAAC;KACjB;AACH,CAAC;AAED,MAAM,CAAC,IAAM,SAAS,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC","sourcesContent":["import { Web3Callback } from \"../types\";\n\n/**\n * Helper for converting functions which take a callback as their final argument\n * to functions which return a promise.\n */\nexport function promisify<T>(\n  f: (callback: Web3Callback<T>) => void,\n): Promise<T> {\n  return new Promise((resolve, reject) =>\n    f((error, result) => {\n      if (error != null) {\n        reject(error);\n      } else {\n        resolve(result!);\n      }\n    }),\n  );\n}\n\n/**\n * Helper for converting functions which return a promise to functions which\n * take a callback as their final argument.\n */\nexport function callWhenDone<T>(\n  promise: Promise<T>,\n  callback: Web3Callback<T>,\n): void {\n  promise.then(\n    (result) => {\n      callback(null, result);\n    },\n    (error) => {\n      callback(error);\n    },\n  );\n}\n\nexport function delay(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function withTimeout<T>(promise: Promise<T>, ms: number): Promise<T> {\n  return Promise.race([\n    promise,\n    new Promise<T>((_, reject) =>\n      setTimeout(() => reject(new Error(\"Timeout\")), ms),\n    ),\n  ]);\n}\n\nconst MIN_RETRY_DELAY = 1000;\nconst RETRY_BACKOFF_FACTOR = 2;\nconst MAX_RETRY_DELAY = 30000;\n\nexport async function withBackoffRetries<T>(\n  f: () => Promise<T>,\n  retryCount: number,\n  shouldRetry: (error: unknown) => boolean = () => true,\n): Promise<T> {\n  let nextWaitTime = 0;\n  let i = 0;\n  while (true) {\n    try {\n      return await f();\n    } catch (error) {\n      i++;\n      if (i >= retryCount || !shouldRetry(error)) {\n        throw error;\n      }\n      await delay(nextWaitTime);\n      if (!shouldRetry(error)) {\n        throw error;\n      }\n      nextWaitTime =\n        nextWaitTime === 0\n          ? MIN_RETRY_DELAY\n          : Math.min(MAX_RETRY_DELAY, RETRY_BACKOFF_FACTOR * nextWaitTime);\n    }\n  }\n}\n\nexport interface CancelToken {\n  cancel(): void;\n  isCancelled(): boolean;\n}\n\nexport function makeCancelToken(): CancelToken {\n  let cancelled = false;\n  return { cancel: () => (cancelled = true), isCancelled: () => cancelled };\n}\n\nexport function throwIfCancelled(isCancelled: () => boolean): void {\n  if (isCancelled()) {\n    throw CANCELLED;\n  }\n}\n\nexport const CANCELLED = new Error(\"Cancelled\");\n"]}