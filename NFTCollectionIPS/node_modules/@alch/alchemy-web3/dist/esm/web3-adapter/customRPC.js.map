{"version":3,"file":"customRPC.js","sourceRoot":"","sources":["../../../src/web3-adapter/customRPC.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,kBAAkB,CAAC;AAUtC,IAAM,QAAQ,GAAQ,MAAM,CAAC;AAE7B;;;GAGG;AACH,MAAM,UAAU,oBAAoB,CAAC,IAAS;IAC5C,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,UAAU,IAAiB;QAC9C,IAAM,SAAS,GAAG,IAAI,QAAQ,CAAC;YAC7B,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC;YACxB,cAAc,EAAE,IAAI,CAAC,cAAc,IAAI,IAAI;YAC3C,eAAe,EAAE,IAAI,CAAC,eAAe,IAAI,IAAI;SAC9C,CAAC,CAAC;QACH,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC/B,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnE,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import Method from \"web3-core-method\";\n\ninterface PatchParams {\n  name: string;\n  call: string;\n  params: [any];\n  inputFormatter: any;\n  outputFormatter: any;\n}\n\nconst MethodFn: any = Method;\n\n/**\n * Private method to enable adding custom RPC calls to the web3 object. This\n * allows the addition of custom endpoints to the web3 object.\n */\nexport function patchEnableCustomRPC(web3: any): void {\n  web3.eth.customRPC = function (opts: PatchParams) {\n    const newMethod = new MethodFn({\n      name: opts.name,\n      call: opts.call,\n      params: opts.params || 0,\n      inputFormatter: opts.inputFormatter || null,\n      outputFormatter: opts.outputFormatter || null,\n    });\n    newMethod.attachToObject(this);\n    newMethod.setRequestManager(this._requestManager, this.accounts);\n  };\n}\n"]}