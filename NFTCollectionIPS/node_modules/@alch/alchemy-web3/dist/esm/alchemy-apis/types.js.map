{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/alchemy-apis/types.ts"],"names":[],"mappings":"AA+CA,MAAM,CAAN,IAAY,sBAQX;AARD,WAAY,sBAAsB;IAChC,+CAAqB,CAAA;IACrB,+CAAqB,CAAA;IACrB,yCAAe,CAAA;IACf,yCAAe,CAAA;IACf,2CAAiB,CAAA;IACjB,6CAAmB,CAAA;IACnB,mDAAyB,CAAA;AAC3B,CAAC,EARW,sBAAsB,KAAtB,sBAAsB,QAQjC;AAED,MAAM,CAAN,IAAY,mBAGX;AAHD,WAAY,mBAAmB;IAC7B,wCAAiB,CAAA;IACjB,0CAAmB,CAAA;AACrB,CAAC,EAHW,mBAAmB,KAAnB,mBAAmB,QAG9B;AAiGD,MAAM,CAAN,IAAY,UAEX;AAFD,WAAY,UAAU;IACpB,2BAAa,CAAA;AACf,CAAC,EAFW,UAAU,KAAV,UAAU,QAErB","sourcesContent":["export interface TokenAllowanceParams {\n  contract: string;\n  owner: string;\n  spender: string;\n}\n\nexport type TokenAllowanceResponse = string;\n\nexport interface TokenBalancesResponse {\n  address: string;\n  tokenBalances: TokenBalance[];\n}\n\nexport type TokenBalance = TokenBalanceSuccess | TokenBalanceFailure;\n\nexport interface TokenBalanceSuccess {\n  contractAddress: string;\n  tokenBalance: string;\n  error: null;\n}\n\nexport interface TokenBalanceFailure {\n  contractAddress: string;\n  tokenBalance: null;\n  error: string;\n}\n\nexport interface TokenMetadataResponse {\n  decimals: number | null;\n  logo: string | null;\n  name: string | null;\n  symbol: string | null;\n}\n\nexport interface AssetTransfersParams {\n  fromBlock?: string;\n  toBlock?: string;\n  order?: AssetTransfersOrder;\n  fromAddress?: string;\n  toAddress?: string;\n  contractAddresses?: string[];\n  excludeZeroValue?: boolean;\n  maxCount?: number;\n  category: AssetTransfersCategory[];\n  pageKey?: string;\n}\n\nexport enum AssetTransfersCategory {\n  EXTERNAL = \"external\",\n  INTERNAL = \"internal\",\n  TOKEN = \"token\",\n  ERC20 = \"erc20\",\n  ERC721 = \"erc721\",\n  ERC1155 = \"erc1155\",\n  SPECIALNFT = \"specialnft\",\n}\n\nexport enum AssetTransfersOrder {\n  ASCENDING = \"asc\",\n  DESCENDING = \"desc\",\n}\n\nexport interface AssetTransfersResponse {\n  transfers: AssetTransfersResult[];\n  pageKey?: string;\n}\n\nexport interface AssetTransfersResult {\n  category: AssetTransfersCategory;\n  blockNum: string;\n  from: string;\n  to: string | null;\n  value: number | null;\n  erc721TokenId: string | null;\n  erc1155Metadata: ERC1155Metadata[] | null;\n  tokenId: string | null;\n  asset: string | null;\n  hash: string;\n  rawContract: RawContract;\n}\n\nexport interface NftMetadata extends Record<string, any> {\n  name?: string;\n  description?: string;\n  image?: string;\n  attributes?: Array<Record<string, any>>;\n}\n\nexport interface TokenUri {\n  raw: string;\n  gateway: string;\n}\n\nexport interface NftContract {\n  address: string;\n}\n\nexport interface NftId {\n  tokenId: string;\n  tokenMetadata?: NftTokenMetadata;\n}\n\nexport interface NftTokenMetadata {\n  tokenType: \"erc721\" | \"erc1155\";\n}\n\nexport interface GetNftMetadataParams {\n  contractAddress: string;\n  tokenId: string;\n  tokenType?: \"erc721\" | \"erc1155\";\n}\n\nexport type GetNftMetadataResponse = Nft;\n\nexport interface Nft extends BaseNft {\n  title: string;\n  description: string;\n  tokenUri?: TokenUri;\n  media?: TokenUri[];\n  metadata?: NftMetadata;\n  timeLastUpdated: string;\n  error?: string;\n}\n\nexport interface BaseNft {\n  contract: NftContract;\n  id: NftId;\n  balance: string;\n}\n\nexport interface GetNftsParams {\n  owner: string;\n  pageKey?: string;\n  contractAddresses?: string[];\n  withMetadata?: boolean;\n  filters?: NftFilters[];\n}\n\nexport interface GetNftsParamsWithoutMetadata {\n  owner: string;\n  pageKey?: string;\n  contractAddresses?: string[];\n  withMetadata: false;\n}\n\nexport interface GetNftsResponse {\n  ownedNfts: Nft[];\n  pageKey?: string;\n  totalCount: number;\n}\n\nexport interface GetNftsResponseWithoutMetadata {\n  ownedNfts: BaseNft[];\n  pageKey?: string;\n  totalCount: number;\n}\n\nexport enum NftFilters {\n  SPAM = \"SPAM\",\n}\n\nexport interface TransactionReceiptsBlockNumber {\n  blockNumber: string;\n}\nexport interface TransactionReceiptsBlockHash {\n  blockHash: string;\n}\nexport type TransactionReceiptsParams =\n  | TransactionReceiptsBlockNumber\n  | TransactionReceiptsBlockHash;\n\nexport interface TransactionReceiptsResponse {\n  receipts: TransactionReceipt[] | null;\n}\n\nexport interface TransactionReceipt {\n  transactionHash: string;\n  blockHash: string;\n  blockNumber: string;\n  contractAddress: string | null;\n  cumulativeGasUsed: string;\n  effectiveGasPrice: string;\n  from: string;\n  gasUsed: string;\n  logs: Log[];\n  logsBloom: string;\n  root?: string;\n  status?: string;\n  to: string;\n  transactionIndex: string;\n  type: string;\n}\n\nexport interface Log {\n  blockHash: string;\n  address: string;\n  logIndex: string;\n  data: string;\n  removed: boolean;\n  topics: string[];\n  blockNumber: string;\n  transactionHash: string;\n  transactionIndex: string;\n}\n\nexport interface ERC1155Metadata {\n  tokenId: string;\n  value: string;\n}\n\nexport interface RawContract {\n  value: string | null;\n  address: string | null;\n  decimal: string | null;\n}\n\nexport interface PrivateTransactionPreferences {\n  fast: boolean | null;\n}\n"]}