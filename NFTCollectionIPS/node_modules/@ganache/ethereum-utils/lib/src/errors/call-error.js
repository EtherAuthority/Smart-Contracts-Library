"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CallError = void 0;
const errors_1 = require("./errors");
const coded_error_1 = require("./coded-error");
const utils_1 = require("@ganache/utils");
const utils_2 = require("@ganache/utils");
class CallError extends coded_error_1.CodedError {
    constructor(result) {
        const execResult = result.execResult;
        const error = execResult.exceptionError.error;
        let message = errors_1.VM_EXCEPTION + error;
        super(message, utils_1.JsonRpcErrorCode.INVALID_INPUT);
        coded_error_1.CodedError.captureStackTraceExtended.bind(this, message);
        this.name = this.constructor.name;
        const { returnValue } = execResult;
        const reason = coded_error_1.CodedError.createRevertReason(returnValue);
        this.message = reason ? message + " " + reason : message;
        this.data = utils_2.Data.from(returnValue).toString();
    }
}
exports.CallError = CallError;
//# sourceMappingURL=call-error.js.map