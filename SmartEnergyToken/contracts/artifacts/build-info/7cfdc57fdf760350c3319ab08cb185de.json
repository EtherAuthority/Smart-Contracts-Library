{
	"id": "7cfdc57fdf760350c3319ab08cb185de",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"SmartEnergyToken/contracts/SmartEnergyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.24;\r\n\r\n/**\r\n * @dev Standard ERC20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function _contextSuffixLength() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n}\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\r\n     * caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\r\n     * allowance mechanism. `value` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * The default value of {decimals} is 18. To change this, you should override\r\n * this function so it returns a different value.\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n */\r\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\r\n    mapping(address account => uint256) private _balances;\r\n\r\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the default value returned by this function, unless\r\n     * it's overridden.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `value`.\r\n     */\r\n    function transfer(address to, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `value`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `value`.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, value);\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _transfer(address from, address to, uint256 value) internal {\r\n        if (from == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        if (to == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\r\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\r\n     * this function.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _update(address from, address to, uint256 value) internal virtual {\r\n        if (from == address(0)) {\r\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\r\n            _totalSupply += value;\r\n        } else {\r\n            uint256 fromBalance = _balances[from];\r\n            if (fromBalance < value) {\r\n                revert ERC20InsufficientBalance(from, fromBalance, value);\r\n            }\r\n            unchecked {\r\n                // Overflow not possible: value <= fromBalance <= totalSupply.\r\n                _balances[from] = fromBalance - value;\r\n            }\r\n        }\r\n\r\n        if (to == address(0)) {\r\n            unchecked {\r\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\r\n                _totalSupply -= value;\r\n            }\r\n        } else {\r\n            unchecked {\r\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\r\n                _balances[to] += value;\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\r\n     * Relies on the `_update` mechanism\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _mint(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(address(0), account, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\r\n     * Relies on the `_update` mechanism.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead\r\n     */\r\n    function _burn(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        _update(account, address(0), value);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value) internal {\r\n        _approve(owner, spender, value, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\r\n     *\r\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\r\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\r\n     * `Approval` event during `transferFrom` operations.\r\n     *\r\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\r\n     * true using the following override:\r\n     * ```\r\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\r\n     *     super._approve(owner, spender, value, true);\r\n     * }\r\n     * ```\r\n     *\r\n     * Requirements are the same as {_approve}.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\r\n        if (owner == address(0)) {\r\n            revert ERC20InvalidApprover(address(0));\r\n        }\r\n        if (spender == address(0)) {\r\n            revert ERC20InvalidSpender(address(0));\r\n        }\r\n        _allowances[owner][spender] = value;\r\n        if (emitEvent) {\r\n            emit Approval(owner, spender, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\r\n     *\r\n     * Does not update the allowance value in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Does not emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            if (currentAllowance < value) {\r\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\r\n            }\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - value, false);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\r\n * tokens and those that they have an allowance for, in a way that can be\r\n * recognized off-chain (via event analysis).\r\n */\r\nabstract contract ERC20Burnable is Context, ERC20 {\r\n    /**\r\n     * @dev Destroys a `value` amount of tokens from the caller.\r\n     *\r\n     * See {ERC20-_burn}.\r\n     */\r\n    function burn(uint256 value) public virtual {\r\n        _burn(_msgSender(), value);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\r\n     * the caller's allowance.\r\n     *\r\n     * See {ERC20-_burn} and {ERC20-allowance}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have allowance for ``accounts``'s tokens of at least\r\n     * `value`.\r\n     */\r\n    function burnFrom(address account, uint256 value) public virtual {\r\n        _spendAllowance(account, _msgSender(), value);\r\n        _burn(account, value);\r\n    }\r\n}\r\n\r\ncontract SmartEnergyToken is ERC20, ERC20Burnable {\r\n    constructor() ERC20(\"Smart Energy Token\", \"SET\") {\r\n        _mint(msg.sender,500*10**9*10**decimals());\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"SmartEnergyToken/contracts/SmartEnergyToken.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SmartEnergyToken/contracts/SmartEnergyToken.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SmartEnergyToken/contracts/SmartEnergyToken.sol\":{\"keccak256\":\"0x4f7f8e1f21ae9dc91d9f71ee4623606c3a05c04b06b9c95edf80771033db4f93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c498c9e91b1485445f7fe2966b31674c0cb94d1d07ac0f05fb99280b12f98f9\",\"dweb:/ipfs/QmYs9xSA4CcH7aaKLg2zgM9omWmwMGYDweRQXES9dnapkK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SmartEnergyToken/contracts/SmartEnergyToken.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SmartEnergyToken/contracts/SmartEnergyToken.sol\":{\"keccak256\":\"0x4f7f8e1f21ae9dc91d9f71ee4623606c3a05c04b06b9c95edf80771033db4f93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c498c9e91b1485445f7fe2966b31674c0cb94d1d07ac0f05fb99280b12f98f9\",\"dweb:/ipfs/QmYs9xSA4CcH7aaKLg2zgM9omWmwMGYDweRQXES9dnapkK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 275,
								"contract": "SmartEnergyToken/contracts/SmartEnergyToken.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 281,
								"contract": "SmartEnergyToken/contracts/SmartEnergyToken.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 283,
								"contract": "SmartEnergyToken/contracts/SmartEnergyToken.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 285,
								"contract": "SmartEnergyToken/contracts/SmartEnergyToken.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 287,
								"contract": "SmartEnergyToken/contracts/SmartEnergyToken.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SmartEnergyToken/contracts/SmartEnergyToken.sol\":\"ERC20Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SmartEnergyToken/contracts/SmartEnergyToken.sol\":{\"keccak256\":\"0x4f7f8e1f21ae9dc91d9f71ee4623606c3a05c04b06b9c95edf80771033db4f93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c498c9e91b1485445f7fe2966b31674c0cb94d1d07ac0f05fb99280b12f98f9\",\"dweb:/ipfs/QmYs9xSA4CcH7aaKLg2zgM9omWmwMGYDweRQXES9dnapkK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 275,
								"contract": "SmartEnergyToken/contracts/SmartEnergyToken.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 281,
								"contract": "SmartEnergyToken/contracts/SmartEnergyToken.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 283,
								"contract": "SmartEnergyToken/contracts/SmartEnergyToken.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 285,
								"contract": "SmartEnergyToken/contracts/SmartEnergyToken.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 287,
								"contract": "SmartEnergyToken/contracts/SmartEnergyToken.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SmartEnergyToken/contracts/SmartEnergyToken.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SmartEnergyToken/contracts/SmartEnergyToken.sol\":{\"keccak256\":\"0x4f7f8e1f21ae9dc91d9f71ee4623606c3a05c04b06b9c95edf80771033db4f93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c498c9e91b1485445f7fe2966b31674c0cb94d1d07ac0f05fb99280b12f98f9\",\"dweb:/ipfs/QmYs9xSA4CcH7aaKLg2zgM9omWmwMGYDweRQXES9dnapkK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SmartEnergyToken/contracts/SmartEnergyToken.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SmartEnergyToken/contracts/SmartEnergyToken.sol\":{\"keccak256\":\"0x4f7f8e1f21ae9dc91d9f71ee4623606c3a05c04b06b9c95edf80771033db4f93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c498c9e91b1485445f7fe2966b31674c0cb94d1d07ac0f05fb99280b12f98f9\",\"dweb:/ipfs/QmYs9xSA4CcH7aaKLg2zgM9omWmwMGYDweRQXES9dnapkK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SmartEnergyToken/contracts/SmartEnergyToken.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SmartEnergyToken/contracts/SmartEnergyToken.sol\":{\"keccak256\":\"0x4f7f8e1f21ae9dc91d9f71ee4623606c3a05c04b06b9c95edf80771033db4f93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c498c9e91b1485445f7fe2966b31674c0cb94d1d07ac0f05fb99280b12f98f9\",\"dweb:/ipfs/QmYs9xSA4CcH7aaKLg2zgM9omWmwMGYDweRQXES9dnapkK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SmartEnergyToken/contracts/SmartEnergyToken.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SmartEnergyToken/contracts/SmartEnergyToken.sol\":{\"keccak256\":\"0x4f7f8e1f21ae9dc91d9f71ee4623606c3a05c04b06b9c95edf80771033db4f93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c498c9e91b1485445f7fe2966b31674c0cb94d1d07ac0f05fb99280b12f98f9\",\"dweb:/ipfs/QmYs9xSA4CcH7aaKLg2zgM9omWmwMGYDweRQXES9dnapkK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SmartEnergyToken/contracts/SmartEnergyToken.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SmartEnergyToken/contracts/SmartEnergyToken.sol\":{\"keccak256\":\"0x4f7f8e1f21ae9dc91d9f71ee4623606c3a05c04b06b9c95edf80771033db4f93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c498c9e91b1485445f7fe2966b31674c0cb94d1d07ac0f05fb99280b12f98f9\",\"dweb:/ipfs/QmYs9xSA4CcH7aaKLg2zgM9omWmwMGYDweRQXES9dnapkK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SmartEnergyToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22790:22960  contract SmartEnergyToken is ERC20, ERC20Burnable {... */\n  mstore(0x40, 0x80)\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22847:22957  constructor() ERC20(\"Smart Energy Token\", \"SET\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12298:12414  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x12\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x71, 0x29b6b0b93a1022b732b933bc902a37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xea, 0x14d155)\n  dup2\n  mstore\n  pop\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12373:12378  name_ */\n  dup2\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12365:12370  _name */\n  0x03\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12365:12378  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12389:12396  _symbol */\n  0x04\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12389:12406  _symbol = symbol_ */\n  tag_7\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12399:12406  symbol_ */\n  dup3\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12389:12396  _symbol */\n  dup3\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12389:12406  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12298:12414  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22907:22949  _mint(msg.sender,500*10**9*10**decimals()) */\n  tag_9\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22913:22923  msg.sender */\n  caller\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22938:22948  decimals() */\n  tag_10\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22938:22946  decimals */\n  shl(0x20, tag_11)\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22938:22948  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22934:22948  10**decimals() */\n  tag_12\n  swap1\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22934:22936  10 */\n  0x0a\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22934:22948  10**decimals() */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22924:22948  500*10**9*10**decimals() */\n  tag_14\n  swap1\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22924:22933  500*10**9 */\n  0x746a528800\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22924:22948  500*10**9*10**decimals() */\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22907:22912  _mint */\n  tag_16\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22907:22949  _mint(msg.sender,500*10**9*10**decimals()) */\n  jump\t// in\ntag_9:\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22790:22960  contract SmartEnergyToken is ERC20, ERC20Burnable {... */\n  jump(tag_45)\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":13437:13521  function decimals() public view virtual returns (uint8) {... */\ntag_11:\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":13511:13513  18 */\n  0x12\n  swap1\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":13437:13521  function decimals() public view virtual returns (uint8) {... */\n  jump\t// out\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18299:18512  function _mint(address account, uint256 value) internal {... */\ntag_16:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18370:18391  account == address(0) */\n  dup3\n  and\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18366:18459  if (account == address(0)) {... */\n  tag_20\n  jumpi\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18415:18447  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18444:18445  0 */\n  0x00\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18415:18447  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4529:4580   */\n  mstore\n    /* \"#utility.yul\":4502:4520   */\n  0x24\n  add\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18415:18447  ERC20InvalidReceiver(address(0)) */\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18366:18459  if (account == address(0)) {... */\ntag_20:\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18469:18504  _update(address(0), account, value) */\n  tag_23\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18485:18486  0 */\n  0x00\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18489:18496  account */\n  dup4\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18498:18503  value */\n  dup4\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18469:18476  _update */\n  tag_24\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18469:18504  _update(address(0), account, value) */\n  jump\t// in\ntag_23:\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18299:18512  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16811:17946  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_24:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16901:16919  from == address(0) */\n  dup4\n  and\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16897:17449  if (from == address(0)) {... */\n  tag_26\n  jumpi\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17055:17060  value */\n  dup1\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17039:17051  _totalSupply */\n  0x02\n  0x00\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17039:17060  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16897:17449  if (from == address(0)) {... */\n  tag_29\n  swap1\n  pop\n  jump\ntag_26:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17115:17130  _balances[from] */\n  dup4\n  and\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17093:17112  uint256 fromBalance */\n  0x00\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17115:17130  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17149:17168  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17145:17262  if (fromBalance < value) {... */\n  iszero\n  tag_30\n  jumpi\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17196:17246  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":4941:4973   */\n  dup6\n  and\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17196:17246  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4923:4974   */\n  mstore\n    /* \"#utility.yul\":4990:5008   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":4983:5017   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5033:5051   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5026:5060   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":4896:4914   */\n  0x64\n  add\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17196:17246  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_21\n    /* \"#utility.yul\":4721:5066   */\n  jump\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17145:17262  if (fromBalance < value) {... */\ntag_30:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17385:17400  _balances[from] */\n  dup5\n  and\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17385:17394  _balances */\n  0x00\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17385:17400  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17403:17422  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17385:17422  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16897:17449  if (from == address(0)) {... */\ntag_29:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17465:17481  to == address(0) */\n  dup3\n  and\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17461:17896  if (to == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17631:17643  _totalSupply */\n  0x02\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17631:17652  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17461:17896  if (to == address(0)) {... */\n  jump(tag_34)\ntag_33:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17847:17860  _balances[to] */\n  dup3\n  and\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17847:17856  _balances */\n  0x00\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17847:17860  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17847:17869  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17461:17896  if (to == address(0)) {... */\ntag_34:\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17928:17930  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17913:17938  Transfer(from, to, value) */\n  and\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17922:17926  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17913:17938  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17932:17937  value */\n  dup4\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17913:17938  Transfer(from, to, value) */\n  mload(0x40)\n  tag_35\n  swap2\n    /* \"#utility.yul\":5217:5242   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5205:5207   */\n  0x20\n    /* \"#utility.yul\":5190:5208   */\n  add\n  swap1\n    /* \"#utility.yul\":5071:5248   */\n  jump\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17913:17938  Transfer(from, to, value) */\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16811:17946  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_37:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_38:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_48:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_49:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_40:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_53\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_53:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_54:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_54)\ntag_56:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_52:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2696   */\ntag_6:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_60\n  tag_37\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1555:1652   */\n  tag_61\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_62\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_38\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_40\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1707:1711   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1764:1766   */\n  0x1f\n    /* \"#utility.yul\":1753:1767   */\n  dup4\n  gt\n    /* \"#utility.yul\":1781:1782   */\n  0x01\n    /* \"#utility.yul\":1776:2439   */\n  dup2\n  eq\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2500:2506   */\n  dup5\n    /* \"#utility.yul\":2497:2586   */\n  iszero\n  tag_65\n  jumpi\n  pop\n    /* \"#utility.yul\":2552:2571   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2546:2572   */\n  mload\n    /* \"#utility.yul\":2497:2586   */\ntag_65:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2599:2680   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1746:2690   */\n  jump(tag_63)\n    /* \"#utility.yul\":1776:2439   */\ntag_64:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1812:1832   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1930:2166   */\ntag_68:\n    /* \"#utility.yul\":1944:1951   */\n  dup3\n    /* \"#utility.yul\":1941:1942   */\n  dup2\n    /* \"#utility.yul\":1938:1952   */\n  lt\n    /* \"#utility.yul\":1930:2166   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2033:2052   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2027:2053   */\n  mload\n    /* \"#utility.yul\":2012:2054   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2125:2152   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2093:2094   */\n  0x01\n    /* \"#utility.yul\":2081:2095   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1960:1979   */\n  dup5\n  add\n    /* \"#utility.yul\":1930:2166   */\n  jump(tag_68)\ntag_70:\n    /* \"#utility.yul\":1934:1937   */\n  pop\n    /* \"#utility.yul\":2194:2200   */\n  dup6\n    /* \"#utility.yul\":2185:2192   */\n  dup3\n    /* \"#utility.yul\":2182:2201   */\n  lt\n    /* \"#utility.yul\":2179:2380   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2255:2274   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2249:2275   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2338:2339   */\n  0x03\n    /* \"#utility.yul\":2334:2348   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2350:2353   */\n  0xf8\n    /* \"#utility.yul\":2330:2354   */\n  and\n    /* \"#utility.yul\":2326:2363   */\n  shr\n    /* \"#utility.yul\":2322:2364   */\n  not\n    /* \"#utility.yul\":2307:2365   */\n  and\n    /* \"#utility.yul\":2292:2366   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2179:2380   */\ntag_71:\n  pop\n  pop\n    /* \"#utility.yul\":2426:2427   */\n  0x01\n    /* \"#utility.yul\":2417:2423   */\n  dup5\n    /* \"#utility.yul\":2414:2415   */\n  0x01\n    /* \"#utility.yul\":2410:2424   */\n  shl\n    /* \"#utility.yul\":2406:2428   */\n  add\n    /* \"#utility.yul\":2400:2404   */\n  dup6\n    /* \"#utility.yul\":2393:2429   */\n  sstore\n    /* \"#utility.yul\":1746:2690   */\ntag_63:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1351:2696   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2701:2828   */\ntag_42:\n    /* \"#utility.yul\":2762:2772   */\n  0x4e487b71\n    /* \"#utility.yul\":2757:2760   */\n  0xe0\n    /* \"#utility.yul\":2753:2773   */\n  shl\n    /* \"#utility.yul\":2750:2751   */\n  0x00\n    /* \"#utility.yul\":2743:2774   */\n  mstore\n    /* \"#utility.yul\":2793:2797   */\n  0x11\n    /* \"#utility.yul\":2790:2791   */\n  0x04\n    /* \"#utility.yul\":2783:2798   */\n  mstore\n    /* \"#utility.yul\":2817:2821   */\n  0x24\n    /* \"#utility.yul\":2814:2815   */\n  0x00\n    /* \"#utility.yul\":2807:2822   */\n  revert\n    /* \"#utility.yul\":2833:3249   */\ntag_43:\n    /* \"#utility.yul\":2922:2923   */\n  0x01\n    /* \"#utility.yul\":2959:2964   */\n  dup2\n    /* \"#utility.yul\":2922:2923   */\n  dup2\n    /* \"#utility.yul\":2973:3243   */\ntag_74:\n    /* \"#utility.yul\":2994:3001   */\n  dup1\n    /* \"#utility.yul\":2984:2992   */\n  dup6\n    /* \"#utility.yul\":2981:3002   */\n  gt\n    /* \"#utility.yul\":2973:3243   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":3053:3057   */\n  dup2\n    /* \"#utility.yul\":3049:3050   */\n  0x00\n    /* \"#utility.yul\":3045:3051   */\n  not\n    /* \"#utility.yul\":3041:3058   */\n  div\n    /* \"#utility.yul\":3035:3039   */\n  dup3\n    /* \"#utility.yul\":3032:3059   */\n  gt\n    /* \"#utility.yul\":3029:3082   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3062:3080   */\n  tag_78\n  tag_42\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3112:3119   */\n  dup1\n    /* \"#utility.yul\":3102:3110   */\n  dup6\n    /* \"#utility.yul\":3098:3120   */\n  and\n    /* \"#utility.yul\":3095:3150   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3132:3148   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3095:3150   */\ntag_79:\n    /* \"#utility.yul\":3211:3233   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3171:3186   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":2973:3243   */\n  jump(tag_74)\ntag_76:\n    /* \"#utility.yul\":2977:2980   */\n  pop\n    /* \"#utility.yul\":2833:3249   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3254:4060   */\ntag_44:\n    /* \"#utility.yul\":3303:3308   */\n  0x00\n    /* \"#utility.yul\":3333:3341   */\n  dup3\n    /* \"#utility.yul\":3323:3403   */\n  tag_81\n  jumpi\n  pop\n    /* \"#utility.yul\":3374:3375   */\n  0x01\n    /* \"#utility.yul\":3388:3393   */\n  jump(tag_80)\n    /* \"#utility.yul\":3323:3403   */\ntag_81:\n    /* \"#utility.yul\":3422:3426   */\n  dup2\n    /* \"#utility.yul\":3412:3488   */\n  tag_82\n  jumpi\n  pop\n    /* \"#utility.yul\":3459:3460   */\n  0x00\n    /* \"#utility.yul\":3473:3478   */\n  jump(tag_80)\n    /* \"#utility.yul\":3412:3488   */\ntag_82:\n    /* \"#utility.yul\":3504:3508   */\n  dup2\n    /* \"#utility.yul\":3522:3523   */\n  0x01\n    /* \"#utility.yul\":3517:3576   */\n  dup2\n  eq\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3590:3591   */\n  0x02\n    /* \"#utility.yul\":3585:3715   */\n  dup2\n  eq\n  tag_85\n  jumpi\n    /* \"#utility.yul\":3497:3715   */\n  jump(tag_83)\n    /* \"#utility.yul\":3517:3576   */\ntag_84:\n    /* \"#utility.yul\":3547:3548   */\n  0x01\n    /* \"#utility.yul\":3538:3548   */\n  swap2\n  pop\n    /* \"#utility.yul\":3561:3566   */\n  pop\n  jump(tag_80)\n    /* \"#utility.yul\":3585:3715   */\ntag_85:\n    /* \"#utility.yul\":3622:3625   */\n  0xff\n    /* \"#utility.yul\":3612:3620   */\n  dup5\n    /* \"#utility.yul\":3609:3626   */\n  gt\n    /* \"#utility.yul\":3606:3649   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3629:3647   */\n  tag_87\n  tag_42\n  jump\t// in\ntag_87:\n  pop\n  pop\n    /* \"#utility.yul\":3685:3686   */\n  0x01\n    /* \"#utility.yul\":3671:3687   */\n  dup3\n  shl\n    /* \"#utility.yul\":3700:3705   */\n  jump(tag_80)\n    /* \"#utility.yul\":3497:3715   */\ntag_83:\n  pop\n    /* \"#utility.yul\":3799:3801   */\n  0x20\n    /* \"#utility.yul\":3789:3797   */\n  dup4\n    /* \"#utility.yul\":3786:3802   */\n  lt\n    /* \"#utility.yul\":3780:3783   */\n  0x0133\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3771:3784   */\n  lt\n    /* \"#utility.yul\":3767:3803   */\n  and\n    /* \"#utility.yul\":3761:3763   */\n  0x4e\n    /* \"#utility.yul\":3751:3759   */\n  dup5\n    /* \"#utility.yul\":3748:3764   */\n  lt\n    /* \"#utility.yul\":3743:3745   */\n  0x0b\n    /* \"#utility.yul\":3737:3741   */\n  dup5\n    /* \"#utility.yul\":3734:3746   */\n  lt\n    /* \"#utility.yul\":3730:3765   */\n  and\n    /* \"#utility.yul\":3727:3804   */\n  or\n    /* \"#utility.yul\":3724:3883   */\n  iszero\n  tag_88\n  jumpi\n  pop\n    /* \"#utility.yul\":3836:3855   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":3868:3873   */\n  jump(tag_80)\n    /* \"#utility.yul\":3724:3883   */\ntag_88:\n    /* \"#utility.yul\":3915:3949   */\n  tag_89\n    /* \"#utility.yul\":3940:3948   */\n  dup4\n    /* \"#utility.yul\":3934:3938   */\n  dup4\n    /* \"#utility.yul\":3915:3949   */\n  tag_43\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3985:3991   */\n  dup1\n    /* \"#utility.yul\":3981:3982   */\n  0x00\n    /* \"#utility.yul\":3977:3983   */\n  not\n    /* \"#utility.yul\":3973:3992   */\n  div\n    /* \"#utility.yul\":3964:3971   */\n  dup3\n    /* \"#utility.yul\":3961:3993   */\n  gt\n    /* \"#utility.yul\":3958:4016   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":3996:4014   */\n  tag_91\n  tag_42\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4034:4054   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":3254:4060   */\ntag_80:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4065:4205   */\ntag_13:\n    /* \"#utility.yul\":4123:4128   */\n  0x00\n    /* \"#utility.yul\":4152:4199   */\n  tag_93\n    /* \"#utility.yul\":4193:4197   */\n  0xff\n    /* \"#utility.yul\":4183:4191   */\n  dup5\n    /* \"#utility.yul\":4179:4198   */\n  and\n    /* \"#utility.yul\":4173:4177   */\n  dup4\n    /* \"#utility.yul\":4152:4199   */\n  tag_44\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4143:4199   */\n  swap4\n    /* \"#utility.yul\":4065:4205   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4210:4378   */\ntag_15:\n    /* \"#utility.yul\":4283:4292   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4314:4323   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4331:4346   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4325:4347   */\n  dup5\n  eq\n    /* \"#utility.yul\":4311:4348   */\n  or\n    /* \"#utility.yul\":4301:4372   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":4352:4370   */\n  tag_80\n  tag_42\n  jump\t// in\n    /* \"#utility.yul\":4591:4716   */\ntag_28:\n    /* \"#utility.yul\":4656:4665   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4677:4687   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4674:4710   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":4690:4708   */\n  tag_80\n  tag_42\n  jump\t// in\n    /* \"#utility.yul\":5071:5248   */\ntag_45:\n    /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22790:22960  contract SmartEnergyToken is ERC20, ERC20Burnable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22790:22960  contract SmartEnergyToken is ERC20, ERC20Burnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x42966c68\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12484:12575  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14777:14967  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14777:14967  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":13586:13685  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":13665:13677  _totalSupply */\n      sload(0x02)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":13586:13685  function totalSupply() public view virtual returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":13586:13685  function totalSupply() public view virtual returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":15545:15794  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":13437:13521  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":13511:13513  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":13437:13521  function decimals() public view virtual returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22204:22293  function burn(uint256 value) public virtual {... */\n    tag_8:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":13748:13866  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":13840:13858  _balances[account] */\n      and\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":13813:13820  uint256 */\n      0x00\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":13840:13858  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":13748:13866  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22622:22783  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_10:\n      tag_38\n      tag_48\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12694:12789  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      tag_15\n      tag_51\n      jump\t// in\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14071:14253  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_54\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14316:14458  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14423:14441  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14396:14403  uint256 */\n      0x00\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14423:14441  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14423:14434  _allowances */\n      0x01\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14423:14441  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14423:14450  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14316:14458  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12484:12575  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12529:12542  string memory */\n      0x60\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12562:12567  _name */\n      0x03\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12555:12567  return _name */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12484:12575  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14777:14967  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_22:\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14850:14854  bool */\n      0x00\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":7233:7243  msg.sender */\n      caller\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14906:14937  _approve(owner, spender, value) */\n      tag_72\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":7233:7243  msg.sender */\n      dup2\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14922:14929  spender */\n      dup6\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14931:14936  value */\n      dup6\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14906:14914  _approve */\n      tag_73\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14906:14937  _approve(owner, spender, value) */\n      jump\t// in\n    tag_72:\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14955:14959  true */\n      0x01\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14948:14959  return true */\n      swap2\n      pop\n      pop\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14777:14967  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_69:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":15545:15794  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":15632:15636  bool */\n      0x00\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":7233:7243  msg.sender */\n      caller\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":15690:15727  _spendAllowance(from, spender, value) */\n      tag_77\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":15706:15710  from */\n      dup6\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":7233:7243  msg.sender */\n      dup3\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":15721:15726  value */\n      dup6\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":15690:15705  _spendAllowance */\n      tag_78\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":15690:15727  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_77:\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":15738:15764  _transfer(from, to, value) */\n      tag_79\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":15748:15752  from */\n      dup6\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":15754:15756  to */\n      dup6\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":15758:15763  value */\n      dup6\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":15738:15747  _transfer */\n      tag_80\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":15738:15764  _transfer(from, to, value) */\n      jump\t// in\n    tag_79:\n      pop\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":15782:15786  true */\n      0x01\n      swap5\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":15545:15794  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22204:22293  function burn(uint256 value) public virtual {... */\n    tag_41:\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22259:22285  _burn(_msgSender(), value) */\n      tag_83\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":7233:7243  msg.sender */\n      caller\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22279:22284  value */\n      dup3\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22259:22264  _burn */\n      tag_85\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22259:22285  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_83:\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22204:22293  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22622:22783  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_49:\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22698:22743  _spendAllowance(account, _msgSender(), value) */\n      tag_88\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22714:22721  account */\n      dup3\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":7233:7243  msg.sender */\n      caller\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22737:22742  value */\n      dup4\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22698:22713  _spendAllowance */\n      tag_78\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22698:22743  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_88:\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22754:22775  _burn(account, value) */\n      tag_90\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22760:22767  account */\n      dup3\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22769:22774  value */\n      dup3\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22754:22759  _burn */\n      tag_85\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22754:22775  _burn(account, value) */\n      jump\t// in\n    tag_90:\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":22622:22783  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12694:12789  function symbol() public view virtual returns (string memory) {... */\n    tag_51:\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12741:12754  string memory */\n      0x60\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12774:12781  _symbol */\n      0x04\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":12767:12781  return _symbol */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14071:14253  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_55:\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14140:14144  bool */\n      0x00\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":7233:7243  msg.sender */\n      caller\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14196:14223  _transfer(owner, to, value) */\n      tag_72\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":7233:7243  msg.sender */\n      dup2\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14213:14215  to */\n      dup6\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14217:14222  value */\n      dup6\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14196:14205  _transfer */\n      tag_80\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14196:14223  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":19604:19734  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_73:\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":19689:19726  _approve(owner, spender, value, true) */\n      tag_103\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":19698:19703  owner */\n      dup4\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":19705:19712  spender */\n      dup4\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":19714:19719  value */\n      dup4\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":19721:19725  true */\n      0x01\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":19689:19697  _approve */\n      tag_104\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":19689:19726  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_103:\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":19604:19734  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21320:21807  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14423:14441  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21420:21444  uint256 currentAllowance */\n      0x00\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14423:14441  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14423:14434  _allowances */\n      0x01\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14423:14441  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":14423:14450  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21487:21524  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21483:21800  if (currentAllowance != type(uint256).max) {... */\n      tag_111\n      jumpi\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21564:21569  value */\n      dup2\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21545:21561  currentAllowance */\n      dup2\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21545:21569  currentAllowance < value */\n      lt\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21541:21673  if (currentAllowance < value) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21597:21657  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3146:3178   */\n      dup5\n      and\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21597:21657  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3128:3179   */\n      mstore\n        /* \"#utility.yul\":3195:3213   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3188:3222   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3238:3256   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3231:3265   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3101:3119   */\n      0x64\n      add\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21597:21657  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21541:21673  if (currentAllowance < value) {... */\n    tag_108:\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21716:21773  _approve(owner, spender, currentAllowance - value, false) */\n      tag_111\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21725:21730  owner */\n      dup5\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21732:21739  spender */\n      dup5\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21760:21765  value */\n      dup5\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21741:21757  currentAllowance */\n      dup5\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21741:21765  currentAllowance - value */\n      sub\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21767:21772  false */\n      0x00\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21716:21724  _approve */\n      tag_104\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21716:21773  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_111:\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21409:21807  {... */\n      pop\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21320:21807  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16179:16487  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16263:16281  from == address(0) */\n      dup4\n      and\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16259:16347  if (from == address(0)) {... */\n      tag_113\n      jumpi\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16305:16335  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16332:16333  0 */\n      0x00\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16305:16335  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3422:3473   */\n      mstore\n        /* \"#utility.yul\":3395:3413   */\n      0x24\n      add\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16305:16335  ERC20InvalidSender(address(0)) */\n      tag_109\n        /* \"#utility.yul\":3276:3479   */\n      jump\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16259:16347  if (from == address(0)) {... */\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16361:16377  to == address(0) */\n      dup3\n      and\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16357:16445  if (to == address(0)) {... */\n      tag_116\n      jumpi\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16401:16433  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16430:16431  0 */\n      0x00\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16401:16433  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3422:3473   */\n      mstore\n        /* \"#utility.yul\":3395:3413   */\n      0x24\n      add\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16401:16433  ERC20InvalidReceiver(address(0)) */\n      tag_109\n        /* \"#utility.yul\":3276:3479   */\n      jump\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16357:16445  if (to == address(0)) {... */\n    tag_116:\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16455:16479  _update(from, to, value) */\n      tag_103\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16463:16467  from */\n      dup4\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16469:16471  to */\n      dup4\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16473:16478  value */\n      dup4\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16455:16462  _update */\n      tag_119\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16455:16479  _update(from, to, value) */\n      jump\t// in\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18840:19051  function _burn(address account, uint256 value) internal {... */\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18911:18932  account == address(0) */\n      dup3\n      and\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18907:18998  if (account == address(0)) {... */\n      tag_121\n      jumpi\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18956:18986  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18983:18984  0 */\n      0x00\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18956:18986  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3422:3473   */\n      mstore\n        /* \"#utility.yul\":3395:3413   */\n      0x24\n      add\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18956:18986  ERC20InvalidSender(address(0)) */\n      tag_109\n        /* \"#utility.yul\":3276:3479   */\n      jump\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":18907:18998  if (account == address(0)) {... */\n    tag_121:\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":19008:19043  _update(account, address(0), value) */\n      tag_90\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":19016:19023  account */\n      dup3\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":19033:19034  0 */\n      0x00\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":19037:19042  value */\n      dup4\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":19008:19015  _update */\n      tag_119\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":19008:19043  _update(account, address(0), value) */\n      jump\t// in\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20585:21028  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20698:20717  owner == address(0) */\n      dup5\n      and\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20694:20785  if (owner == address(0)) {... */\n      tag_125\n      jumpi\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20741:20773  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20770:20771  0 */\n      0x00\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20741:20773  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3422:3473   */\n      mstore\n        /* \"#utility.yul\":3395:3413   */\n      0x24\n      add\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20741:20773  ERC20InvalidApprover(address(0)) */\n      tag_109\n        /* \"#utility.yul\":3276:3479   */\n      jump\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20694:20785  if (owner == address(0)) {... */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20799:20820  spender == address(0) */\n      dup4\n      and\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20795:20887  if (spender == address(0)) {... */\n      tag_127\n      jumpi\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20844:20875  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20872:20873  0 */\n      0x00\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20844:20875  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3422:3473   */\n      mstore\n        /* \"#utility.yul\":3395:3413   */\n      0x24\n      add\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20844:20875  ERC20InvalidSpender(address(0)) */\n      tag_109\n        /* \"#utility.yul\":3276:3479   */\n      jump\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20795:20887  if (spender == address(0)) {... */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20897:20915  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20897:20908  _allowances */\n      0x01\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20897:20915  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20897:20924  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20897:20932  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20943:21021  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_111\n      jumpi\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20994:21001  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20978:21009  Approval(owner, spender, value) */\n      and\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20987:20992  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20978:21009  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":21003:21008  value */\n      dup5\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20978:21009  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_130\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20978:21009  Approval(owner, spender, value) */\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":20585:21028  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16811:17946  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16901:16919  from == address(0) */\n      dup4\n      and\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16897:17449  if (from == address(0)) {... */\n      tag_132\n      jumpi\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17055:17060  value */\n      dup1\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17039:17051  _totalSupply */\n      0x02\n      0x00\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17039:17060  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16897:17449  if (from == address(0)) {... */\n      tag_135\n      swap1\n      pop\n      jump\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17115:17130  _balances[from] */\n      dup4\n      and\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17093:17112  uint256 fromBalance */\n      0x00\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17115:17130  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17149:17168  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17145:17262  if (fromBalance < value) {... */\n      iszero\n      tag_136\n      jumpi\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17196:17246  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3146:3178   */\n      dup6\n      and\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17196:17246  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3128:3179   */\n      mstore\n        /* \"#utility.yul\":3195:3213   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3188:3222   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3238:3256   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3231:3265   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3101:3119   */\n      0x64\n      add\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17196:17246  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_109\n        /* \"#utility.yul\":2926:3271   */\n      jump\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17145:17262  if (fromBalance < value) {... */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17385:17400  _balances[from] */\n      dup5\n      and\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17385:17394  _balances */\n      0x00\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17385:17400  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17403:17422  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17385:17422  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16897:17449  if (from == address(0)) {... */\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17465:17481  to == address(0) */\n      dup3\n      and\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17461:17896  if (to == address(0)) {... */\n      tag_138\n      jumpi\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17631:17643  _totalSupply */\n      0x02\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17631:17652  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17461:17896  if (to == address(0)) {... */\n      jump(tag_139)\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17847:17860  _balances[to] */\n      dup3\n      and\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17847:17856  _balances */\n      0x00\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17847:17860  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17847:17869  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17461:17896  if (to == address(0)) {... */\n    tag_139:\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17928:17930  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17913:17938  Transfer(from, to, value) */\n      and\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17922:17926  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17913:17938  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17932:17937  value */\n      dup4\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17913:17938  Transfer(from, to, value) */\n      mload(0x40)\n      tag_140\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":17913:17938  Transfer(from, to, value) */\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"SmartEnergyToken/contracts/SmartEnergyToken.sol\":16811:17946  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_144:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_141:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_148:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_150:\n        /* \"#utility.yul\":913:942   */\n      tag_151\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_141\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_155:\n        /* \"#utility.yul\":1563:1592   */\n      tag_156\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_141\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_157\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2080   */\n    tag_40:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_160:\n      pop\n        /* \"#utility.yul\":2051:2074   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1900:2080   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2085:2271   */\n    tag_44:\n        /* \"#utility.yul\":2144:2150   */\n      0x00\n        /* \"#utility.yul\":2197:2199   */\n      0x20\n        /* \"#utility.yul\":2185:2194   */\n      dup3\n        /* \"#utility.yul\":2176:2183   */\n      dup5\n        /* \"#utility.yul\":2172:2195   */\n      sub\n        /* \"#utility.yul\":2168:2200   */\n      slt\n        /* \"#utility.yul\":2165:2217   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2213:2214   */\n      0x00\n        /* \"#utility.yul\":2210:2211   */\n      dup1\n        /* \"#utility.yul\":2203:2215   */\n      revert\n        /* \"#utility.yul\":2165:2217   */\n    tag_162:\n        /* \"#utility.yul\":2236:2265   */\n      tag_163\n        /* \"#utility.yul\":2255:2264   */\n      dup3\n        /* \"#utility.yul\":2236:2265   */\n      tag_141\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2226:2265   */\n      swap4\n        /* \"#utility.yul\":2085:2271   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2276:2536   */\n    tag_59:\n        /* \"#utility.yul\":2344:2350   */\n      0x00\n        /* \"#utility.yul\":2352:2358   */\n      dup1\n        /* \"#utility.yul\":2405:2407   */\n      0x40\n        /* \"#utility.yul\":2393:2402   */\n      dup4\n        /* \"#utility.yul\":2384:2391   */\n      dup6\n        /* \"#utility.yul\":2380:2403   */\n      sub\n        /* \"#utility.yul\":2376:2408   */\n      slt\n        /* \"#utility.yul\":2373:2425   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":2421:2422   */\n      0x00\n        /* \"#utility.yul\":2418:2419   */\n      dup1\n        /* \"#utility.yul\":2411:2423   */\n      revert\n        /* \"#utility.yul\":2373:2425   */\n    tag_165:\n        /* \"#utility.yul\":2444:2473   */\n      tag_166\n        /* \"#utility.yul\":2463:2472   */\n      dup4\n        /* \"#utility.yul\":2444:2473   */\n      tag_141\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2434:2473   */\n      swap2\n      pop\n        /* \"#utility.yul\":2492:2530   */\n      tag_167\n        /* \"#utility.yul\":2526:2528   */\n      0x20\n        /* \"#utility.yul\":2515:2524   */\n      dup5\n        /* \"#utility.yul\":2511:2529   */\n      add\n        /* \"#utility.yul\":2492:2530   */\n      tag_141\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2482:2530   */\n      swap1\n      pop\n        /* \"#utility.yul\":2276:2536   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2921   */\n    tag_64:\n        /* \"#utility.yul\":2620:2621   */\n      0x01\n        /* \"#utility.yul\":2616:2628   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2663:2675   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2684:2745   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2738:2742   */\n      0x7f\n        /* \"#utility.yul\":2730:2736   */\n      dup3\n        /* \"#utility.yul\":2726:2743   */\n      and\n        /* \"#utility.yul\":2716:2743   */\n      swap2\n      pop\n        /* \"#utility.yul\":2684:2745   */\n    tag_169:\n        /* \"#utility.yul\":2791:2793   */\n      0x20\n        /* \"#utility.yul\":2783:2789   */\n      dup3\n        /* \"#utility.yul\":2780:2794   */\n      lt\n        /* \"#utility.yul\":2760:2778   */\n      dup2\n        /* \"#utility.yul\":2757:2795   */\n      sub\n        /* \"#utility.yul\":2754:2915   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2837:2847   */\n      0x4e487b71\n        /* \"#utility.yul\":2832:2835   */\n      0xe0\n        /* \"#utility.yul\":2828:2848   */\n      shl\n        /* \"#utility.yul\":2825:2826   */\n      0x00\n        /* \"#utility.yul\":2818:2849   */\n      mstore\n        /* \"#utility.yul\":2872:2876   */\n      0x22\n        /* \"#utility.yul\":2869:2870   */\n      0x04\n        /* \"#utility.yul\":2862:2877   */\n      mstore\n        /* \"#utility.yul\":2900:2904   */\n      0x24\n        /* \"#utility.yul\":2897:2898   */\n      0x00\n        /* \"#utility.yul\":2890:2905   */\n      revert\n        /* \"#utility.yul\":2754:2915   */\n    tag_170:\n      pop\n        /* \"#utility.yul\":2541:2921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3484:3706   */\n    tag_134:\n        /* \"#utility.yul\":3549:3558   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3570:3580   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3567:3700   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":3622:3632   */\n      0x4e487b71\n        /* \"#utility.yul\":3617:3620   */\n      0xe0\n        /* \"#utility.yul\":3613:3633   */\n      shl\n        /* \"#utility.yul\":3610:3611   */\n      0x00\n        /* \"#utility.yul\":3603:3634   */\n      mstore\n        /* \"#utility.yul\":3657:3661   */\n      0x11\n        /* \"#utility.yul\":3654:3655   */\n      0x04\n        /* \"#utility.yul\":3647:3662   */\n      mstore\n        /* \"#utility.yul\":3685:3689   */\n      0x24\n        /* \"#utility.yul\":3682:3683   */\n      0x00\n        /* \"#utility.yul\":3675:3690   */\n      revert\n\n    auxdata: 0xa2646970667358221220fef29c5df8aece1579a6f2c79531b44f2d89f135c87af57cde204d6d781f0b7e64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_304": {
									"entryPoint": null,
									"id": 304,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_834": {
									"entryPoint": null,
									"id": 834,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_607": {
									"entryPoint": 191,
									"id": 607,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_574": {
									"entryPoint": 255,
									"id": 574,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_331": {
									"entryPoint": 186,
									"id": 331,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 636,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 920,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 558,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5250:1",
										"nodeType": "YulBlock",
										"src": "0:5250:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:1",
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:1",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:1",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:1",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nativeSrc": "66:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nativeSrc": "56:31:1",
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nativeSrc": "56:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:1",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:1",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nativeSrc": "96:15:1",
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nativeSrc": "96:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:1",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:1",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nativeSrc": "120:15:1",
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nativeSrc": "120:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nativeSrc": "201:325:1",
													"nodeType": "YulBlock",
													"src": "201:325:1",
													"statements": [
														{
															"nativeSrc": "211:22:1",
															"nodeType": "YulAssignment",
															"src": "211:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:1",
																		"nodeType": "YulLiteral",
																		"src": "225:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:1"
																},
																"nativeSrc": "221:12:1",
																"nodeType": "YulFunctionCall",
																"src": "221:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																}
															]
														},
														{
															"nativeSrc": "242:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:1",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:1"
																},
																"nativeSrc": "268:12:1",
																"nodeType": "YulFunctionCall",
																"src": "268:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:1",
																	"nodeType": "YulTypedName",
																	"src": "246:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:1",
																"nodeType": "YulBlock",
																"src": "319:31:1",
																"statements": [
																	{
																		"nativeSrc": "321:27:1",
																		"nodeType": "YulAssignment",
																		"src": "321:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:1",
																					"nodeType": "YulLiteral",
																					"src": "343:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:1"
																			},
																			"nativeSrc": "331:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:1"
																},
																"nativeSrc": "292:26:1",
																"nodeType": "YulFunctionCall",
																"src": "292:26:1"
															},
															"nativeSrc": "289:61:1",
															"nodeType": "YulIf",
															"src": "289:61:1"
														},
														{
															"body": {
																"nativeSrc": "409:111:1",
																"nodeType": "YulBlock",
																"src": "409:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:1",
																					"nodeType": "YulLiteral",
																					"src": "430:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:1",
																							"nodeType": "YulLiteral",
																							"src": "437:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:1",
																							"nodeType": "YulLiteral",
																							"src": "442:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:1"
																					},
																					"nativeSrc": "433:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:1"
																			},
																			"nativeSrc": "423:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:1"
																		},
																		"nativeSrc": "423:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:1",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:1",
																					"nodeType": "YulLiteral",
																					"src": "477:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:1"
																			},
																			"nativeSrc": "467:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:1"
																		},
																		"nativeSrc": "467:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:1",
																					"nodeType": "YulLiteral",
																					"src": "502:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:1",
																					"nodeType": "YulLiteral",
																					"src": "505:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:1"
																			},
																			"nativeSrc": "495:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:1"
																		},
																		"nativeSrc": "495:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:1",
																				"nodeType": "YulLiteral",
																				"src": "396:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:1"
																		},
																		"nativeSrc": "385:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:1"
																},
																"nativeSrc": "362:38:1",
																"nodeType": "YulFunctionCall",
																"src": "362:38:1"
															},
															"nativeSrc": "359:161:1",
															"nodeType": "YulIf",
															"src": "359:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:1",
														"nodeType": "YulTypedName",
														"src": "181:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:1",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													}
												],
												"src": "146:380:1"
											},
											{
												"body": {
													"nativeSrc": "587:65:1",
													"nodeType": "YulBlock",
													"src": "587:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:1",
																		"nodeType": "YulLiteral",
																		"src": "604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nativeSrc": "597:14:1",
																"nodeType": "YulFunctionCall",
																"src": "597:14:1"
															},
															"nativeSrc": "597:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:1"
														},
														{
															"nativeSrc": "620:26:1",
															"nodeType": "YulAssignment",
															"src": "620:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:1",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:1",
																		"nodeType": "YulLiteral",
																		"src": "641:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:1"
																},
																"nativeSrc": "628:18:1",
																"nodeType": "YulFunctionCall",
																"src": "628:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:1",
														"nodeType": "YulTypedName",
														"src": "570:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:1",
														"nodeType": "YulTypedName",
														"src": "578:4:1",
														"type": ""
													}
												],
												"src": "531:121:1"
											},
											{
												"body": {
													"nativeSrc": "738:437:1",
													"nodeType": "YulBlock",
													"src": "738:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:1",
																"nodeType": "YulBlock",
																"src": "771:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:1",
																					"nodeType": "YulLiteral",
																					"src": "792:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:1"
																			},
																			"nativeSrc": "785:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:1"
																		},
																		"nativeSrc": "785:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:1"
																	},
																	{
																		"nativeSrc": "814:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:1",
																					"nodeType": "YulLiteral",
																					"src": "836:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:1",
																					"nodeType": "YulLiteral",
																					"src": "839:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:1"
																			},
																			"nativeSrc": "826:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:1",
																				"nodeType": "YulTypedName",
																				"src": "818:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:1",
																							"nodeType": "YulLiteral",
																							"src": "890:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:1",
																									"nodeType": "YulLiteral",
																									"src": "909:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:1"
																							},
																							"nativeSrc": "893:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:1"
																					},
																					"nativeSrc": "886:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:1"
																			},
																			"nativeSrc": "876:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:1",
																				"nodeType": "YulTypedName",
																				"src": "861:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:1",
																			"nodeType": "YulBlock",
																			"src": "951:23:1",
																			"statements": [
																				{
																					"nativeSrc": "953:19:1",
																					"nodeType": "YulAssignment",
																					"src": "953:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:1",
																					"nodeType": "YulLiteral",
																					"src": "945:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:1"
																			},
																			"nativeSrc": "930:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:1"
																		},
																		"nativeSrc": "927:47:1",
																		"nodeType": "YulIf",
																		"src": "927:47:1"
																	},
																	{
																		"nativeSrc": "987:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:1"
																							},
																							"nativeSrc": "1014:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:1"
																					},
																					"nativeSrc": "1007:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:1"
																			},
																			"nativeSrc": "997:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:1",
																				"nodeType": "YulTypedName",
																				"src": "991:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:1",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:1",
																			"nodeType": "YulBlock",
																			"src": "1139:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:1"
																						},
																						"nativeSrc": "1141:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:1"
																					},
																					"nativeSrc": "1141:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:1"
																			},
																			"nativeSrc": "1086:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:1"
																		},
																		"nativeSrc": "1078:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:1",
																			"nodeType": "YulBlock",
																			"src": "1100:26:1",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:1",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:1"
																						},
																						"nativeSrc": "1111:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:1",
																			"nodeType": "YulBlock",
																			"src": "1082:3:1",
																			"statements": []
																		},
																		"src": "1078:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:1",
																		"nodeType": "YulLiteral",
																		"src": "759:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:1"
																},
																"nativeSrc": "751:11:1",
																"nodeType": "YulFunctionCall",
																"src": "751:11:1"
															},
															"nativeSrc": "748:421:1",
															"nodeType": "YulIf",
															"src": "748:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:1",
														"nodeType": "YulTypedName",
														"src": "710:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:1",
														"nodeType": "YulTypedName",
														"src": "717:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:1",
														"nodeType": "YulTypedName",
														"src": "722:10:1",
														"type": ""
													}
												],
												"src": "657:518:1"
											},
											{
												"body": {
													"nativeSrc": "1265:81:1",
													"nodeType": "YulBlock",
													"src": "1265:81:1",
													"statements": [
														{
															"nativeSrc": "1275:65:1",
															"nodeType": "YulAssignment",
															"src": "1275:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:1"
																								},
																								"nativeSrc": "1304:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:1"
																								},
																								"nativeSrc": "1317:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:1"
																						},
																						"nativeSrc": "1300:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:1"
																				},
																				"nativeSrc": "1296:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:1"
																		},
																		"nativeSrc": "1286:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:1"
																		},
																		"nativeSrc": "1328:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:1"
																},
																"nativeSrc": "1283:57:1",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:1",
														"nodeType": "YulTypedName",
														"src": "1242:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:1",
														"nodeType": "YulTypedName",
														"src": "1248:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:1",
														"nodeType": "YulTypedName",
														"src": "1256:4:1",
														"type": ""
													}
												],
												"src": "1180:166:1"
											},
											{
												"body": {
													"nativeSrc": "1447:1249:1",
													"nodeType": "YulBlock",
													"src": "1447:1249:1",
													"statements": [
														{
															"nativeSrc": "1457:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:1"
																},
																"nativeSrc": "1471:10:1",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:1",
																"nodeType": "YulBlock",
																"src": "1524:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:1"
																			},
																			"nativeSrc": "1526:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:1"
																		},
																		"nativeSrc": "1526:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:1"
																				},
																				"nativeSrc": "1508:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:1"
																		},
																		"nativeSrc": "1504:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:1"
																},
																"nativeSrc": "1493:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:1"
															},
															"nativeSrc": "1490:56:1",
															"nodeType": "YulIf",
															"src": "1490:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:1"
																				},
																				"nativeSrc": "1631:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:1"
																		},
																		"nativeSrc": "1605:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:1"
																},
																"nativeSrc": "1555:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:1"
															},
															"nativeSrc": "1555:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:1"
														},
														{
															"nativeSrc": "1661:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:1",
																"nodeType": "YulLiteral",
																"src": "1678:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1688:23:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1707:4:1",
																"nodeType": "YulLiteral",
																"src": "1707:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1692:11:1",
																	"nodeType": "YulTypedName",
																	"src": "1692:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1720:17:1",
															"nodeType": "YulAssignment",
															"src": "1720:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1733:4:1",
																"nodeType": "YulLiteral",
																"src": "1733:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1720:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1720:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1783:656:1",
																		"nodeType": "YulBlock",
																		"src": "1783:656:1",
																		"statements": [
																			{
																				"nativeSrc": "1797:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1797:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1816:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1816:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1828:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1828:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1824:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1824:3:1"
																							},
																							"nativeSrc": "1824:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1824:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1812:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:1"
																					},
																					"nativeSrc": "1812:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1812:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1801:7:1",
																						"nodeType": "YulTypedName",
																						"src": "1801:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1845:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1845:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1889:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "1889:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1859:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "1859:29:1"
																					},
																					"nativeSrc": "1859:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1859:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1849:6:1",
																						"nodeType": "YulTypedName",
																						"src": "1849:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1907:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1907:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1916:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1916:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1911:1:1",
																						"nodeType": "YulTypedName",
																						"src": "1911:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1994:172:1",
																					"nodeType": "YulBlock",
																					"src": "1994:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2019:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2019:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2037:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "2037:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2042:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "2042:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2033:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2033:3:1"
																												},
																												"nativeSrc": "2033:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2033:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2027:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "2027:5:1"
																										},
																										"nativeSrc": "2027:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2027:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2012:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2012:6:1"
																								},
																								"nativeSrc": "2012:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2012:42:1"
																							},
																							"nativeSrc": "2012:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2012:42:1"
																						},
																						{
																							"nativeSrc": "2071:24:1",
																							"nodeType": "YulAssignment",
																							"src": "2071:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2085:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2085:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2093:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2093:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2081:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2081:3:1"
																								},
																								"nativeSrc": "2081:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2081:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2071:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2071:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2112:40:1",
																							"nodeType": "YulAssignment",
																							"src": "2112:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2129:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "2129:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2140:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "2140:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2125:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2125:3:1"
																								},
																								"nativeSrc": "2125:27:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2125:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2112:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "2112:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1941:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "1941:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1944:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "1944:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1938:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "1938:2:1"
																					},
																					"nativeSrc": "1938:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1938:14:1"
																				},
																				"nativeSrc": "1930:236:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1953:28:1",
																					"nodeType": "YulBlock",
																					"src": "1953:28:1",
																					"statements": [
																						{
																							"nativeSrc": "1955:24:1",
																							"nodeType": "YulAssignment",
																							"src": "1955:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1964:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "1964:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "1967:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "1967:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1960:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1960:3:1"
																								},
																								"nativeSrc": "1960:19:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1960:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1955:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "1955:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1934:3:1",
																					"nodeType": "YulBlock",
																					"src": "1934:3:1",
																					"statements": []
																				},
																				"src": "1930:236:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "2214:166:1",
																					"nodeType": "YulBlock",
																					"src": "2214:166:1",
																					"statements": [
																						{
																							"nativeSrc": "2232:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2232:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2259:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2259:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2264:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2264:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2255:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2255:3:1"
																										},
																										"nativeSrc": "2255:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2255:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2249:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2249:5:1"
																								},
																								"nativeSrc": "2249:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2249:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2236:9:1",
																									"nodeType": "YulTypedName",
																									"src": "2236:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2299:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2299:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2311:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2311:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2338:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "2338:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2341:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "2341:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2334:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "2334:3:1"
																																		},
																																		"nativeSrc": "2334:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2334:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2350:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2350:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2330:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2330:3:1"
																																},
																																"nativeSrc": "2330:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2330:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2360:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2360:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2356:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2356:3:1"
																																},
																																"nativeSrc": "2356:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2356:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2326:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "2326:3:1"
																														},
																														"nativeSrc": "2326:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "2326:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2322:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2322:3:1"
																												},
																												"nativeSrc": "2322:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2322:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2307:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2307:3:1"
																										},
																										"nativeSrc": "2307:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2307:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2292:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2292:6:1"
																								},
																								"nativeSrc": "2292:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2292:74:1"
																							},
																							"nativeSrc": "2292:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2292:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2185:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2185:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2194:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2194:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2182:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2182:2:1"
																					},
																					"nativeSrc": "2182:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2182:19:1"
																				},
																				"nativeSrc": "2179:201:1",
																				"nodeType": "YulIf",
																				"src": "2179:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2400:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2400:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2414:1:1",
																											"nodeType": "YulLiteral",
																											"src": "2414:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2417:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "2417:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2410:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2410:3:1"
																									},
																									"nativeSrc": "2410:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2410:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2426:1:1",
																									"nodeType": "YulLiteral",
																									"src": "2426:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2406:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2406:3:1"
																							},
																							"nativeSrc": "2406:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2406:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2393:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2393:6:1"
																					},
																					"nativeSrc": "2393:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2393:36:1"
																				},
																				"nativeSrc": "2393:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2393:36:1"
																			}
																		]
																	},
																	"nativeSrc": "1776:663:1",
																	"nodeType": "YulCase",
																	"src": "1776:663:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1781:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1781:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2456:234:1",
																		"nodeType": "YulBlock",
																		"src": "2456:234:1",
																		"statements": [
																			{
																				"nativeSrc": "2470:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2470:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2483:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2483:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2474:5:1",
																						"nodeType": "YulTypedName",
																						"src": "2474:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2519:67:1",
																					"nodeType": "YulBlock",
																					"src": "2519:67:1",
																					"statements": [
																						{
																							"nativeSrc": "2537:35:1",
																							"nodeType": "YulAssignment",
																							"src": "2537:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2556:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2556:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2561:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2561:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2552:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2552:3:1"
																										},
																										"nativeSrc": "2552:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2552:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2546:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2546:5:1"
																								},
																								"nativeSrc": "2546:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2546:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2537:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2537:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2500:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2500:6:1"
																				},
																				"nativeSrc": "2497:89:1",
																				"nodeType": "YulIf",
																				"src": "2497:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2606:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2606:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2665:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2665:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2672:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2672:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2612:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "2612:52:1"
																							},
																							"nativeSrc": "2612:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2612:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2599:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2599:6:1"
																					},
																					"nativeSrc": "2599:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2599:81:1"
																				},
																				"nativeSrc": "2599:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2599:81:1"
																			}
																		]
																	},
																	"nativeSrc": "2448:242:1",
																	"nodeType": "YulCase",
																	"src": "2448:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1756:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1756:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1764:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1764:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1753:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1753:2:1"
																},
																"nativeSrc": "1753:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1753:14:1"
															},
															"nativeSrc": "1746:944:1",
															"nodeType": "YulSwitch",
															"src": "1746:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:1",
														"nodeType": "YulTypedName",
														"src": "1432:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:1",
														"nodeType": "YulTypedName",
														"src": "1438:3:1",
														"type": ""
													}
												],
												"src": "1351:1345:1"
											},
											{
												"body": {
													"nativeSrc": "2733:95:1",
													"nodeType": "YulBlock",
													"src": "2733:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2750:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2750:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2757:3:1",
																				"nodeType": "YulLiteral",
																				"src": "2757:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2762:10:1",
																				"nodeType": "YulLiteral",
																				"src": "2762:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2753:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2753:3:1"
																		},
																		"nativeSrc": "2753:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2753:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2743:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2743:6:1"
																},
																"nativeSrc": "2743:31:1",
																"nodeType": "YulFunctionCall",
																"src": "2743:31:1"
															},
															"nativeSrc": "2743:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "2743:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2790:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2793:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2793:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2783:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2783:6:1"
																},
																"nativeSrc": "2783:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2783:15:1"
															},
															"nativeSrc": "2783:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2783:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2814:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2814:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2817:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2817:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2807:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2807:6:1"
																},
																"nativeSrc": "2807:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2807:15:1"
															},
															"nativeSrc": "2807:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2807:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2701:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "2701:127:1"
											},
											{
												"body": {
													"nativeSrc": "2897:352:1",
													"nodeType": "YulBlock",
													"src": "2897:352:1",
													"statements": [
														{
															"nativeSrc": "2907:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2907:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2922:1:1",
																"nodeType": "YulLiteral",
																"src": "2922:1:1",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "2911:7:1",
																	"nodeType": "YulTypedName",
																	"src": "2911:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2932:10:1",
															"nodeType": "YulAssignment",
															"src": "2932:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2941:1:1",
																"nodeType": "YulLiteral",
																"src": "2941:1:1",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2932:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2932:5:1"
																}
															]
														},
														{
															"nativeSrc": "2951:13:1",
															"nodeType": "YulAssignment",
															"src": "2951:13:1",
															"value": {
																"name": "_base",
																"nativeSrc": "2959:5:1",
																"nodeType": "YulIdentifier",
																"src": "2959:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "2951:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2951:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3015:228:1",
																"nodeType": "YulBlock",
																"src": "3015:228:1",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "3060:22:1",
																			"nodeType": "YulBlock",
																			"src": "3060:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "3062:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "3062:16:1"
																						},
																						"nativeSrc": "3062:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3062:18:1"
																					},
																					"nativeSrc": "3062:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "3062:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3035:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "3035:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3049:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3049:1:1",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3045:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3045:3:1"
																							},
																							"nativeSrc": "3045:6:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3045:6:1"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "3053:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3053:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "3041:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3041:3:1"
																					},
																					"nativeSrc": "3041:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3041:17:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "3032:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3032:2:1"
																			},
																			"nativeSrc": "3032:27:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3032:27:1"
																		},
																		"nativeSrc": "3029:53:1",
																		"nodeType": "YulIf",
																		"src": "3029:53:1"
																	},
																	{
																		"body": {
																			"nativeSrc": "3121:29:1",
																			"nodeType": "YulBlock",
																			"src": "3121:29:1",
																			"statements": [
																				{
																					"nativeSrc": "3123:25:1",
																					"nodeType": "YulAssignment",
																					"src": "3123:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "3136:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "3136:5:1"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "3143:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "3143:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "3132:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3132:3:1"
																						},
																						"nativeSrc": "3132:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3132:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "3123:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "3123:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "3102:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "3102:8:1"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "3112:7:1",
																					"nodeType": "YulIdentifier",
																					"src": "3112:7:1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3098:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3098:3:1"
																			},
																			"nativeSrc": "3098:22:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3098:22:1"
																		},
																		"nativeSrc": "3095:55:1",
																		"nodeType": "YulIf",
																		"src": "3095:55:1"
																	},
																	{
																		"nativeSrc": "3163:23:1",
																		"nodeType": "YulAssignment",
																		"src": "3163:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3175:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "3175:4:1"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "3181:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "3181:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "3171:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3171:3:1"
																			},
																			"nativeSrc": "3171:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3171:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "3163:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "3163:4:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3199:34:1",
																		"nodeType": "YulAssignment",
																		"src": "3199:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "3215:7:1",
																					"nodeType": "YulIdentifier",
																					"src": "3215:7:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3224:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "3224:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "3211:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3211:3:1"
																			},
																			"nativeSrc": "3211:22:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3211:22:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "3199:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "3199:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "2984:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "2984:8:1"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "2994:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "2994:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2981:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2981:2:1"
																},
																"nativeSrc": "2981:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2981:21:1"
															},
															"nativeSrc": "2973:270:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3003:3:1",
																"nodeType": "YulBlock",
																"src": "3003:3:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "2977:3:1",
																"nodeType": "YulBlock",
																"src": "2977:3:1",
																"statements": []
															},
															"src": "2973:270:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "2833:416:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "2861:5:1",
														"nodeType": "YulTypedName",
														"src": "2861:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "2868:8:1",
														"nodeType": "YulTypedName",
														"src": "2868:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "2881:5:1",
														"nodeType": "YulTypedName",
														"src": "2881:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "2888:4:1",
														"nodeType": "YulTypedName",
														"src": "2888:4:1",
														"type": ""
													}
												],
												"src": "2833:416:1"
											},
											{
												"body": {
													"nativeSrc": "3313:747:1",
													"nodeType": "YulBlock",
													"src": "3313:747:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3351:52:1",
																"nodeType": "YulBlock",
																"src": "3351:52:1",
																"statements": [
																	{
																		"nativeSrc": "3365:10:1",
																		"nodeType": "YulAssignment",
																		"src": "3365:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3374:1:1",
																			"nodeType": "YulLiteral",
																			"src": "3374:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3365:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3365:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3388:5:1",
																		"nodeType": "YulLeave",
																		"src": "3388:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3333:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "3333:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3326:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:1"
																},
																"nativeSrc": "3326:16:1",
																"nodeType": "YulFunctionCall",
																"src": "3326:16:1"
															},
															"nativeSrc": "3323:80:1",
															"nodeType": "YulIf",
															"src": "3323:80:1"
														},
														{
															"body": {
																"nativeSrc": "3436:52:1",
																"nodeType": "YulBlock",
																"src": "3436:52:1",
																"statements": [
																	{
																		"nativeSrc": "3450:10:1",
																		"nodeType": "YulAssignment",
																		"src": "3450:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3459:1:1",
																			"nodeType": "YulLiteral",
																			"src": "3459:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3450:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3450:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3473:5:1",
																		"nodeType": "YulLeave",
																		"src": "3473:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3422:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3422:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3415:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3415:6:1"
																},
																"nativeSrc": "3415:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3415:12:1"
															},
															"nativeSrc": "3412:76:1",
															"nodeType": "YulIf",
															"src": "3412:76:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3524:52:1",
																		"nodeType": "YulBlock",
																		"src": "3524:52:1",
																		"statements": [
																			{
																				"nativeSrc": "3538:10:1",
																				"nodeType": "YulAssignment",
																				"src": "3538:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3547:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3547:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3538:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3538:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3561:5:1",
																				"nodeType": "YulLeave",
																				"src": "3561:5:1"
																			}
																		]
																	},
																	"nativeSrc": "3517:59:1",
																	"nodeType": "YulCase",
																	"src": "3517:59:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3522:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3522:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3592:123:1",
																		"nodeType": "YulBlock",
																		"src": "3592:123:1",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "3627:22:1",
																					"nodeType": "YulBlock",
																					"src": "3627:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "3629:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "3629:16:1"
																								},
																								"nativeSrc": "3629:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "3629:18:1"
																							},
																							"nativeSrc": "3629:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "3629:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3612:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "3612:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3622:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3622:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "3609:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "3609:2:1"
																					},
																					"nativeSrc": "3609:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3609:17:1"
																				},
																				"nativeSrc": "3606:43:1",
																				"nodeType": "YulIf",
																				"src": "3606:43:1"
																			},
																			{
																				"nativeSrc": "3662:25:1",
																				"nodeType": "YulAssignment",
																				"src": "3662:25:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3675:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "3675:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3685:1:1",
																							"nodeType": "YulLiteral",
																							"src": "3685:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3671:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3671:3:1"
																					},
																					"nativeSrc": "3671:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3671:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3662:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3662:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3700:5:1",
																				"nodeType": "YulLeave",
																				"src": "3700:5:1"
																			}
																		]
																	},
																	"nativeSrc": "3585:130:1",
																	"nodeType": "YulCase",
																	"src": "3585:130:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3590:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3590:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "3504:4:1",
																"nodeType": "YulIdentifier",
																"src": "3504:4:1"
															},
															"nativeSrc": "3497:218:1",
															"nodeType": "YulSwitch",
															"src": "3497:218:1"
														},
														{
															"body": {
																"nativeSrc": "3813:70:1",
																"nodeType": "YulBlock",
																"src": "3813:70:1",
																"statements": [
																	{
																		"nativeSrc": "3827:28:1",
																		"nodeType": "YulAssignment",
																		"src": "3827:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3840:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "3840:4:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3846:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "3846:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "3836:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3836:3:1"
																			},
																			"nativeSrc": "3836:19:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3836:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3827:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3827:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3868:5:1",
																		"nodeType": "YulLeave",
																		"src": "3868:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "3737:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "3737:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3743:2:1",
																						"nodeType": "YulLiteral",
																						"src": "3743:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3734:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "3734:2:1"
																				},
																				"nativeSrc": "3734:12:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3734:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "3751:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "3751:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3761:2:1",
																						"nodeType": "YulLiteral",
																						"src": "3761:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3748:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "3748:2:1"
																				},
																				"nativeSrc": "3748:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3748:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3730:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3730:3:1"
																		},
																		"nativeSrc": "3730:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3730:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "3774:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "3774:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3780:3:1",
																						"nodeType": "YulLiteral",
																						"src": "3780:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3771:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "3771:2:1"
																				},
																				"nativeSrc": "3771:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3771:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "3789:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "3789:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3799:2:1",
																						"nodeType": "YulLiteral",
																						"src": "3799:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3786:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "3786:2:1"
																				},
																				"nativeSrc": "3786:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3786:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3767:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:1"
																		},
																		"nativeSrc": "3767:36:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3727:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3727:2:1"
																},
																"nativeSrc": "3727:77:1",
																"nodeType": "YulFunctionCall",
																"src": "3727:77:1"
															},
															"nativeSrc": "3724:159:1",
															"nodeType": "YulIf",
															"src": "3724:159:1"
														},
														{
															"nativeSrc": "3892:57:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3892:57:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3934:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3934:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "3940:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "3940:8:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "3915:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3915:18:1"
																},
																"nativeSrc": "3915:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3915:34:1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "3896:7:1",
																	"nodeType": "YulTypedName",
																	"src": "3896:7:1",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "3905:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3905:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3994:22:1",
																"nodeType": "YulBlock",
																"src": "3994:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3996:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3996:16:1"
																			},
																			"nativeSrc": "3996:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3996:18:1"
																		},
																		"nativeSrc": "3996:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3996:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "3964:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3964:7:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3981:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3981:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3977:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3977:3:1"
																				},
																				"nativeSrc": "3977:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3977:6:1"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "3985:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3985:6:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3973:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3973:3:1"
																		},
																		"nativeSrc": "3973:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3973:19:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3961:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3961:2:1"
																},
																"nativeSrc": "3961:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3961:32:1"
															},
															"nativeSrc": "3958:58:1",
															"nodeType": "YulIf",
															"src": "3958:58:1"
														},
														{
															"nativeSrc": "4025:29:1",
															"nodeType": "YulAssignment",
															"src": "4025:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4038:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "4038:7:1"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "4047:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4047:6:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4034:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4034:3:1"
																},
																"nativeSrc": "4034:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4034:20:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4025:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4025:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "3254:806:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "3284:4:1",
														"nodeType": "YulTypedName",
														"src": "3284:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3290:8:1",
														"nodeType": "YulTypedName",
														"src": "3290:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3303:5:1",
														"nodeType": "YulTypedName",
														"src": "3303:5:1",
														"type": ""
													}
												],
												"src": "3254:806:1"
											},
											{
												"body": {
													"nativeSrc": "4133:72:1",
													"nodeType": "YulBlock",
													"src": "4133:72:1",
													"statements": [
														{
															"nativeSrc": "4143:56:1",
															"nodeType": "YulAssignment",
															"src": "4143:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4173:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4173:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4183:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "4183:8:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4193:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4193:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4179:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4179:3:1"
																		},
																		"nativeSrc": "4179:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4179:19:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "4152:20:1",
																	"nodeType": "YulIdentifier",
																	"src": "4152:20:1"
																},
																"nativeSrc": "4152:47:1",
																"nodeType": "YulFunctionCall",
																"src": "4152:47:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4143:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4143:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "4065:140:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4104:4:1",
														"nodeType": "YulTypedName",
														"src": "4104:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4110:8:1",
														"nodeType": "YulTypedName",
														"src": "4110:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4123:5:1",
														"nodeType": "YulTypedName",
														"src": "4123:5:1",
														"type": ""
													}
												],
												"src": "4065:140:1"
											},
											{
												"body": {
													"nativeSrc": "4262:116:1",
													"nodeType": "YulBlock",
													"src": "4262:116:1",
													"statements": [
														{
															"nativeSrc": "4272:20:1",
															"nodeType": "YulAssignment",
															"src": "4272:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4287:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4287:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4290:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4290:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4283:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4283:3:1"
																},
																"nativeSrc": "4283:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4283:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4272:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4272:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4350:22:1",
																"nodeType": "YulBlock",
																"src": "4350:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4352:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4352:16:1"
																			},
																			"nativeSrc": "4352:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4352:18:1"
																		},
																		"nativeSrc": "4352:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4352:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4321:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "4321:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4314:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "4314:6:1"
																				},
																				"nativeSrc": "4314:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4314:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4328:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "4328:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4335:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "4335:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4344:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "4344:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4331:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4331:3:1"
																						},
																						"nativeSrc": "4331:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4331:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4325:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4325:2:1"
																				},
																				"nativeSrc": "4325:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4325:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4311:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4311:2:1"
																		},
																		"nativeSrc": "4311:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4311:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4304:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4304:6:1"
																},
																"nativeSrc": "4304:45:1",
																"nodeType": "YulFunctionCall",
																"src": "4304:45:1"
															},
															"nativeSrc": "4301:71:1",
															"nodeType": "YulIf",
															"src": "4301:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4210:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4241:1:1",
														"nodeType": "YulTypedName",
														"src": "4241:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4244:1:1",
														"nodeType": "YulTypedName",
														"src": "4244:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4250:7:1",
														"nodeType": "YulTypedName",
														"src": "4250:7:1",
														"type": ""
													}
												],
												"src": "4210:168:1"
											},
											{
												"body": {
													"nativeSrc": "4484:102:1",
													"nodeType": "YulBlock",
													"src": "4484:102:1",
													"statements": [
														{
															"nativeSrc": "4494:26:1",
															"nodeType": "YulAssignment",
															"src": "4494:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4506:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4506:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4517:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4517:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4502:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4502:3:1"
																},
																"nativeSrc": "4502:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4502:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4494:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4494:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4536:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4536:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4551:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4551:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4567:3:1",
																								"nodeType": "YulLiteral",
																								"src": "4567:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4572:1:1",
																								"nodeType": "YulLiteral",
																								"src": "4572:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4563:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4563:3:1"
																						},
																						"nativeSrc": "4563:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4563:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4576:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4576:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4559:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4559:3:1"
																				},
																				"nativeSrc": "4559:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4559:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4547:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4547:3:1"
																		},
																		"nativeSrc": "4547:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4547:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4529:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:1"
																},
																"nativeSrc": "4529:51:1",
																"nodeType": "YulFunctionCall",
																"src": "4529:51:1"
															},
															"nativeSrc": "4529:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "4529:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4383:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4453:9:1",
														"nodeType": "YulTypedName",
														"src": "4453:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4464:6:1",
														"nodeType": "YulTypedName",
														"src": "4464:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4475:4:1",
														"nodeType": "YulTypedName",
														"src": "4475:4:1",
														"type": ""
													}
												],
												"src": "4383:203:1"
											},
											{
												"body": {
													"nativeSrc": "4639:77:1",
													"nodeType": "YulBlock",
													"src": "4639:77:1",
													"statements": [
														{
															"nativeSrc": "4649:16:1",
															"nodeType": "YulAssignment",
															"src": "4649:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4660:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4660:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4663:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4663:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4656:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4656:3:1"
																},
																"nativeSrc": "4656:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4656:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4649:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4649:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4688:22:1",
																"nodeType": "YulBlock",
																"src": "4688:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4690:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4690:16:1"
																			},
																			"nativeSrc": "4690:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4690:18:1"
																		},
																		"nativeSrc": "4690:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4690:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4680:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4680:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4683:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4683:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4677:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4677:2:1"
																},
																"nativeSrc": "4677:10:1",
																"nodeType": "YulFunctionCall",
																"src": "4677:10:1"
															},
															"nativeSrc": "4674:36:1",
															"nodeType": "YulIf",
															"src": "4674:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4591:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4622:1:1",
														"nodeType": "YulTypedName",
														"src": "4622:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4625:1:1",
														"nodeType": "YulTypedName",
														"src": "4625:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4631:3:1",
														"nodeType": "YulTypedName",
														"src": "4631:3:1",
														"type": ""
													}
												],
												"src": "4591:125:1"
											},
											{
												"body": {
													"nativeSrc": "4878:188:1",
													"nodeType": "YulBlock",
													"src": "4878:188:1",
													"statements": [
														{
															"nativeSrc": "4888:26:1",
															"nodeType": "YulAssignment",
															"src": "4888:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4900:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4900:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4911:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4911:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4896:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:1"
																},
																"nativeSrc": "4896:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4896:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4888:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4888:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4930:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4930:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4945:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4945:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4961:3:1",
																								"nodeType": "YulLiteral",
																								"src": "4961:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4966:1:1",
																								"nodeType": "YulLiteral",
																								"src": "4966:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4957:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4957:3:1"
																						},
																						"nativeSrc": "4957:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4957:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4970:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4970:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4953:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4953:3:1"
																				},
																				"nativeSrc": "4953:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4953:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4941:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4941:3:1"
																		},
																		"nativeSrc": "4941:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4941:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4923:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4923:6:1"
																},
																"nativeSrc": "4923:51:1",
																"nodeType": "YulFunctionCall",
																"src": "4923:51:1"
															},
															"nativeSrc": "4923:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "4923:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4994:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4994:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5005:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5005:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4990:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4990:3:1"
																		},
																		"nativeSrc": "4990:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4990:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5010:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5010:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4983:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4983:6:1"
																},
																"nativeSrc": "4983:34:1",
																"nodeType": "YulFunctionCall",
																"src": "4983:34:1"
															},
															"nativeSrc": "4983:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "4983:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5037:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5037:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5048:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5048:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5033:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5033:3:1"
																		},
																		"nativeSrc": "5033:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5033:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5053:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5053:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5026:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5026:6:1"
																},
																"nativeSrc": "5026:34:1",
																"nodeType": "YulFunctionCall",
																"src": "5026:34:1"
															},
															"nativeSrc": "5026:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "5026:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4721:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4831:9:1",
														"nodeType": "YulTypedName",
														"src": "4831:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4842:6:1",
														"nodeType": "YulTypedName",
														"src": "4842:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4850:6:1",
														"nodeType": "YulTypedName",
														"src": "4850:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4858:6:1",
														"nodeType": "YulTypedName",
														"src": "4858:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4869:4:1",
														"nodeType": "YulTypedName",
														"src": "4869:4:1",
														"type": ""
													}
												],
												"src": "4721:345:1"
											},
											{
												"body": {
													"nativeSrc": "5172:76:1",
													"nodeType": "YulBlock",
													"src": "5172:76:1",
													"statements": [
														{
															"nativeSrc": "5182:26:1",
															"nodeType": "YulAssignment",
															"src": "5182:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5194:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5194:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5205:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5205:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5190:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5190:3:1"
																},
																"nativeSrc": "5190:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5190:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5182:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5182:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5224:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5224:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5235:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5235:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5217:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5217:6:1"
																},
																"nativeSrc": "5217:25:1",
																"nodeType": "YulFunctionCall",
																"src": "5217:25:1"
															},
															"nativeSrc": "5217:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "5217:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5071:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5141:9:1",
														"nodeType": "YulTypedName",
														"src": "5141:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5152:6:1",
														"nodeType": "YulTypedName",
														"src": "5152:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5163:4:1",
														"nodeType": "YulTypedName",
														"src": "5163:4:1",
														"type": ""
													}
												],
												"src": "5071:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040518060400160405280601281526020017129b6b0b93a1022b732b933bc902a37b5b2b760711b8152506040518060400160405280600381526020016214d15560ea1b8152508160039081620000699190620002cc565b506004620000788282620002cc565b505050620000b43362000090620000ba60201b60201c565b6200009d90600a620004a7565b620000ae9064746a528800620004be565b620000bf565b620004ee565b601290565b6001600160a01b038216620000ee5760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b620000fb5f8383620000ff565b5050565b6001600160a01b0383166200012d578060025f828254620001219190620004d8565b909155506200019f9050565b6001600160a01b0383165f9081526020819052604090205481811015620001815760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000e5565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216620001bd57600280548290039055620001db565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200022191815260200190565b60405180910390a3505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200025757607f821691505b6020821081036200027657634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620002c757805f5260205f20601f840160051c81016020851015620002a35750805b601f840160051c820191505b81811015620002c4575f8155600101620002af565b50505b505050565b81516001600160401b03811115620002e857620002e86200022e565b6200030081620002f9845462000242565b846200027c565b602080601f83116001811462000336575f84156200031e5750858301515b5f19600386901b1c1916600185901b17855562000390565b5f85815260208120601f198616915b82811015620003665788860151825594840194600190910190840162000345565b50858210156200038457878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b634e487b7160e01b5f52601160045260245ffd5b600181815b80851115620003ec57815f1904821115620003d057620003d062000398565b80851615620003de57918102915b93841c9390800290620003b1565b509250929050565b5f826200040457506001620004a1565b816200041257505f620004a1565b81600181146200042b5760028114620004365762000456565b6001915050620004a1565b60ff8411156200044a576200044a62000398565b50506001821b620004a1565b5060208310610133831016604e8410600b84101617156200047b575081810a620004a1565b620004878383620003ac565b805f19048211156200049d576200049d62000398565b0290505b92915050565b5f620004b760ff841683620003f4565b9392505050565b8082028115828204841417620004a157620004a162000398565b80820180821115620004a157620004a162000398565b6107a880620004fc5f395ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c806342966c681161006e57806342966c681461011f57806370a082311461013457806379cc67901461015c57806395d89b411461016f578063a9059cbb14610177578063dd62ed3e1461018a575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b26101c2565b6040516100bf91906105eb565b60405180910390f35b6100db6100d6366004610652565b610252565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b36600461067a565b61026b565b604051601281526020016100bf565b61013261012d3660046106b3565b61028e565b005b6100ef6101423660046106ca565b6001600160a01b03165f9081526020819052604090205490565b61013261016a366004610652565b61029b565b6100b26102b4565b6100db610185366004610652565b6102c3565b6100ef6101983660046106ea565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6060600380546101d19061071b565b80601f01602080910402602001604051908101604052809291908181526020018280546101fd9061071b565b80156102485780601f1061021f57610100808354040283529160200191610248565b820191905f5260205f20905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b5f3361025f8185856102d0565b60019150505b92915050565b5f336102788582856102e2565b610283858585610362565b506001949350505050565b61029833826103bf565b50565b6102a68233836102e2565b6102b082826103bf565b5050565b6060600480546101d19061071b565b5f3361025f818585610362565b6102dd83838360016103f3565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811461035c578181101561034e57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61035c84848484035f6103f3565b50505050565b6001600160a01b03831661038b57604051634b637e8f60e11b81525f6004820152602401610345565b6001600160a01b0382166103b45760405163ec442f0560e01b81525f6004820152602401610345565b6102dd8383836104c5565b6001600160a01b0382166103e857604051634b637e8f60e11b81525f6004820152602401610345565b6102b0825f836104c5565b6001600160a01b03841661041c5760405163e602df0560e01b81525f6004820152602401610345565b6001600160a01b03831661044557604051634a1406b160e11b81525f6004820152602401610345565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561035c57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104b791815260200190565b60405180910390a350505050565b6001600160a01b0383166104ef578060025f8282546104e49190610753565b9091555061055f9050565b6001600160a01b0383165f90815260208190526040902054818110156105415760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610345565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661057b57600280548290039055610599565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105de91815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b81811015610617578581018301518582016040015282016105fb565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461064d575f80fd5b919050565b5f8060408385031215610663575f80fd5b61066c83610637565b946020939093013593505050565b5f805f6060848603121561068c575f80fd5b61069584610637565b92506106a360208501610637565b9150604084013590509250925092565b5f602082840312156106c3575f80fd5b5035919050565b5f602082840312156106da575f80fd5b6106e382610637565b9392505050565b5f80604083850312156106fb575f80fd5b61070483610637565b915061071260208401610637565b90509250929050565b600181811c9082168061072f57607f821691505b60208210810361074d57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561026557634e487b7160e01b5f52601160045260245ffdfea2646970667358221220fef29c5df8aece1579a6f2c79531b44f2d89f135c87af57cde204d6d781f0b7e64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x29B6B0B93A1022B732B933BC902A37B5B2B7 PUSH1 0x71 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x14D155 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x69 SWAP2 SWAP1 PUSH3 0x2CC JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x78 DUP3 DUP3 PUSH3 0x2CC JUMP JUMPDEST POP POP POP PUSH3 0xB4 CALLER PUSH3 0x90 PUSH3 0xBA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x9D SWAP1 PUSH1 0xA PUSH3 0x4A7 JUMP JUMPDEST PUSH3 0xAE SWAP1 PUSH5 0x746A528800 PUSH3 0x4BE JUMP JUMPDEST PUSH3 0xBF JUMP JUMPDEST PUSH3 0x4EE JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xEE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xFB PUSH0 DUP4 DUP4 PUSH3 0xFF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x12D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x121 SWAP2 SWAP1 PUSH3 0x4D8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x19F SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x181 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0xE5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x1BD JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x1DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x221 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x257 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x276 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2C7 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x2A3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2C4 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2AF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2E8 JUMPI PUSH3 0x2E8 PUSH3 0x22E JUMP JUMPDEST PUSH3 0x300 DUP2 PUSH3 0x2F9 DUP5 SLOAD PUSH3 0x242 JUMP JUMPDEST DUP5 PUSH3 0x27C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x336 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x31E JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x390 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x366 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x345 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x384 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x3EC JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x3D0 JUMPI PUSH3 0x3D0 PUSH3 0x398 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x3DE JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x3B1 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x404 JUMPI POP PUSH1 0x1 PUSH3 0x4A1 JUMP JUMPDEST DUP2 PUSH3 0x412 JUMPI POP PUSH0 PUSH3 0x4A1 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x42B JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x436 JUMPI PUSH3 0x456 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x4A1 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x44A JUMPI PUSH3 0x44A PUSH3 0x398 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x4A1 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x47B JUMPI POP DUP2 DUP2 EXP PUSH3 0x4A1 JUMP JUMPDEST PUSH3 0x487 DUP4 DUP4 PUSH3 0x3AC JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x49D JUMPI PUSH3 0x49D PUSH3 0x398 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4B7 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x3F4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x4A1 JUMPI PUSH3 0x4A1 PUSH3 0x398 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x4A1 JUMPI PUSH3 0x4A1 PUSH3 0x398 JUMP JUMPDEST PUSH2 0x7A8 DUP1 PUSH3 0x4FC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x652 JUMP JUMPDEST PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH2 0x26B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0x132 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEF PUSH2 0x142 CALLDATASIZE PUSH1 0x4 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x652 JUMP JUMPDEST PUSH2 0x29B JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x652 JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x6EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D1 SWAP1 PUSH2 0x71B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FD SWAP1 PUSH2 0x71B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x248 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x248 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x22B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x25F DUP2 DUP6 DUP6 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x278 DUP6 DUP3 DUP6 PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0x283 DUP6 DUP6 DUP6 PUSH2 0x362 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x298 CALLER DUP3 PUSH2 0x3BF JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2A6 DUP3 CALLER DUP4 PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0x2B0 DUP3 DUP3 PUSH2 0x3BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D1 SWAP1 PUSH2 0x71B JUMP JUMPDEST PUSH0 CALLER PUSH2 0x25F DUP2 DUP6 DUP6 PUSH2 0x362 JUMP JUMPDEST PUSH2 0x2DD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3F3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x35C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x3F3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x38B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x345 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x345 JUMP JUMPDEST PUSH2 0x2DD DUP4 DUP4 DUP4 PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x345 JUMP JUMPDEST PUSH2 0x2B0 DUP3 PUSH0 DUP4 PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x41C JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x345 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x445 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x345 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x35C JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4EF JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x753 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x55F SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x541 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x345 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x57B JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x599 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5DE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x617 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x5FB JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x64D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x663 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x66C DUP4 PUSH2 0x637 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x68C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x695 DUP5 PUSH2 0x637 JUMP JUMPDEST SWAP3 POP PUSH2 0x6A3 PUSH1 0x20 DUP6 ADD PUSH2 0x637 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6E3 DUP3 PUSH2 0x637 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6FB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x704 DUP4 PUSH2 0x637 JUMP JUMPDEST SWAP2 POP PUSH2 0x712 PUSH1 0x20 DUP5 ADD PUSH2 0x637 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x72F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x74D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x265 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID CALLCODE SWAP13 TSTORE 0xF8 0xAE 0xCE ISZERO PUSH26 0xA6F2C79531B44F2D89F135C87AF57CDE204D6D781F0B7E64736F PUSH13 0x63430008180033000000000000 ",
							"sourceMap": "22790:170:0:-:0;;;22847:110;;;;;;;;;;12298:116;;;;;;;;;;;;;-1:-1:-1;;;12298:116:0;;;;;;;;;;;;;;;;-1:-1:-1;;;12298:116:0;;;12373:5;12365;:13;;;;;;:::i;:::-;-1:-1:-1;12389:7:0;:17;12399:7;12389;:17;:::i;:::-;;12298:116;;22907:42:::1;22913:10;22938;:8;;;:10;;:::i;:::-;22934:14;::::0;:2:::1;:14;:::i;:::-;22924:24;::::0;:9:::1;:24;:::i;:::-;22907:5;:42::i;:::-;22790:170:::0;;13437:84;13511:2;;13437:84::o;18299:213::-;-1:-1:-1;;;;;18370:21:0;;18366:93;;18415:32;;-1:-1:-1;;;18415:32:0;;18444:1;18415:32;;;4529:51:1;4502:18;;18415:32:0;;;;;;;;18366:93;18469:35;18485:1;18489:7;18498:5;18469:7;:35::i;:::-;18299:213;;:::o;16811:1135::-;-1:-1:-1;;;;;16901:18:0;;16897:552;;17055:5;17039:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;16897:552:0;;-1:-1:-1;16897:552:0;;-1:-1:-1;;;;;17115:15:0;;17093:19;17115:15;;;;;;;;;;;17149:19;;;17145:117;;;17196:50;;-1:-1:-1;;;17196:50:0;;-1:-1:-1;;;;;4941:32:1;;17196:50:0;;;4923:51:1;4990:18;;;4983:34;;;5033:18;;;5026:34;;;4896:18;;17196:50:0;4721:345:1;17145:117:0;-1:-1:-1;;;;;17385:15:0;;:9;:15;;;;;;;;;;17403:19;;;;17385:37;;16897:552;-1:-1:-1;;;;;17465:16:0;;17461:435;;17631:12;:21;;;;;;;17461:435;;;-1:-1:-1;;;;;17847:13:0;;:9;:13;;;;;;;;;;:22;;;;;;17461:435;17928:2;-1:-1:-1;;;;;17913:25:0;17922:4;-1:-1:-1;;;;;17913:25:0;;17932:5;17913:25;;;;5217::1;;5205:2;5190:18;;5071:177;17913:25:0;;;;;;;;16811:1135;;;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:1;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1345::-;1471:10;;-1:-1:-1;;;;;1493:30:1;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1707:4;;1764:2;1753:14;;1781:1;1776:663;;;;2483:1;2500:6;2497:89;;;-1:-1:-1;2552:19:1;;;2546:26;2497:89;-1:-1:-1;;1308:1:1;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2599:81;;1746:944;;1776:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1812:20:1;;;1930:236;1944:7;1941:1;1938:14;1930:236;;;2033:19;;;2027:26;2012:42;;2125:27;;;;2093:1;2081:14;;;;1960:19;;1930:236;;;1934:3;2194:6;2185:7;2182:19;2179:201;;;2255:19;;;2249:26;-1:-1:-1;;2338:1:1;2334:14;;;2350:3;2330:24;2326:37;2322:42;2307:58;2292:74;;2179:201;;;2426:1;2417:6;2414:1;2410:14;2406:22;2400:4;2393:36;1746:944;;;;;1351:1345;;:::o;2701:127::-;2762:10;2757:3;2753:20;2750:1;2743:31;2793:4;2790:1;2783:15;2817:4;2814:1;2807:15;2833:416;2922:1;2959:5;2922:1;2973:270;2994:7;2984:8;2981:21;2973:270;;;3053:4;3049:1;3045:6;3041:17;3035:4;3032:27;3029:53;;;3062:18;;:::i;:::-;3112:7;3102:8;3098:22;3095:55;;;3132:16;;;;3095:55;3211:22;;;;3171:15;;;;2973:270;;;2977:3;2833:416;;;;;:::o;3254:806::-;3303:5;3333:8;3323:80;;-1:-1:-1;3374:1:1;3388:5;;3323:80;3422:4;3412:76;;-1:-1:-1;3459:1:1;3473:5;;3412:76;3504:4;3522:1;3517:59;;;;3590:1;3585:130;;;;3497:218;;3517:59;3547:1;3538:10;;3561:5;;;3585:130;3622:3;3612:8;3609:17;3606:43;;;3629:18;;:::i;:::-;-1:-1:-1;;3685:1:1;3671:16;;3700:5;;3497:218;;3799:2;3789:8;3786:16;3780:3;3774:4;3771:13;3767:36;3761:2;3751:8;3748:16;3743:2;3737:4;3734:12;3730:35;3727:77;3724:159;;;-1:-1:-1;3836:19:1;;;3868:5;;3724:159;3915:34;3940:8;3934:4;3915:34;:::i;:::-;3985:6;3981:1;3977:6;3973:19;3964:7;3961:32;3958:58;;;3996:18;;:::i;:::-;4034:20;;-1:-1:-1;3254:806:1;;;;;:::o;4065:140::-;4123:5;4152:47;4193:4;4183:8;4179:19;4173:4;4152:47;:::i;:::-;4143:56;4065:140;-1:-1:-1;;;4065:140:1:o;4210:168::-;4283:9;;;4314;;4331:15;;;4325:22;;4311:37;4301:71;;4352:18;;:::i;4591:125::-;4656:9;;;4677:10;;;4674:36;;;4690:18;;:::i;5071:177::-;22790:170:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_658": {
									"entryPoint": 720,
									"id": 658,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_718": {
									"entryPoint": 1011,
									"id": 718,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_640": {
									"entryPoint": 959,
									"id": 640,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_146": {
									"entryPoint": null,
									"id": 146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_766": {
									"entryPoint": 738,
									"id": 766,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_497": {
									"entryPoint": 866,
									"id": 497,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_574": {
									"entryPoint": 1221,
									"id": 574,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_394": {
									"entryPoint": null,
									"id": 394,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_418": {
									"entryPoint": 594,
									"id": 418,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_353": {
									"entryPoint": null,
									"id": 353,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_806": {
									"entryPoint": 667,
									"id": 806,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_785": {
									"entryPoint": 654,
									"id": 785,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_331": {
									"entryPoint": null,
									"id": 331,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_313": {
									"entryPoint": 450,
									"id": 313,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_322": {
									"entryPoint": 692,
									"id": 322,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_340": {
									"entryPoint": null,
									"id": 340,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_450": {
									"entryPoint": 619,
									"id": 450,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_377": {
									"entryPoint": 707,
									"id": 377,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3708:1",
										"nodeType": "YulBlock",
										"src": "0:3708:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:1",
													"nodeType": "YulBlock",
													"src": "135:427:1",
													"statements": [
														{
															"nativeSrc": "145:12:1",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:1",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:1",
																		"nodeType": "YulLiteral",
																		"src": "184:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nativeSrc": "166:21:1",
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nativeSrc": "166:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nativeSrc": "196:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nativeSrc": "210:13:1",
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:1",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:1",
																				"nodeType": "YulLiteral",
																				"src": "254:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nativeSrc": "239:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nativeSrc": "232:34:1",
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nativeSrc": "232:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nativeSrc": "275:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:1",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:1",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:1",
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nativeSrc": "369:17:1",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:1",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nativeSrc": "365:26:1",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:1",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nativeSrc": "403:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nativeSrc": "399:23:1",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nativeSrc": "393:30:1",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nativeSrc": "358:66:1",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nativeSrc": "358:66:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nativeSrc": "302:13:1",
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nativeSrc": "294:140:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:1",
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nativeSrc": "318:15:1",
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nativeSrc": "323:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:1",
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:1"
																				},
																				"nativeSrc": "454:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:1",
																				"nodeType": "YulLiteral",
																				"src": "478:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:1"
																		},
																		"nativeSrc": "450:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:1",
																		"nodeType": "YulLiteral",
																		"src": "483:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:1"
																},
																"nativeSrc": "443:42:1",
																"nodeType": "YulFunctionCall",
																"src": "443:42:1"
															},
															"nativeSrc": "443:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:1"
														},
														{
															"nativeSrc": "494:62:1",
															"nodeType": "YulAssignment",
															"src": "494:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:1",
																								"nodeType": "YulLiteral",
																								"src": "537:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:1"
																						},
																						"nativeSrc": "525:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:1",
																								"nodeType": "YulLiteral",
																								"src": "546:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:1"
																						},
																						"nativeSrc": "542:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:1"
																				},
																				"nativeSrc": "521:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:1"
																		},
																		"nativeSrc": "506:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:1",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nativeSrc": "502:54:1",
																"nodeType": "YulFunctionCall",
																"src": "502:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:1",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:1",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:1",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:548:1"
											},
											{
												"body": {
													"nativeSrc": "616:124:1",
													"nodeType": "YulBlock",
													"src": "616:124:1",
													"statements": [
														{
															"nativeSrc": "626:29:1",
															"nodeType": "YulAssignment",
															"src": "626:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:1"
																},
																"nativeSrc": "635:20:1",
																"nodeType": "YulFunctionCall",
																"src": "635:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:1",
																"nodeType": "YulBlock",
																"src": "718:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:1",
																					"nodeType": "YulLiteral",
																					"src": "727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:1",
																					"nodeType": "YulLiteral",
																					"src": "730:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:1"
																			},
																			"nativeSrc": "720:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:1"
																		},
																		"nativeSrc": "720:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:1",
																										"nodeType": "YulLiteral",
																										"src": "703:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:1",
																										"nodeType": "YulLiteral",
																										"src": "708:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:1"
																								},
																								"nativeSrc": "699:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:1",
																								"nodeType": "YulLiteral",
																								"src": "712:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:1"
																						},
																						"nativeSrc": "695:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:1"
																				},
																				"nativeSrc": "684:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:1"
																		},
																		"nativeSrc": "674:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:1"
																},
																"nativeSrc": "667:50:1",
																"nodeType": "YulFunctionCall",
																"src": "667:50:1"
															},
															"nativeSrc": "664:70:1",
															"nodeType": "YulIf",
															"src": "664:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:1",
														"nodeType": "YulTypedName",
														"src": "595:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:1",
														"nodeType": "YulTypedName",
														"src": "606:5:1",
														"type": ""
													}
												],
												"src": "567:173:1"
											},
											{
												"body": {
													"nativeSrc": "832:167:1",
													"nodeType": "YulBlock",
													"src": "832:167:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:1",
																"nodeType": "YulBlock",
																"src": "878:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:1",
																					"nodeType": "YulLiteral",
																					"src": "887:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:1",
																					"nodeType": "YulLiteral",
																					"src": "890:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:1"
																			},
																			"nativeSrc": "880:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:1"
																		},
																		"nativeSrc": "880:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:1"
																		},
																		"nativeSrc": "849:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:1",
																		"nodeType": "YulLiteral",
																		"src": "874:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:1"
																},
																"nativeSrc": "845:32:1",
																"nodeType": "YulFunctionCall",
																"src": "845:32:1"
															},
															"nativeSrc": "842:52:1",
															"nodeType": "YulIf",
															"src": "842:52:1"
														},
														{
															"nativeSrc": "903:39:1",
															"nodeType": "YulAssignment",
															"src": "903:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:1"
																},
																"nativeSrc": "913:29:1",
																"nodeType": "YulFunctionCall",
																"src": "913:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																}
															]
														},
														{
															"nativeSrc": "951:42:1",
															"nodeType": "YulAssignment",
															"src": "951:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:1",
																				"nodeType": "YulLiteral",
																				"src": "989:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nativeSrc": "974:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:1"
																},
																"nativeSrc": "961:32:1",
																"nodeType": "YulFunctionCall",
																"src": "961:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:1",
														"nodeType": "YulTypedName",
														"src": "790:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:1",
														"nodeType": "YulTypedName",
														"src": "801:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:1",
														"nodeType": "YulTypedName",
														"src": "813:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:1",
														"nodeType": "YulTypedName",
														"src": "821:6:1",
														"type": ""
													}
												],
												"src": "745:254:1"
											},
											{
												"body": {
													"nativeSrc": "1099:92:1",
													"nodeType": "YulBlock",
													"src": "1099:92:1",
													"statements": [
														{
															"nativeSrc": "1109:26:1",
															"nodeType": "YulAssignment",
															"src": "1109:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:1"
																},
																"nativeSrc": "1117:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:1"
																				},
																				"nativeSrc": "1169:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:1"
																		},
																		"nativeSrc": "1162:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:1"
																},
																"nativeSrc": "1144:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:1"
															},
															"nativeSrc": "1144:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:1",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:1",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:1",
														"nodeType": "YulTypedName",
														"src": "1090:4:1",
														"type": ""
													}
												],
												"src": "1004:187:1"
											},
											{
												"body": {
													"nativeSrc": "1297:76:1",
													"nodeType": "YulBlock",
													"src": "1297:76:1",
													"statements": [
														{
															"nativeSrc": "1307:26:1",
															"nodeType": "YulAssignment",
															"src": "1307:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:1"
																},
																"nativeSrc": "1315:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:1"
																},
																"nativeSrc": "1342:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:1"
															},
															"nativeSrc": "1342:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:1",
														"nodeType": "YulTypedName",
														"src": "1266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:1",
														"nodeType": "YulTypedName",
														"src": "1277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:1",
														"nodeType": "YulTypedName",
														"src": "1288:4:1",
														"type": ""
													}
												],
												"src": "1196:177:1"
											},
											{
												"body": {
													"nativeSrc": "1482:224:1",
													"nodeType": "YulBlock",
													"src": "1482:224:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:1",
																"nodeType": "YulBlock",
																"src": "1528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:1"
																			},
																			"nativeSrc": "1530:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:1"
																		},
																		"nativeSrc": "1530:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:1"
																		},
																		"nativeSrc": "1499:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:1"
																},
																"nativeSrc": "1495:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:1"
															},
															"nativeSrc": "1492:52:1",
															"nodeType": "YulIf",
															"src": "1492:52:1"
														},
														{
															"nativeSrc": "1553:39:1",
															"nodeType": "YulAssignment",
															"src": "1553:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:1"
																},
																"nativeSrc": "1563:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:1"
																}
															]
														},
														{
															"nativeSrc": "1601:48:1",
															"nodeType": "YulAssignment",
															"src": "1601:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:1"
																		},
																		"nativeSrc": "1630:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:1"
																},
																"nativeSrc": "1611:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:1"
																}
															]
														},
														{
															"nativeSrc": "1658:42:1",
															"nodeType": "YulAssignment",
															"src": "1658:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:1"
																		},
																		"nativeSrc": "1681:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:1"
																},
																"nativeSrc": "1668:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:1",
														"nodeType": "YulTypedName",
														"src": "1432:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:1",
														"nodeType": "YulTypedName",
														"src": "1443:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:1",
														"nodeType": "YulTypedName",
														"src": "1455:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:1",
														"nodeType": "YulTypedName",
														"src": "1471:6:1",
														"type": ""
													}
												],
												"src": "1378:328:1"
											},
											{
												"body": {
													"nativeSrc": "1808:87:1",
													"nodeType": "YulBlock",
													"src": "1808:87:1",
													"statements": [
														{
															"nativeSrc": "1818:26:1",
															"nodeType": "YulAssignment",
															"src": "1818:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:1"
																},
																"nativeSrc": "1826:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:1"
																		},
																		"nativeSrc": "1871:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:1"
																},
																"nativeSrc": "1853:36:1",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:1"
															},
															"nativeSrc": "1853:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:1",
														"nodeType": "YulTypedName",
														"src": "1777:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:1",
														"nodeType": "YulTypedName",
														"src": "1788:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:1",
														"nodeType": "YulTypedName",
														"src": "1799:4:1",
														"type": ""
													}
												],
												"src": "1711:184:1"
											},
											{
												"body": {
													"nativeSrc": "1970:110:1",
													"nodeType": "YulBlock",
													"src": "1970:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:1",
																"nodeType": "YulBlock",
																"src": "2016:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:1"
																			},
																			"nativeSrc": "2018:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:1"
																		},
																		"nativeSrc": "2018:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1991:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2000:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1987:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:1"
																		},
																		"nativeSrc": "1987:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1983:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:1"
																},
																"nativeSrc": "1983:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1983:32:1"
															},
															"nativeSrc": "1980:52:1",
															"nodeType": "YulIf",
															"src": "1980:52:1"
														},
														{
															"nativeSrc": "2041:33:1",
															"nodeType": "YulAssignment",
															"src": "2041:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2064:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2064:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2051:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2051:12:1"
																},
																"nativeSrc": "2051:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2051:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2041:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1900:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:1",
														"nodeType": "YulTypedName",
														"src": "1936:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1947:7:1",
														"nodeType": "YulTypedName",
														"src": "1947:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1959:6:1",
														"nodeType": "YulTypedName",
														"src": "1959:6:1",
														"type": ""
													}
												],
												"src": "1900:180:1"
											},
											{
												"body": {
													"nativeSrc": "2155:116:1",
													"nodeType": "YulBlock",
													"src": "2155:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2201:16:1",
																"nodeType": "YulBlock",
																"src": "2201:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2210:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2210:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2213:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2213:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2203:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2203:6:1"
																			},
																			"nativeSrc": "2203:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2203:12:1"
																		},
																		"nativeSrc": "2203:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2176:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2176:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2185:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2185:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2172:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:1"
																		},
																		"nativeSrc": "2172:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2172:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2197:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2197:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2168:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2168:3:1"
																},
																"nativeSrc": "2168:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2168:32:1"
															},
															"nativeSrc": "2165:52:1",
															"nodeType": "YulIf",
															"src": "2165:52:1"
														},
														{
															"nativeSrc": "2226:39:1",
															"nodeType": "YulAssignment",
															"src": "2226:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2255:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2255:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2236:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2236:18:1"
																},
																"nativeSrc": "2236:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2236:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2226:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2085:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2121:9:1",
														"nodeType": "YulTypedName",
														"src": "2121:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2132:7:1",
														"nodeType": "YulTypedName",
														"src": "2132:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2144:6:1",
														"nodeType": "YulTypedName",
														"src": "2144:6:1",
														"type": ""
													}
												],
												"src": "2085:186:1"
											},
											{
												"body": {
													"nativeSrc": "2363:173:1",
													"nodeType": "YulBlock",
													"src": "2363:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2409:16:1",
																"nodeType": "YulBlock",
																"src": "2409:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2418:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2418:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2421:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2421:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2411:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2411:6:1"
																			},
																			"nativeSrc": "2411:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2411:12:1"
																		},
																		"nativeSrc": "2411:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2411:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2384:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2384:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2393:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2393:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2380:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2380:3:1"
																		},
																		"nativeSrc": "2380:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2380:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2405:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2405:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2376:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:1"
																},
																"nativeSrc": "2376:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2376:32:1"
															},
															"nativeSrc": "2373:52:1",
															"nodeType": "YulIf",
															"src": "2373:52:1"
														},
														{
															"nativeSrc": "2434:39:1",
															"nodeType": "YulAssignment",
															"src": "2434:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2463:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2463:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2444:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2444:18:1"
																},
																"nativeSrc": "2444:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2444:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2434:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2434:6:1"
																}
															]
														},
														{
															"nativeSrc": "2482:48:1",
															"nodeType": "YulAssignment",
															"src": "2482:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2515:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2515:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2526:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2526:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2511:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2511:3:1"
																		},
																		"nativeSrc": "2511:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2511:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2492:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2492:18:1"
																},
																"nativeSrc": "2492:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2492:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2482:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2482:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2276:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2321:9:1",
														"nodeType": "YulTypedName",
														"src": "2321:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2332:7:1",
														"nodeType": "YulTypedName",
														"src": "2332:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2344:6:1",
														"nodeType": "YulTypedName",
														"src": "2344:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2352:6:1",
														"nodeType": "YulTypedName",
														"src": "2352:6:1",
														"type": ""
													}
												],
												"src": "2276:260:1"
											},
											{
												"body": {
													"nativeSrc": "2596:325:1",
													"nodeType": "YulBlock",
													"src": "2596:325:1",
													"statements": [
														{
															"nativeSrc": "2606:22:1",
															"nodeType": "YulAssignment",
															"src": "2606:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2620:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2620:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2623:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2623:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2616:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2616:3:1"
																},
																"nativeSrc": "2616:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2616:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2606:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:1"
																}
															]
														},
														{
															"nativeSrc": "2637:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2637:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2667:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2667:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2673:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2673:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2663:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2663:3:1"
																},
																"nativeSrc": "2663:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2663:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2641:18:1",
																	"nodeType": "YulTypedName",
																	"src": "2641:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2714:31:1",
																"nodeType": "YulBlock",
																"src": "2714:31:1",
																"statements": [
																	{
																		"nativeSrc": "2716:27:1",
																		"nodeType": "YulAssignment",
																		"src": "2716:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2730:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2730:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2738:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2738:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2726:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2726:3:1"
																			},
																			"nativeSrc": "2726:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2726:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2716:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2716:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2694:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2694:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2687:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2687:6:1"
																},
																"nativeSrc": "2687:26:1",
																"nodeType": "YulFunctionCall",
																"src": "2687:26:1"
															},
															"nativeSrc": "2684:61:1",
															"nodeType": "YulIf",
															"src": "2684:61:1"
														},
														{
															"body": {
																"nativeSrc": "2804:111:1",
																"nodeType": "YulBlock",
																"src": "2804:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2825:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2825:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2832:3:1",
																							"nodeType": "YulLiteral",
																							"src": "2832:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2837:10:1",
																							"nodeType": "YulLiteral",
																							"src": "2837:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2828:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2828:3:1"
																					},
																					"nativeSrc": "2828:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2828:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2818:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2818:6:1"
																			},
																			"nativeSrc": "2818:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2818:31:1"
																		},
																		"nativeSrc": "2818:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2818:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2869:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2869:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2872:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2872:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2862:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2862:6:1"
																			},
																			"nativeSrc": "2862:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2862:15:1"
																		},
																		"nativeSrc": "2862:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2862:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2897:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2897:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2900:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2900:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2890:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2890:6:1"
																			},
																			"nativeSrc": "2890:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2890:15:1"
																		},
																		"nativeSrc": "2890:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2890:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2760:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2760:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2783:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2783:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2791:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2791:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2780:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2780:2:1"
																		},
																		"nativeSrc": "2780:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2780:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2757:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2757:2:1"
																},
																"nativeSrc": "2757:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2757:38:1"
															},
															"nativeSrc": "2754:161:1",
															"nodeType": "YulIf",
															"src": "2754:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2541:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2576:4:1",
														"nodeType": "YulTypedName",
														"src": "2576:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2585:6:1",
														"nodeType": "YulTypedName",
														"src": "2585:6:1",
														"type": ""
													}
												],
												"src": "2541:380:1"
											},
											{
												"body": {
													"nativeSrc": "3083:188:1",
													"nodeType": "YulBlock",
													"src": "3083:188:1",
													"statements": [
														{
															"nativeSrc": "3093:26:1",
															"nodeType": "YulAssignment",
															"src": "3093:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3105:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3105:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3116:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3116:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3101:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3101:3:1"
																},
																"nativeSrc": "3101:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3101:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3093:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3093:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3135:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3135:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3150:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3150:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3166:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3166:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3171:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3171:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3162:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3162:3:1"
																						},
																						"nativeSrc": "3162:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3162:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3175:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3175:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3158:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3158:3:1"
																				},
																				"nativeSrc": "3158:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3158:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3146:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3146:3:1"
																		},
																		"nativeSrc": "3146:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3146:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3128:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3128:6:1"
																},
																"nativeSrc": "3128:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3128:51:1"
															},
															"nativeSrc": "3128:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3128:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3199:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3199:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3210:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3210:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3195:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3195:3:1"
																		},
																		"nativeSrc": "3195:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3195:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3215:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3215:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3188:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3188:6:1"
																},
																"nativeSrc": "3188:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3188:34:1"
															},
															"nativeSrc": "3188:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3188:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3242:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3242:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3253:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3253:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3238:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3238:3:1"
																		},
																		"nativeSrc": "3238:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3238:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3258:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3258:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3231:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3231:6:1"
																},
																"nativeSrc": "3231:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3231:34:1"
															},
															"nativeSrc": "3231:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3231:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2926:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3036:9:1",
														"nodeType": "YulTypedName",
														"src": "3036:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3047:6:1",
														"nodeType": "YulTypedName",
														"src": "3047:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3055:6:1",
														"nodeType": "YulTypedName",
														"src": "3055:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3063:6:1",
														"nodeType": "YulTypedName",
														"src": "3063:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3074:4:1",
														"nodeType": "YulTypedName",
														"src": "3074:4:1",
														"type": ""
													}
												],
												"src": "2926:345:1"
											},
											{
												"body": {
													"nativeSrc": "3377:102:1",
													"nodeType": "YulBlock",
													"src": "3377:102:1",
													"statements": [
														{
															"nativeSrc": "3387:26:1",
															"nodeType": "YulAssignment",
															"src": "3387:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3399:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3399:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3410:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3410:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3395:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3395:3:1"
																},
																"nativeSrc": "3395:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3395:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3387:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3387:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3429:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3429:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3444:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3444:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3460:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3460:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3465:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3465:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3456:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3456:3:1"
																						},
																						"nativeSrc": "3456:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3456:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3452:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3452:3:1"
																				},
																				"nativeSrc": "3452:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3452:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3440:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3440:3:1"
																		},
																		"nativeSrc": "3440:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3440:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3422:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3422:6:1"
																},
																"nativeSrc": "3422:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3422:51:1"
															},
															"nativeSrc": "3422:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3422:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3276:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3346:9:1",
														"nodeType": "YulTypedName",
														"src": "3346:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3357:6:1",
														"nodeType": "YulTypedName",
														"src": "3357:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3368:4:1",
														"nodeType": "YulTypedName",
														"src": "3368:4:1",
														"type": ""
													}
												],
												"src": "3276:203:1"
											},
											{
												"body": {
													"nativeSrc": "3532:174:1",
													"nodeType": "YulBlock",
													"src": "3532:174:1",
													"statements": [
														{
															"nativeSrc": "3542:16:1",
															"nodeType": "YulAssignment",
															"src": "3542:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3553:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3553:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3556:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3556:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3549:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3549:3:1"
																},
																"nativeSrc": "3549:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3549:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3542:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3542:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3589:111:1",
																"nodeType": "YulBlock",
																"src": "3589:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3610:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3610:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3617:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3617:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3622:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3622:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3613:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3613:3:1"
																					},
																					"nativeSrc": "3613:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3613:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3603:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3603:6:1"
																			},
																			"nativeSrc": "3603:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3603:31:1"
																		},
																		"nativeSrc": "3603:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3603:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3654:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3654:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3657:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3657:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3647:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3647:6:1"
																			},
																			"nativeSrc": "3647:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3647:15:1"
																		},
																		"nativeSrc": "3647:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3647:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3682:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3682:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3685:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3685:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3675:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3675:6:1"
																			},
																			"nativeSrc": "3675:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3675:15:1"
																		},
																		"nativeSrc": "3675:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3675:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3573:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3573:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3576:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3576:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3570:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3570:2:1"
																},
																"nativeSrc": "3570:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3570:10:1"
															},
															"nativeSrc": "3567:133:1",
															"nodeType": "YulIf",
															"src": "3567:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3484:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3515:1:1",
														"nodeType": "YulTypedName",
														"src": "3515:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3518:1:1",
														"nodeType": "YulTypedName",
														"src": "3518:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3524:3:1",
														"nodeType": "YulTypedName",
														"src": "3524:3:1",
														"type": ""
													}
												],
												"src": "3484:222:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a6575f3560e01c806342966c681161006e57806342966c681461011f57806370a082311461013457806379cc67901461015c57806395d89b411461016f578063a9059cbb14610177578063dd62ed3e1461018a575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b26101c2565b6040516100bf91906105eb565b60405180910390f35b6100db6100d6366004610652565b610252565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b36600461067a565b61026b565b604051601281526020016100bf565b61013261012d3660046106b3565b61028e565b005b6100ef6101423660046106ca565b6001600160a01b03165f9081526020819052604090205490565b61013261016a366004610652565b61029b565b6100b26102b4565b6100db610185366004610652565b6102c3565b6100ef6101983660046106ea565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6060600380546101d19061071b565b80601f01602080910402602001604051908101604052809291908181526020018280546101fd9061071b565b80156102485780601f1061021f57610100808354040283529160200191610248565b820191905f5260205f20905b81548152906001019060200180831161022b57829003601f168201915b5050505050905090565b5f3361025f8185856102d0565b60019150505b92915050565b5f336102788582856102e2565b610283858585610362565b506001949350505050565b61029833826103bf565b50565b6102a68233836102e2565b6102b082826103bf565b5050565b6060600480546101d19061071b565b5f3361025f818585610362565b6102dd83838360016103f3565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811461035c578181101561034e57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61035c84848484035f6103f3565b50505050565b6001600160a01b03831661038b57604051634b637e8f60e11b81525f6004820152602401610345565b6001600160a01b0382166103b45760405163ec442f0560e01b81525f6004820152602401610345565b6102dd8383836104c5565b6001600160a01b0382166103e857604051634b637e8f60e11b81525f6004820152602401610345565b6102b0825f836104c5565b6001600160a01b03841661041c5760405163e602df0560e01b81525f6004820152602401610345565b6001600160a01b03831661044557604051634a1406b160e11b81525f6004820152602401610345565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561035c57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104b791815260200190565b60405180910390a350505050565b6001600160a01b0383166104ef578060025f8282546104e49190610753565b9091555061055f9050565b6001600160a01b0383165f90815260208190526040902054818110156105415760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610345565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661057b57600280548290039055610599565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105de91815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b81811015610617578581018301518582016040015282016105fb565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461064d575f80fd5b919050565b5f8060408385031215610663575f80fd5b61066c83610637565b946020939093013593505050565b5f805f6060848603121561068c575f80fd5b61069584610637565b92506106a360208501610637565b9150604084013590509250925092565b5f602082840312156106c3575f80fd5b5035919050565b5f602082840312156106da575f80fd5b6106e382610637565b9392505050565b5f80604083850312156106fb575f80fd5b61070483610637565b915061071260208401610637565b90509250929050565b600181811c9082168061072f57607f821691505b60208210810361074d57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561026557634e487b7160e01b5f52601160045260245ffdfea2646970667358221220fef29c5df8aece1579a6f2c79531b44f2d89f135c87af57cde204d6d781f0b7e64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x652 JUMP JUMPDEST PUSH2 0x252 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x67A JUMP JUMPDEST PUSH2 0x26B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0x132 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEF PUSH2 0x142 CALLDATASIZE PUSH1 0x4 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x652 JUMP JUMPDEST PUSH2 0x29B JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0x652 JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0x6EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D1 SWAP1 PUSH2 0x71B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FD SWAP1 PUSH2 0x71B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x248 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x248 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x22B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x25F DUP2 DUP6 DUP6 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x278 DUP6 DUP3 DUP6 PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0x283 DUP6 DUP6 DUP6 PUSH2 0x362 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x298 CALLER DUP3 PUSH2 0x3BF JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2A6 DUP3 CALLER DUP4 PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0x2B0 DUP3 DUP3 PUSH2 0x3BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D1 SWAP1 PUSH2 0x71B JUMP JUMPDEST PUSH0 CALLER PUSH2 0x25F DUP2 DUP6 DUP6 PUSH2 0x362 JUMP JUMPDEST PUSH2 0x2DD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3F3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x35C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35C DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x3F3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x38B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x345 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x345 JUMP JUMPDEST PUSH2 0x2DD DUP4 DUP4 DUP4 PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x345 JUMP JUMPDEST PUSH2 0x2B0 DUP3 PUSH0 DUP4 PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x41C JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x345 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x445 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x345 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x35C JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4EF JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x753 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x55F SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x541 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x345 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x57B JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x599 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5DE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x617 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x5FB JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x64D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x663 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x66C DUP4 PUSH2 0x637 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x68C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x695 DUP5 PUSH2 0x637 JUMP JUMPDEST SWAP3 POP PUSH2 0x6A3 PUSH1 0x20 DUP6 ADD PUSH2 0x637 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6E3 DUP3 PUSH2 0x637 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6FB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x704 DUP4 PUSH2 0x637 JUMP JUMPDEST SWAP2 POP PUSH2 0x712 PUSH1 0x20 DUP5 ADD PUSH2 0x637 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x72F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x74D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x265 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID CALLCODE SWAP13 TSTORE 0xF8 0xAE 0xCE ISZERO PUSH26 0xA6F2C79531B44F2D89F135C87AF57CDE204D6D781F0B7E64736F PUSH13 0x63430008180033000000000000 ",
							"sourceMap": "22790:170:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12484:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14777:190;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:1;;1162:22;1144:41;;1132:2;1117:18;14777:190:0;1004:187:1;13586:99:0;13665:12;;13586:99;;;1342:25:1;;;1330:2;1315:18;13586:99:0;1196:177:1;15545:249:0;;;;;;:::i;:::-;;:::i;13437:84::-;;;13511:2;1853:36:1;;1841:2;1826:18;13437:84:0;1711:184:1;22204:89:0;;;;;;:::i;:::-;;:::i;:::-;;13748:118;;;;;;:::i;:::-;-1:-1:-1;;;;;13840:18:0;13813:7;13840:18;;;;;;;;;;;;13748:118;22622:161;;;;;;:::i;:::-;;:::i;12694:95::-;;;:::i;14071:182::-;;;;;;:::i;:::-;;:::i;14316:142::-;;;;;;:::i;:::-;-1:-1:-1;;;;;14423:18:0;;;14396:7;14423:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;14316:142;12484:91;12529:13;12562:5;12555:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12484:91;:::o;14777:190::-;14850:4;7233:10;14906:31;7233:10;14922:7;14931:5;14906:8;:31::i;:::-;14955:4;14948:11;;;14777:190;;;;;:::o;15545:249::-;15632:4;7233:10;15690:37;15706:4;7233:10;15721:5;15690:15;:37::i;:::-;15738:26;15748:4;15754:2;15758:5;15738:9;:26::i;:::-;-1:-1:-1;15782:4:0;;15545:249;-1:-1:-1;;;;15545:249:0:o;22204:89::-;22259:26;7233:10;22279:5;22259;:26::i;:::-;22204:89;:::o;22622:161::-;22698:45;22714:7;7233:10;22737:5;22698:15;:45::i;:::-;22754:21;22760:7;22769:5;22754;:21::i;:::-;22622:161;;:::o;12694:95::-;12741:13;12774:7;12767:14;;;;;:::i;14071:182::-;14140:4;7233:10;14196:27;7233:10;14213:2;14217:5;14196:9;:27::i;19604:130::-;19689:37;19698:5;19705:7;19714:5;19721:4;19689:8;:37::i;:::-;19604:130;;;:::o;21320:487::-;-1:-1:-1;;;;;14423:18:0;;;21420:24;14423:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;21487:37:0;;21483:317;;21564:5;21545:16;:24;21541:132;;;21597:60;;-1:-1:-1;;;21597:60:0;;-1:-1:-1;;;;;3146:32:1;;21597:60:0;;;3128:51:1;3195:18;;;3188:34;;;3238:18;;;3231:34;;;3101:18;;21597:60:0;;;;;;;;21541:132;21716:57;21725:5;21732:7;21760:5;21741:16;:24;21767:5;21716:8;:57::i;:::-;21409:398;21320:487;;;:::o;16179:308::-;-1:-1:-1;;;;;16263:18:0;;16259:88;;16305:30;;-1:-1:-1;;;16305:30:0;;16332:1;16305:30;;;3422:51:1;3395:18;;16305:30:0;3276:203:1;16259:88:0;-1:-1:-1;;;;;16361:16:0;;16357:88;;16401:32;;-1:-1:-1;;;16401:32:0;;16430:1;16401:32;;;3422:51:1;3395:18;;16401:32:0;3276:203:1;16357:88:0;16455:24;16463:4;16469:2;16473:5;16455:7;:24::i;18840:211::-;-1:-1:-1;;;;;18911:21:0;;18907:91;;18956:30;;-1:-1:-1;;;18956:30:0;;18983:1;18956:30;;;3422:51:1;3395:18;;18956:30:0;3276:203:1;18907:91:0;19008:35;19016:7;19033:1;19037:5;19008:7;:35::i;20585:443::-;-1:-1:-1;;;;;20698:19:0;;20694:91;;20741:32;;-1:-1:-1;;;20741:32:0;;20770:1;20741:32;;;3422:51:1;3395:18;;20741:32:0;3276:203:1;20694:91:0;-1:-1:-1;;;;;20799:21:0;;20795:92;;20844:31;;-1:-1:-1;;;20844:31:0;;20872:1;20844:31;;;3422:51:1;3395:18;;20844:31:0;3276:203:1;20795:92:0;-1:-1:-1;;;;;20897:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;20943:78;;;;20994:7;-1:-1:-1;;;;;20978:31:0;20987:5;-1:-1:-1;;;;;20978:31:0;;21003:5;20978:31;;;;1342:25:1;;1330:2;1315:18;;1196:177;20978:31:0;;;;;;;;20585:443;;;;:::o;16811:1135::-;-1:-1:-1;;;;;16901:18:0;;16897:552;;17055:5;17039:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;16897:552:0;;-1:-1:-1;16897:552:0;;-1:-1:-1;;;;;17115:15:0;;17093:19;17115:15;;;;;;;;;;;17149:19;;;17145:117;;;17196:50;;-1:-1:-1;;;17196:50:0;;-1:-1:-1;;;;;3146:32:1;;17196:50:0;;;3128:51:1;3195:18;;;3188:34;;;3238:18;;;3231:34;;;3101:18;;17196:50:0;2926:345:1;17145:117:0;-1:-1:-1;;;;;17385:15:0;;:9;:15;;;;;;;;;;17403:19;;;;17385:37;;16897:552;-1:-1:-1;;;;;17465:16:0;;17461:435;;17631:12;:21;;;;;;;17461:435;;;-1:-1:-1;;;;;17847:13:0;;:9;:13;;;;;;;;;;:22;;;;;;17461:435;17928:2;-1:-1:-1;;;;;17913:25:0;17922:4;-1:-1:-1;;;;;17913:25:0;;17932:5;17913:25;;;;1342::1;;1330:2;1315:18;;1196:177;17913:25:0;;;;;;;;16811:1135;;;:::o;14:548:1:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:1;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:1:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:1;;1900:180;-1:-1:-1;1900:180:1:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:1:o;2276:260::-;2344:6;2352;2405:2;2393:9;2384:7;2380:23;2376:32;2373:52;;;2421:1;2418;2411:12;2373:52;2444:29;2463:9;2444:29;:::i;:::-;2434:39;;2492:38;2526:2;2515:9;2511:18;2492:38;:::i;:::-;2482:48;;2276:260;;;;;:::o;2541:380::-;2620:1;2616:12;;;;2663;;;2684:61;;2738:4;2730:6;2726:17;2716:27;;2684:61;2791:2;2783:6;2780:14;2760:18;2757:38;2754:161;;2837:10;2832:3;2828:20;2825:1;2818:31;2872:4;2869:1;2862:15;2900:4;2897:1;2890:15;2754:161;;2541:380;;;:::o;3484:222::-;3549:9;;;3570:10;;;3567:133;;;3622:10;3617:3;3613:20;3610:1;3603:31;3657:4;3654:1;3647:15;3685:4;3682:1;3675:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "392000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24735",
								"balanceOf(address)": "2559",
								"burn(uint256)": "50916",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "265",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51304",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22790,
									"end": 22960,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 22790,
									"end": 22960,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22790,
									"end": 22960,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22847,
									"end": 22957,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 22847,
									"end": 22957,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22847,
									"end": 22957,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22847,
									"end": 22957,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22847,
									"end": 22957,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22847,
									"end": 22957,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22847,
									"end": 22957,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22847,
									"end": 22957,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22847,
									"end": 22957,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22847,
									"end": 22957,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22847,
									"end": 22957,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "29B6B0B93A1022B732B933BC902A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "14D155"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12373,
									"end": 12378,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12365,
									"end": 12370,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12365,
									"end": 12378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12365,
									"end": 12378,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12365,
									"end": 12378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12365,
									"end": 12378,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12365,
									"end": 12378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12365,
									"end": 12378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12365,
									"end": 12378,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12365,
									"end": 12378,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12365,
									"end": 12378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12389,
									"end": 12396,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12389,
									"end": 12406,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12399,
									"end": 12406,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12389,
									"end": 12396,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12389,
									"end": 12406,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12389,
									"end": 12406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12389,
									"end": 12406,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 12389,
									"end": 12406,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12389,
									"end": 12406,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12298,
									"end": 12414,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22907,
									"end": 22949,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 22913,
									"end": 22923,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 22938,
									"end": 22948,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 22938,
									"end": 22946,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 22938,
									"end": 22946,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22938,
									"end": 22946,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 22938,
									"end": 22948,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22938,
									"end": 22948,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 22938,
									"end": 22948,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22938,
									"end": 22948,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 22938,
									"end": 22948,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22934,
									"end": 22948,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 22934,
									"end": 22948,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22934,
									"end": 22936,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 22934,
									"end": 22948,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 22934,
									"end": 22948,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22934,
									"end": 22948,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 22934,
									"end": 22948,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22924,
									"end": 22948,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 22924,
									"end": 22948,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22924,
									"end": 22933,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "746A528800"
								},
								{
									"begin": 22924,
									"end": 22948,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 22924,
									"end": 22948,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22924,
									"end": 22948,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 22924,
									"end": 22948,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22907,
									"end": 22912,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 22907,
									"end": 22949,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22907,
									"end": 22949,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 22907,
									"end": 22949,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22790,
									"end": 22960,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 22790,
									"end": 22960,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13437,
									"end": 13521,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 13437,
									"end": 13521,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13511,
									"end": 13513,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 13511,
									"end": 13513,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13437,
									"end": 13521,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18299,
									"end": 18512,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 18299,
									"end": 18512,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 18370,
									"end": 18391,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18370,
									"end": 18391,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18366,
									"end": 18459,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18366,
									"end": 18459,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18415,
									"end": 18447,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18415,
									"end": 18447,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 18415,
									"end": 18447,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18415,
									"end": 18447,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18444,
									"end": 18445,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18415,
									"end": 18447,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18415,
									"end": 18447,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18415,
									"end": 18447,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4529,
									"end": 4580,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4502,
									"end": 4520,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4502,
									"end": 4520,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 18415,
									"end": 18447,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 18415,
									"end": 18447,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18415,
									"end": 18447,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18415,
									"end": 18447,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18415,
									"end": 18447,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18415,
									"end": 18447,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18415,
									"end": 18447,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18415,
									"end": 18447,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18415,
									"end": 18447,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18366,
									"end": 18459,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18366,
									"end": 18459,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18469,
									"end": 18504,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 18485,
									"end": 18486,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18489,
									"end": 18496,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18498,
									"end": 18503,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18469,
									"end": 18476,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 18469,
									"end": 18504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18469,
									"end": 18504,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 18469,
									"end": 18504,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18299,
									"end": 18512,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18299,
									"end": 18512,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18299,
									"end": 18512,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16811,
									"end": 17946,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16811,
									"end": 17946,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 16901,
									"end": 16919,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16901,
									"end": 16919,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16897,
									"end": 17449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 16897,
									"end": 17449,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17055,
									"end": 17060,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17051,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17039,
									"end": 17051,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 17039,
									"end": 17060,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17039,
									"end": 17060,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16897,
									"end": 17449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 16897,
									"end": 17449,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16897,
									"end": 17449,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16897,
									"end": 17449,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 16897,
									"end": 17449,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17115,
									"end": 17130,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17115,
									"end": 17130,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17093,
									"end": 17112,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17115,
									"end": 17130,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17115,
									"end": 17130,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17115,
									"end": 17130,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17115,
									"end": 17130,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17115,
									"end": 17130,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17115,
									"end": 17130,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17115,
									"end": 17130,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17115,
									"end": 17130,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17115,
									"end": 17130,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17115,
									"end": 17130,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17115,
									"end": 17130,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17149,
									"end": 17168,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17149,
									"end": 17168,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17149,
									"end": 17168,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17145,
									"end": 17262,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17145,
									"end": 17262,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 17145,
									"end": 17262,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17196,
									"end": 17246,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17196,
									"end": 17246,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17196,
									"end": 17246,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17196,
									"end": 17246,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4941,
									"end": 4973,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4941,
									"end": 4973,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 17196,
									"end": 17246,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17196,
									"end": 17246,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17196,
									"end": 17246,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4923,
									"end": 4974,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4990,
									"end": 5008,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4990,
									"end": 5008,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4990,
									"end": 5008,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4983,
									"end": 5017,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4983,
									"end": 5017,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4983,
									"end": 5017,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5033,
									"end": 5051,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 5033,
									"end": 5051,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5033,
									"end": 5051,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5026,
									"end": 5060,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5026,
									"end": 5060,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5026,
									"end": 5060,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4896,
									"end": 4914,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 4896,
									"end": 4914,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 17196,
									"end": 17246,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 4721,
									"end": 5066,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 17145,
									"end": 17262,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 17145,
									"end": 17262,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17385,
									"end": 17400,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17385,
									"end": 17400,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17385,
									"end": 17394,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17385,
									"end": 17400,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17385,
									"end": 17400,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17385,
									"end": 17400,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17385,
									"end": 17400,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17385,
									"end": 17400,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17385,
									"end": 17400,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17385,
									"end": 17400,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17385,
									"end": 17400,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17385,
									"end": 17400,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17385,
									"end": 17400,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17403,
									"end": 17422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17403,
									"end": 17422,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17403,
									"end": 17422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17403,
									"end": 17422,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17385,
									"end": 17422,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17385,
									"end": 17422,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16897,
									"end": 17449,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 16897,
									"end": 17449,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17465,
									"end": 17481,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17465,
									"end": 17481,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17461,
									"end": 17896,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 17461,
									"end": 17896,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17631,
									"end": 17643,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17631,
									"end": 17652,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17631,
									"end": 17652,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17631,
									"end": 17652,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17631,
									"end": 17652,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17631,
									"end": 17652,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17631,
									"end": 17652,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17631,
									"end": 17652,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17461,
									"end": 17896,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 17461,
									"end": 17896,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17461,
									"end": 17896,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 17461,
									"end": 17896,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17847,
									"end": 17860,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17847,
									"end": 17860,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17847,
									"end": 17856,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17847,
									"end": 17860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17847,
									"end": 17860,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17847,
									"end": 17860,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17847,
									"end": 17860,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17847,
									"end": 17860,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17847,
									"end": 17860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17847,
									"end": 17860,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17847,
									"end": 17860,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17847,
									"end": 17860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17847,
									"end": 17860,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17847,
									"end": 17869,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17847,
									"end": 17869,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17847,
									"end": 17869,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17847,
									"end": 17869,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17847,
									"end": 17869,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17847,
									"end": 17869,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17461,
									"end": 17896,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 17461,
									"end": 17896,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17928,
									"end": 17930,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17913,
									"end": 17938,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17922,
									"end": 17926,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17913,
									"end": 17938,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17913,
									"end": 17938,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 17932,
									"end": 17937,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17913,
									"end": 17938,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17913,
									"end": 17938,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17913,
									"end": 17938,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 17913,
									"end": 17938,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5217,
									"end": 5242,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5217,
									"end": 5242,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5205,
									"end": 5207,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5071,
									"end": 5248,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 17913,
									"end": 17938,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 17913,
									"end": 17938,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17913,
									"end": 17938,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17913,
									"end": 17938,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17913,
									"end": 17938,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17913,
									"end": 17938,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17913,
									"end": 17938,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17913,
									"end": 17938,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17913,
									"end": 17938,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 16811,
									"end": 17946,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16811,
									"end": 17946,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16811,
									"end": 17946,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16811,
									"end": 17946,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1764,
									"end": 1766,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2500,
									"end": 2506,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2546,
									"end": 2572,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1944,
									"end": 1951,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1941,
									"end": 1942,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2027,
									"end": 2053,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2094,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1934,
									"end": 1937,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2194,
									"end": 2200,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2185,
									"end": 2192,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2249,
									"end": 2275,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2338,
									"end": 2339,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2350,
									"end": 2353,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2330,
									"end": 2354,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2363,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2322,
									"end": 2364,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2307,
									"end": 2365,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2426,
									"end": 2427,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2414,
									"end": 2415,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2410,
									"end": 2424,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2406,
									"end": 2428,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2393,
									"end": 2429,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1351,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2701,
									"end": 2828,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2701,
									"end": 2828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2762,
									"end": 2772,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 2757,
									"end": 2760,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 2753,
									"end": 2773,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2750,
									"end": 2751,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2743,
									"end": 2774,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2793,
									"end": 2797,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2790,
									"end": 2791,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2783,
									"end": 2798,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2817,
									"end": 2821,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2814,
									"end": 2815,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2807,
									"end": 2822,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2922,
									"end": 2923,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2959,
									"end": 2964,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2922,
									"end": 2923,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2994,
									"end": 3001,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2984,
									"end": 2992,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2981,
									"end": 3002,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3053,
									"end": 3057,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3049,
									"end": 3050,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3045,
									"end": 3051,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3041,
									"end": 3058,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3035,
									"end": 3039,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3032,
									"end": 3059,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3082,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3029,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3029,
									"end": 3082,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 3062,
									"end": 3080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3112,
									"end": 3119,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3102,
									"end": 3110,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3098,
									"end": 3120,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3150,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3150,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 3095,
									"end": 3150,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3132,
									"end": 3148,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3132,
									"end": 3148,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3132,
									"end": 3148,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3132,
									"end": 3148,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3150,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 3095,
									"end": 3150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3211,
									"end": 3233,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3211,
									"end": 3233,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3211,
									"end": 3233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3211,
									"end": 3233,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3171,
									"end": 3186,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3171,
									"end": 3186,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3171,
									"end": 3186,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3171,
									"end": 3186,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2973,
									"end": 3243,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2977,
									"end": 2980,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2833,
									"end": 3249,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2833,
									"end": 3249,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3303,
									"end": 3308,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3333,
									"end": 3341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3323,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3323,
									"end": 3403,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3374,
									"end": 3375,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3388,
									"end": 3393,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3388,
									"end": 3393,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3323,
									"end": 3403,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3323,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3422,
									"end": 3426,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3412,
									"end": 3488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 3412,
									"end": 3488,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3459,
									"end": 3460,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3473,
									"end": 3478,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3473,
									"end": 3478,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3412,
									"end": 3488,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 3412,
									"end": 3488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3504,
									"end": 3508,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3522,
									"end": 3523,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3590,
									"end": 3591,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 3497,
									"end": 3715,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 3517,
									"end": 3576,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3547,
									"end": 3548,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3538,
									"end": 3548,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3538,
									"end": 3548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3561,
									"end": 3566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3561,
									"end": 3566,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3561,
									"end": 3566,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 3585,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3622,
									"end": 3625,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 3612,
									"end": 3620,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3626,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3606,
									"end": 3649,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3606,
									"end": 3649,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3606,
									"end": 3649,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3629,
									"end": 3647,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3629,
									"end": 3647,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 3629,
									"end": 3647,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3629,
									"end": 3647,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3629,
									"end": 3647,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3685,
									"end": 3686,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3671,
									"end": 3687,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3671,
									"end": 3687,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3700,
									"end": 3705,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3700,
									"end": 3705,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3715,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 3497,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3715,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3799,
									"end": 3801,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3789,
									"end": 3797,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3786,
									"end": 3802,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3771,
									"end": 3784,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3767,
									"end": 3803,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3761,
									"end": 3763,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 3751,
									"end": 3759,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3748,
									"end": 3764,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3743,
									"end": 3745,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 3737,
									"end": 3741,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3734,
									"end": 3746,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3730,
									"end": 3765,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3727,
									"end": 3804,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3724,
									"end": 3883,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3724,
									"end": 3883,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3724,
									"end": 3883,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3836,
									"end": 3855,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3836,
									"end": 3855,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3836,
									"end": 3855,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3868,
									"end": 3873,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3868,
									"end": 3873,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3724,
									"end": 3883,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3724,
									"end": 3883,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3915,
									"end": 3949,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 3940,
									"end": 3948,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3934,
									"end": 3938,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3915,
									"end": 3949,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 3915,
									"end": 3949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3915,
									"end": 3949,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 3915,
									"end": 3949,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3985,
									"end": 3991,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3981,
									"end": 3982,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3977,
									"end": 3983,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3973,
									"end": 3992,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3964,
									"end": 3971,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3961,
									"end": 3993,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3958,
									"end": 4016,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3958,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3958,
									"end": 4016,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3996,
									"end": 4014,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3996,
									"end": 4014,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 3996,
									"end": 4014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3996,
									"end": 4014,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3996,
									"end": 4014,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4034,
									"end": 4054,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4034,
									"end": 4054,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3254,
									"end": 4060,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3254,
									"end": 4060,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4065,
									"end": 4205,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 4065,
									"end": 4205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4123,
									"end": 4128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4152,
									"end": 4199,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 4193,
									"end": 4197,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 4183,
									"end": 4191,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4179,
									"end": 4198,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4173,
									"end": 4177,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4152,
									"end": 4199,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 4152,
									"end": 4199,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4152,
									"end": 4199,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 4152,
									"end": 4199,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4143,
									"end": 4199,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 4065,
									"end": 4205,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4065,
									"end": 4205,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4210,
									"end": 4378,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 4210,
									"end": 4378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4283,
									"end": 4292,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4283,
									"end": 4292,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4283,
									"end": 4292,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4314,
									"end": 4323,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4314,
									"end": 4323,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4331,
									"end": 4346,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4331,
									"end": 4346,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4331,
									"end": 4346,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4325,
									"end": 4347,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4325,
									"end": 4347,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4311,
									"end": 4348,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4301,
									"end": 4372,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 4301,
									"end": 4372,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4352,
									"end": 4370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 4352,
									"end": 4370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 4352,
									"end": 4370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4591,
									"end": 4716,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 4591,
									"end": 4716,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4656,
									"end": 4665,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4656,
									"end": 4665,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4656,
									"end": 4665,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4677,
									"end": 4687,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4677,
									"end": 4687,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4677,
									"end": 4687,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4674,
									"end": 4710,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4674,
									"end": 4710,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 4674,
									"end": 4710,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4690,
									"end": 4708,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 4690,
									"end": 4708,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 4690,
									"end": 4708,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5071,
									"end": 5248,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 5071,
									"end": 5248,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 22790,
									"end": 22960,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22790,
									"end": 22960,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22790,
									"end": 22960,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22790,
									"end": 22960,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22790,
									"end": 22960,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22790,
									"end": 22960,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22790,
									"end": 22960,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fef29c5df8aece1579a6f2c79531b44f2d89f135c87af57cde204d6d781f0b7e64736f6c63430008180033",
									".code": [
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22790,
											"end": 22960,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 12484,
											"end": 12575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12484,
											"end": 12575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 14777,
											"end": 14967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14777,
											"end": 14967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13586,
											"end": 13685,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13586,
											"end": 13685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13665,
											"end": 13677,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13665,
											"end": 13677,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13586,
											"end": 13685,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13586,
											"end": 13685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13586,
											"end": 13685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13586,
											"end": 13685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13586,
											"end": 13685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15545,
											"end": 15794,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15545,
											"end": 15794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15545,
											"end": 15794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 15545,
											"end": 15794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15545,
											"end": 15794,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15545,
											"end": 15794,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15545,
											"end": 15794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 15545,
											"end": 15794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15545,
											"end": 15794,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15545,
											"end": 15794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15545,
											"end": 15794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15545,
											"end": 15794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13437,
											"end": 13521,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13437,
											"end": 13521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13437,
											"end": 13521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13437,
											"end": 13521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13511,
											"end": 13513,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13437,
											"end": 13521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22204,
											"end": 22293,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22204,
											"end": 22293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22204,
											"end": 22293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 22204,
											"end": 22293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 22204,
											"end": 22293,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22204,
											"end": 22293,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22204,
											"end": 22293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22204,
											"end": 22293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22204,
											"end": 22293,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 22204,
											"end": 22293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22204,
											"end": 22293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 22204,
											"end": 22293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22204,
											"end": 22293,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 22204,
											"end": 22293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22204,
											"end": 22293,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13748,
											"end": 13866,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13748,
											"end": 13866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13748,
											"end": 13866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13748,
											"end": 13866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13748,
											"end": 13866,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13748,
											"end": 13866,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13748,
											"end": 13866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13748,
											"end": 13866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13748,
											"end": 13866,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13748,
											"end": 13866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13840,
											"end": 13858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13813,
											"end": 13820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13840,
											"end": 13858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13840,
											"end": 13858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13840,
											"end": 13858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13840,
											"end": 13858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13840,
											"end": 13858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13840,
											"end": 13858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13840,
											"end": 13858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13840,
											"end": 13858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13840,
											"end": 13858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13840,
											"end": 13858,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13840,
											"end": 13858,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13840,
											"end": 13858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13748,
											"end": 13866,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22783,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22622,
											"end": 22783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 22622,
											"end": 22783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 22622,
											"end": 22783,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22783,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22622,
											"end": 22783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 22622,
											"end": 22783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22783,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 22622,
											"end": 22783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 22622,
											"end": 22783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12694,
											"end": 12789,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 12694,
											"end": 12789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12694,
											"end": 12789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12694,
											"end": 12789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 12694,
											"end": 12789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14071,
											"end": 14253,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 14071,
											"end": 14253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14071,
											"end": 14253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 14071,
											"end": 14253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 14071,
											"end": 14253,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14071,
											"end": 14253,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14071,
											"end": 14253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 14071,
											"end": 14253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14071,
											"end": 14253,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 14071,
											"end": 14253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14071,
											"end": 14253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14071,
											"end": 14253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14316,
											"end": 14458,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 14316,
											"end": 14458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14316,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14316,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 14316,
											"end": 14458,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14316,
											"end": 14458,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14316,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14316,
											"end": 14458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14316,
											"end": 14458,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 14316,
											"end": 14458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14396,
											"end": 14403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14434,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14316,
											"end": 14458,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12529,
											"end": 12542,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12562,
											"end": 12567,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12555,
											"end": 12567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12555,
											"end": 12567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12555,
											"end": 12567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12484,
											"end": 12575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12484,
											"end": 12575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14850,
											"end": 14854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7233,
											"end": 7243,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14906,
											"end": 14937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7233,
											"end": 7243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14922,
											"end": 14929,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14931,
											"end": 14936,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14906,
											"end": 14914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14906,
											"end": 14937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14906,
											"end": 14937,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 14906,
											"end": 14937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14955,
											"end": 14959,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14948,
											"end": 14959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14948,
											"end": 14959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14777,
											"end": 14967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14777,
											"end": 14967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15545,
											"end": 15794,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15545,
											"end": 15794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15632,
											"end": 15636,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7233,
											"end": 7243,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15690,
											"end": 15727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 15706,
											"end": 15710,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7243,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15721,
											"end": 15726,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15690,
											"end": 15705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 15690,
											"end": 15727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15690,
											"end": 15727,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 15690,
											"end": 15727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15738,
											"end": 15764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 15748,
											"end": 15752,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15754,
											"end": 15756,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15758,
											"end": 15763,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15738,
											"end": 15747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15738,
											"end": 15764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15738,
											"end": 15764,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 15738,
											"end": 15764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15782,
											"end": 15786,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15782,
											"end": 15786,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15545,
											"end": 15794,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15545,
											"end": 15794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22204,
											"end": 22293,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 22204,
											"end": 22293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22259,
											"end": 22285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 7233,
											"end": 7243,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22279,
											"end": 22284,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22259,
											"end": 22264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 22259,
											"end": 22285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22259,
											"end": 22285,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 22259,
											"end": 22285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22204,
											"end": 22293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22204,
											"end": 22293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22783,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 22622,
											"end": 22783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22698,
											"end": 22743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 22714,
											"end": 22721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7233,
											"end": 7243,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22737,
											"end": 22742,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22698,
											"end": 22713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 22698,
											"end": 22743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22698,
											"end": 22743,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 22698,
											"end": 22743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22754,
											"end": 22775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 22760,
											"end": 22767,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22769,
											"end": 22774,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22754,
											"end": 22759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 22754,
											"end": 22775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22754,
											"end": 22775,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 22754,
											"end": 22775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22622,
											"end": 22783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12694,
											"end": 12789,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 12694,
											"end": 12789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12741,
											"end": 12754,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12774,
											"end": 12781,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12767,
											"end": 12781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12767,
											"end": 12781,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12767,
											"end": 12781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 12767,
											"end": 12781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12767,
											"end": 12781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12767,
											"end": 12781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14071,
											"end": 14253,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14071,
											"end": 14253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7233,
											"end": 7243,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7233,
											"end": 7243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14213,
											"end": 14215,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14217,
											"end": 14222,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14196,
											"end": 14205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14196,
											"end": 14223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19604,
											"end": 19734,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 19604,
											"end": 19734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 19698,
											"end": 19703,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19705,
											"end": 19712,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19714,
											"end": 19719,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19721,
											"end": 19725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19689,
											"end": 19697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 19689,
											"end": 19726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19726,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 19689,
											"end": 19726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19604,
											"end": 19734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19604,
											"end": 19734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19604,
											"end": 19734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19604,
											"end": 19734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21320,
											"end": 21807,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 21320,
											"end": 21807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21420,
											"end": 21444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14434,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14441,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14423,
											"end": 14450,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21487,
											"end": 21524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21487,
											"end": 21524,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21483,
											"end": 21800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 21483,
											"end": 21800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21564,
											"end": 21569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21545,
											"end": 21561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21545,
											"end": 21569,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21541,
											"end": 21673,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21541,
											"end": 21673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 21541,
											"end": 21673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21597,
											"end": 21657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21597,
											"end": 21657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21597,
											"end": 21657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21597,
											"end": 21657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3146,
											"end": 3178,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3178,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21597,
											"end": 21657,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21597,
											"end": 21657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21597,
											"end": 21657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3222,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3256,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3238,
											"end": 3256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3265,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21597,
											"end": 21657,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 21597,
											"end": 21657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21597,
											"end": 21657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21597,
											"end": 21657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21597,
											"end": 21657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21597,
											"end": 21657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21597,
											"end": 21657,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21597,
											"end": 21657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21597,
											"end": 21657,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21541,
											"end": 21673,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 21541,
											"end": 21673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21716,
											"end": 21773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 21725,
											"end": 21730,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21739,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21760,
											"end": 21765,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21741,
											"end": 21757,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21741,
											"end": 21765,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21767,
											"end": 21772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21716,
											"end": 21724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 21716,
											"end": 21773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21716,
											"end": 21773,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 21716,
											"end": 21773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21409,
											"end": 21807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21320,
											"end": 21807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21320,
											"end": 21807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21320,
											"end": 21807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21320,
											"end": 21807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16179,
											"end": 16487,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16179,
											"end": 16487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16263,
											"end": 16281,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16263,
											"end": 16281,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16259,
											"end": 16347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 16259,
											"end": 16347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16305,
											"end": 16335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16305,
											"end": 16335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16305,
											"end": 16335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16305,
											"end": 16335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16332,
											"end": 16333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16305,
											"end": 16335,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16305,
											"end": 16335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16305,
											"end": 16335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16305,
											"end": 16335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3276,
											"end": 3479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16259,
											"end": 16347,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 16259,
											"end": 16347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16361,
											"end": 16377,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16361,
											"end": 16377,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16357,
											"end": 16445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 16357,
											"end": 16445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16401,
											"end": 16433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16401,
											"end": 16433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16401,
											"end": 16433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16401,
											"end": 16433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16430,
											"end": 16431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16401,
											"end": 16433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16401,
											"end": 16433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16401,
											"end": 16433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16401,
											"end": 16433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3276,
											"end": 3479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16357,
											"end": 16445,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 16357,
											"end": 16445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16455,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 16463,
											"end": 16467,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16469,
											"end": 16471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16473,
											"end": 16478,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16455,
											"end": 16462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 16455,
											"end": 16479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18840,
											"end": 19051,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 18840,
											"end": 19051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18911,
											"end": 18932,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18911,
											"end": 18932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18907,
											"end": 18998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 18907,
											"end": 18998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 18986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18956,
											"end": 18986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18956,
											"end": 18986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 18986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18983,
											"end": 18984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18956,
											"end": 18986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18956,
											"end": 18986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18956,
											"end": 18986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18956,
											"end": 18986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3276,
											"end": 3479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18907,
											"end": 18998,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 18907,
											"end": 18998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19008,
											"end": 19043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 19016,
											"end": 19023,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19033,
											"end": 19034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19037,
											"end": 19042,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19008,
											"end": 19015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 19008,
											"end": 19043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20585,
											"end": 21028,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 20585,
											"end": 21028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20698,
											"end": 20717,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20698,
											"end": 20717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20694,
											"end": 20785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 20694,
											"end": 20785,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20741,
											"end": 20773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20741,
											"end": 20773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20741,
											"end": 20773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20741,
											"end": 20773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20770,
											"end": 20771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20741,
											"end": 20773,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20741,
											"end": 20773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20741,
											"end": 20773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20741,
											"end": 20773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3276,
											"end": 3479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20694,
											"end": 20785,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 20694,
											"end": 20785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20799,
											"end": 20820,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20799,
											"end": 20820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20795,
											"end": 20887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20795,
											"end": 20887,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20844,
											"end": 20875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20844,
											"end": 20875,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20844,
											"end": 20875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20844,
											"end": 20875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20872,
											"end": 20873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20844,
											"end": 20875,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20844,
											"end": 20875,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20844,
											"end": 20875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3395,
											"end": 3413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20844,
											"end": 20875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3276,
											"end": 3479,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20795,
											"end": 20887,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20795,
											"end": 20887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20897,
											"end": 20915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20915,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20897,
											"end": 20915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20908,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20897,
											"end": 20915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20897,
											"end": 20915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20897,
											"end": 20915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20915,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20915,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20924,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20924,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20924,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20924,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20924,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20932,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20897,
											"end": 20932,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20943,
											"end": 21021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20943,
											"end": 21021,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20943,
											"end": 21021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 20943,
											"end": 21021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21001,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20978,
											"end": 21009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20987,
											"end": 20992,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20978,
											"end": 21009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20978,
											"end": 21009,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21003,
											"end": 21008,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20978,
											"end": 21009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20978,
											"end": 21009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20978,
											"end": 21009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 20978,
											"end": 21009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20978,
											"end": 21009,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 20978,
											"end": 21009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20978,
											"end": 21009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20978,
											"end": 21009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20978,
											"end": 21009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20978,
											"end": 21009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20978,
											"end": 21009,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20978,
											"end": 21009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20978,
											"end": 21009,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20585,
											"end": 21028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20585,
											"end": 21028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20585,
											"end": 21028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20585,
											"end": 21028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20585,
											"end": 21028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16811,
											"end": 17946,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 16811,
											"end": 17946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16901,
											"end": 16919,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16901,
											"end": 16919,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16897,
											"end": 17449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 16897,
											"end": 17449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17055,
											"end": 17060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17051,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17039,
											"end": 17051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 17039,
											"end": 17060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17060,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16897,
											"end": 17449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 16897,
											"end": 17449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16897,
											"end": 17449,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16897,
											"end": 17449,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 16897,
											"end": 17449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17115,
											"end": 17130,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17130,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17093,
											"end": 17112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17115,
											"end": 17130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17115,
											"end": 17130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17130,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17115,
											"end": 17130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17130,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17115,
											"end": 17130,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17168,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17145,
											"end": 17262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17145,
											"end": 17262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 17145,
											"end": 17262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17196,
											"end": 17246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17196,
											"end": 17246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17196,
											"end": 17246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17196,
											"end": 17246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3146,
											"end": 3178,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3178,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17196,
											"end": 17246,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17196,
											"end": 17246,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17196,
											"end": 17246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3128,
											"end": 3179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3222,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3256,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3238,
											"end": 3256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3265,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17196,
											"end": 17246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2926,
											"end": 3271,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17145,
											"end": 17262,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 17145,
											"end": 17262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17385,
											"end": 17400,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17385,
											"end": 17400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17385,
											"end": 17394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17385,
											"end": 17400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17385,
											"end": 17400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17385,
											"end": 17400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17385,
											"end": 17400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17385,
											"end": 17400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17385,
											"end": 17400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17385,
											"end": 17400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17385,
											"end": 17400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17385,
											"end": 17400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17385,
											"end": 17400,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17403,
											"end": 17422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17403,
											"end": 17422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17403,
											"end": 17422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17403,
											"end": 17422,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17385,
											"end": 17422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17385,
											"end": 17422,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16897,
											"end": 17449,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 16897,
											"end": 17449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17465,
											"end": 17481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17465,
											"end": 17481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 17461,
											"end": 17896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17631,
											"end": 17643,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17631,
											"end": 17652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17631,
											"end": 17652,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17631,
											"end": 17652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17631,
											"end": 17652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17631,
											"end": 17652,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17631,
											"end": 17652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17631,
											"end": 17652,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 17461,
											"end": 17896,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17896,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 17461,
											"end": 17896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17847,
											"end": 17860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17847,
											"end": 17860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17847,
											"end": 17856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17847,
											"end": 17860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17847,
											"end": 17860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17847,
											"end": 17860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17847,
											"end": 17860,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17847,
											"end": 17860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17847,
											"end": 17860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17847,
											"end": 17860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17847,
											"end": 17860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17847,
											"end": 17860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17847,
											"end": 17860,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17847,
											"end": 17869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17847,
											"end": 17869,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17847,
											"end": 17869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17847,
											"end": 17869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17847,
											"end": 17869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17847,
											"end": 17869,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17896,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 17461,
											"end": 17896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17928,
											"end": 17930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17913,
											"end": 17938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17922,
											"end": 17926,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17913,
											"end": 17938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17913,
											"end": 17938,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17932,
											"end": 17937,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17913,
											"end": 17938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17913,
											"end": 17938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17913,
											"end": 17938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 17913,
											"end": 17938,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17913,
											"end": 17938,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 17913,
											"end": 17938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17913,
											"end": 17938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17913,
											"end": 17938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17913,
											"end": 17938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17913,
											"end": 17938,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17913,
											"end": 17938,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17913,
											"end": 17938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17913,
											"end": 17938,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16811,
											"end": 17946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16811,
											"end": 17946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16811,
											"end": 17946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16811,
											"end": 17946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2199,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2183,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2195,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2200,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2255,
											"end": 2264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2236,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2265,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2085,
											"end": 2271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2344,
											"end": 2350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2402,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2403,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2408,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2425,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2373,
											"end": 2425,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2419,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2423,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2425,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2373,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2463,
											"end": 2472,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2444,
											"end": 2473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2473,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2444,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2473,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2526,
											"end": 2528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2515,
											"end": 2524,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 2529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2492,
											"end": 2530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2530,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2492,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2482,
											"end": 2530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2921,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2541,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2616,
											"end": 2628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2616,
											"end": 2628,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2616,
											"end": 2628,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2616,
											"end": 2628,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2675,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2675,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2684,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2684,
											"end": 2745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2742,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2730,
											"end": 2736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2743,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2684,
											"end": 2745,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2684,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2791,
											"end": 2793,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2789,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2794,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2795,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2754,
											"end": 2915,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2837,
											"end": 2847,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2832,
											"end": 2835,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2828,
											"end": 2848,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2876,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2869,
											"end": 2870,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2862,
											"end": 2877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2900,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2905,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2915,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2754,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2921,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3706,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3484,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3580,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3580,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3700,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3567,
											"end": 3700,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3632,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3617,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3613,
											"end": 3633,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3603,
											"end": 3634,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3661,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3654,
											"end": 3655,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3647,
											"end": 3662,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3685,
											"end": 3689,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3682,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"SmartEnergyToken/contracts/SmartEnergyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SmartEnergyToken/contracts/SmartEnergyToken.sol\":\"SmartEnergyToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"SmartEnergyToken/contracts/SmartEnergyToken.sol\":{\"keccak256\":\"0x4f7f8e1f21ae9dc91d9f71ee4623606c3a05c04b06b9c95edf80771033db4f93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c498c9e91b1485445f7fe2966b31674c0cb94d1d07ac0f05fb99280b12f98f9\",\"dweb:/ipfs/QmYs9xSA4CcH7aaKLg2zgM9omWmwMGYDweRQXES9dnapkK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 275,
								"contract": "SmartEnergyToken/contracts/SmartEnergyToken.sol:SmartEnergyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 281,
								"contract": "SmartEnergyToken/contracts/SmartEnergyToken.sol:SmartEnergyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 283,
								"contract": "SmartEnergyToken/contracts/SmartEnergyToken.sol:SmartEnergyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 285,
								"contract": "SmartEnergyToken/contracts/SmartEnergyToken.sol:SmartEnergyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 287,
								"contract": "SmartEnergyToken/contracts/SmartEnergyToken.sol:SmartEnergyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"SmartEnergyToken/contracts/SmartEnergyToken.sol": {
				"ast": {
					"absolutePath": "SmartEnergyToken/contracts/SmartEnergyToken.sol",
					"exportedSymbols": {
						"Context": [
							164
						],
						"ERC20": [
							767
						],
						"ERC20Burnable": [
							807
						],
						"IERC1155Errors": [
							136
						],
						"IERC20": [
							240
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							262
						],
						"IERC721Errors": [
							89
						],
						"SmartEnergyToken": [
							835
						]
					},
					"id": 836,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "60:142:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "214:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "234:314:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "560:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "593:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "585:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "585:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "609:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "601:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "626:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "618:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "584:49:0"
									},
									"src": "554:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "642:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "809:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "836:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "828:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:16:0"
									},
									"src": "803:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "852:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1026:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1055:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1047:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1047:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1046:18:0"
									},
									"src": "1020:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1073:350:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1435:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1470:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1462:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1487:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1479:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1506:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1498:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:52:0"
									},
									"src": "1429:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1522:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1711:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1740:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1732:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1732:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1731:18:0"
									},
									"src": "1705:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1758:198:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "1968:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1996:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1988:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:17:0"
									},
									"src": "1962:43:0"
								}
							],
							"scope": 836,
							"src": "204:1804:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2012:144:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2168:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2189:223:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2424:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2451:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2443:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:15:0"
									},
									"src": "2418:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2466:135:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2613:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2644:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2636:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2636:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2635:17:0"
									},
									"src": "2607:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2661:294:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2967:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2996:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2988:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3012:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3004:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3029:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3021:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2987:48:0"
									},
									"src": "2961:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3044:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3211:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3239:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3231:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3231:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3230:16:0"
									},
									"src": "3205:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3477:251:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3740:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3775:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3767:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3793:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3785:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3766:35:0"
									},
									"src": "3734:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3810:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3999:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4029:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4021:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4020:18:0"
									},
									"src": "3993:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4047:200:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4259:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4289:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4281:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4280:18:0"
									},
									"src": "4253:46:0"
								}
							],
							"scope": 836,
							"src": "2158:2144:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4306:146:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4464:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4486:367:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4865:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4900:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4892:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4916:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4908:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4933:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4925:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4949:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4941:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4891:66:0"
									},
									"src": "4859:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4966:155:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5133:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5162:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5154:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5153:16:0"
									},
									"src": "5127:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5178:162:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5352:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5383:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5375:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5375:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5374:18:0"
									},
									"src": "5346:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5401:260:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5673:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5710:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5702:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5702:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5728:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5720:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5701:33:0"
									},
									"src": "5667:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5743:177:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5932:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5963:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5955:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5954:18:0"
									},
									"src": "5926:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5981:200:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6193:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6224:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6216:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6216:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6215:18:0"
									},
									"src": "6187:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6242:285:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6539:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6573:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6565:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6592:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6584:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6564:41:0"
									},
									"src": "6533:73:0"
								}
							],
							"scope": 836,
							"src": "4454:2155:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "6613:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 164,
							"linearizedBaseContracts": [
								164
							],
							"name": "Context",
							"nameLocation": "7138:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "7215:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 142,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7233:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7237:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7233:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 141,
												"id": 144,
												"nodeType": "Return",
												"src": "7226:17:0"
											}
										]
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "7162:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7172:2:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "7206:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7205:9:0"
									},
									"scope": 164,
									"src": "7153:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "7326:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 151,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7344:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7348:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "7344:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 150,
												"id": 153,
												"nodeType": "Return",
												"src": "7337:15:0"
											}
										]
									},
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "7268:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7276:2:0"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "7310:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7310:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7309:16:0"
									},
									"scope": 164,
									"src": "7259:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "7440:27:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7458:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 159,
												"id": 161,
												"nodeType": "Return",
												"src": "7451:8:0"
											}
										]
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "7377:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7397:2:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "7431:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7430:9:0"
									},
									"scope": 164,
									"src": "7368:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 836,
							"src": "7120:350:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 165,
								"nodeType": "StructuredDocumentation",
								"src": "7474:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 240,
							"linearizedBaseContracts": [
								240
							],
							"name": "IERC20",
							"nameLocation": "7558:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "7572:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 174,
									"name": "Transfer",
									"nameLocation": "7747:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7772:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "7756:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7794:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "7778:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7778:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7806:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "7798:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:57:0"
									},
									"src": "7741:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "7821:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 183,
									"name": "Approval",
									"nameLocation": "7984:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8009:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "7993:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8032:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "8016:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8049:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "8041:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7992:63:0"
									},
									"src": "7978:78:0"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "8064:67:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "8146:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8157:2:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "8183:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8183:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8182:9:0"
									},
									"scope": 240,
									"src": "8137:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "8200:73:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8288:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8306:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "8298:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:17:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "8338:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8337:9:0"
									},
									"scope": 240,
									"src": "8279:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "8355:219:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8589:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8606:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8598:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8618:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8610:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8610:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8597:27:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8643:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8643:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8642:6:0"
									},
									"scope": 240,
									"src": "8580:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8657:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "8942:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8960:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8952:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8975:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8967:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8967:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8951:32:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "9007:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:9:0"
									},
									"scope": 240,
									"src": "8933:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "9024:681:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "9720:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9736:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "9728:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9728:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9753:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "9745:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9727:32:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "9778:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9778:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9777:6:0"
									},
									"scope": 240,
									"src": "9711:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "9792:305:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "10112:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10133:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "10125:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10125:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10147:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "10139:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10159:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "10151:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10124:41:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "10184:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 236,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10184:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10183:6:0"
									},
									"scope": 240,
									"src": "10103:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 836,
							"src": "7548:2645:0",
							"usedErrors": [],
							"usedEvents": [
								174,
								183
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 242,
										"name": "IERC20",
										"nameLocations": [
											"10315:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 240,
										"src": "10315:6:0"
									},
									"id": 243,
									"nodeType": "InheritanceSpecifier",
									"src": "10315:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 241,
								"nodeType": "StructuredDocumentation",
								"src": "10197:88:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 262,
							"linearizedBaseContracts": [
								262,
								240
							],
							"name": "IERC20Metadata",
							"nameLocation": "10297:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "10329:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "10400:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10404:2:0"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "10430:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 246,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10430:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10429:15:0"
									},
									"scope": 262,
									"src": "10391:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "10453:58:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "10526:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10532:2:0"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "10558:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 252,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10558:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10557:15:0"
									},
									"scope": 262,
									"src": "10517:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "10581:67:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "10663:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10671:2:0"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "10697:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 258,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10697:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10696:7:0"
									},
									"scope": 262,
									"src": "10654:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 836,
							"src": "10287:420:0",
							"usedErrors": [],
							"usedEvents": [
								174,
								183
							]
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 264,
										"name": "Context",
										"nameLocations": [
											"11814:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 164,
										"src": "11814:7:0"
									},
									"id": 265,
									"nodeType": "InheritanceSpecifier",
									"src": "11814:7:0"
								},
								{
									"baseName": {
										"id": 266,
										"name": "IERC20",
										"nameLocations": [
											"11823:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 240,
										"src": "11823:6:0"
									},
									"id": 267,
									"nodeType": "InheritanceSpecifier",
									"src": "11823:6:0"
								},
								{
									"baseName": {
										"id": 268,
										"name": "IERC20Metadata",
										"nameLocations": [
											"11831:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 262,
										"src": "11831:14:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "11831:14:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20Errors",
										"nameLocations": [
											"11847:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "11847:12:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "11847:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 263,
								"nodeType": "StructuredDocumentation",
								"src": "10711:1074:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 767,
							"linearizedBaseContracts": [
								767,
								41,
								262,
								240,
								164
							],
							"name": "ERC20",
							"nameLocation": "11805:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 275,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "11911:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "11867:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 274,
										"keyName": "account",
										"keyNameLocation": "11883:7:0",
										"keyType": {
											"id": 272,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11875:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11867:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 273,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11894:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 281,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12001:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "11929:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 280,
										"keyName": "account",
										"keyNameLocation": "11945:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11937:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11929:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 279,
											"keyName": "spender",
											"keyNameLocation": "11972:7:0",
											"keyType": {
												"id": 277,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11964:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11956:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 278,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11983:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 283,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12037:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "12021:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 282,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12021:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12073:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "12058:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 284,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12058:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12100:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 767,
									"src": "12085:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 286,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12085:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "12354:60:0",
										"statements": [
											{
												"expression": {
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 295,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "12365:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 296,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "12373:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12365:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "12365:13:0"
											},
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "12389:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "12399:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12389:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12389:17:0"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "12116:176:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 304,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12324:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "12310:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 289,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12310:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12345:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "12331:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12331:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12309:44:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12354:0:0"
									},
									"scope": 767,
									"src": "12298:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										249
									],
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "12544:31:0",
										"statements": [
											{
												"expression": {
													"id": 310,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 285,
													"src": "12562:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 309,
												"id": 311,
												"nodeType": "Return",
												"src": "12555:12:0"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "12422:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12493:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12497:2:0"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "12529:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 307,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12529:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12528:15:0"
									},
									"scope": 767,
									"src": "12484:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										255
									],
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "12756:33:0",
										"statements": [
											{
												"expression": {
													"id": 319,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "12774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 318,
												"id": 320,
												"nodeType": "Return",
												"src": "12767:14:0"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "12583:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12703:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12709:2:0"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "12741:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 316,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12741:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12740:15:0"
									},
									"scope": 767,
									"src": "12694:95:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										261
									],
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "13493:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13511:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 327,
												"id": 329,
												"nodeType": "Return",
												"src": "13504:9:0"
											}
										]
									},
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "12797:634:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13446:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13454:2:0"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "13486:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 325,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13486:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13485:7:0"
									},
									"scope": 767,
									"src": "13437:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										189
									],
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "13647:38:0",
										"statements": [
											{
												"expression": {
													"id": 337,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 283,
													"src": "13665:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 336,
												"id": 338,
												"nodeType": "Return",
												"src": "13658:19:0"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "13529:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13595:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13606:2:0"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "13638:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13637:9:0"
									},
									"scope": 767,
									"src": "13586:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										197
									],
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "13822:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 348,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "13840:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 350,
													"indexExpression": {
														"id": 349,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "13850:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13840:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 347,
												"id": 351,
												"nodeType": "Return",
												"src": "13833:25:0"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "13693:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13757:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13775:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "13767:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13766:17:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "13813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13812:9:0"
									},
									"scope": 767,
									"src": "13748:118:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										207
									],
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "14146:107:0",
										"statements": [
											{
												"assignments": [
													364
												],
												"declarations": [
													{
														"constant": false,
														"id": 364,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14165:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 376,
														"src": "14157:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 363,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14157:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 367,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 365,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "14173:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14173:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14157:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 369,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "14206:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "14213:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 371,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "14217:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 368,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "14196:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14196:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "14196:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14241:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 362,
												"id": 375,
												"nodeType": "Return",
												"src": "14234:11:0"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "13874:191:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14080:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14097:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "14089:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14089:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14109:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "14101:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14101:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14088:27:0"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "14140:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 360,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14140:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14139:6:0"
									},
									"scope": 767,
									"src": "14071:182:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										217
									],
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "14405:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 387,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "14423:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 389,
														"indexExpression": {
															"id": 388,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "14435:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14423:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 391,
													"indexExpression": {
														"id": 390,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "14442:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14423:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 386,
												"id": 392,
												"nodeType": "Return",
												"src": "14416:34:0"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "14261:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14325:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14343:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "14335:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14335:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14358:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "14350:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14350:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14334:32:0"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "14396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14395:9:0"
									},
									"scope": 767,
									"src": "14316:142:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										227
									],
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "14856:111:0",
										"statements": [
											{
												"assignments": [
													405
												],
												"declarations": [
													{
														"constant": false,
														"id": 405,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14875:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 417,
														"src": "14867:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 404,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14867:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 408,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 406,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "14883:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14883:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14867:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 410,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "14915:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 411,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "14922:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 412,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "14931:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 409,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															658,
															718
														],
														"referencedDeclaration": 658,
														"src": "14906:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14906:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "14906:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14955:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 403,
												"id": 416,
												"nodeType": "Return",
												"src": "14948:11:0"
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "14466:305:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "14786:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14802:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "14794:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14794:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14819:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "14811:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14811:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14793:32:0"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "14850:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 401,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14850:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14849:6:0"
									},
									"scope": 767,
									"src": "14777:190:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										239
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "15638:156:0",
										"statements": [
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "15657:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "15649:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 430,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15649:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 432,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "15667:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15667:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15649:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 436,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "15706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 437,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "15712:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 438,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15721:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 435,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "15690:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15690:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "15690:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "15748:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "15754:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15758:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "15738:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15738:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "15738:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15782:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 429,
												"id": 448,
												"nodeType": "Return",
												"src": "15775:11:0"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "14975:564:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15554:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15575:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "15567:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15589:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "15581:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15601:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "15593:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15566:41:0"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "15632:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 427,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15632:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15631:6:0"
									},
									"scope": 767,
									"src": "15545:249:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "16248:239:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 460,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "16263:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16279:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16271:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 461,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16271:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16271:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16263:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 474,
												"nodeType": "IfStatement",
												"src": "16259:88:0",
												"trueBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "16283:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 469,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16332:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16324:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 467,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16324:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16324:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 466,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "16305:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16305:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 472,
															"nodeType": "RevertStatement",
															"src": "16298:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 475,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "16361:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16375:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 476,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16367:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16367:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16361:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 489,
												"nodeType": "IfStatement",
												"src": "16357:88:0",
												"trueBody": {
													"id": 488,
													"nodeType": "Block",
													"src": "16379:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16430:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16422:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 482,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16422:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16422:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 481,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "16401:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16401:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 487,
															"nodeType": "RevertStatement",
															"src": "16394:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 491,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "16463:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "16469:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16473:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 490,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "16455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16455:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "16455:24:0"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "15802:371:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16188:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16206:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "16198:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16198:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16220:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "16212:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16232:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "16224:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16197:41:0"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16248:0:0"
									},
									"scope": 767,
									"src": "16179:308:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "16886:1060:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "16901:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16917:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16909:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16909:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16909:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16901:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 544,
													"nodeType": "Block",
													"src": "17078:371:0",
													"statements": [
														{
															"assignments": [
																519
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 519,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17101:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 544,
																	"src": "17093:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 518,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17093:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 523,
															"initialValue": {
																"baseExpression": {
																	"id": 520,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 275,
																	"src": "17115:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 522,
																"indexExpression": {
																	"id": 521,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "17125:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17115:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17093:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 524,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "17149:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 525,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17163:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17149:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 534,
															"nodeType": "IfStatement",
															"src": "17145:117:0",
															"trueBody": {
																"id": 533,
																"nodeType": "Block",
																"src": "17170:92:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 528,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 500,
																					"src": "17221:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 529,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 519,
																					"src": "17227:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 530,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17240:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 527,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "17196:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17196:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 532,
																		"nodeType": "RevertStatement",
																		"src": "17189:57:0"
																	}
																]
															}
														},
														{
															"id": 543,
															"nodeType": "UncheckedBlock",
															"src": "17276:162:0",
															"statements": [
																{
																	"expression": {
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 535,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 275,
																				"src": "17385:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 537,
																			"indexExpression": {
																				"id": 536,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 500,
																				"src": "17395:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17385:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 538,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 519,
																				"src": "17403:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 539,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17417:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17403:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17385:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 542,
																	"nodeType": "ExpressionStatement",
																	"src": "17385:37:0"
																}
															]
														}
													]
												},
												"id": 545,
												"nodeType": "IfStatement",
												"src": "16897:552:0",
												"trueBody": {
													"id": 517,
													"nodeType": "Block",
													"src": "16921:151:0",
													"statements": [
														{
															"expression": {
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 513,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "17039:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 514,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17055:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17039:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 516,
															"nodeType": "ExpressionStatement",
															"src": "17039:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 546,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "17465:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17479:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17471:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 547,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17471:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17471:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17465:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 565,
													"nodeType": "Block",
													"src": "17685:211:0",
													"statements": [
														{
															"id": 564,
															"nodeType": "UncheckedBlock",
															"src": "17700:185:0",
															"statements": [
																{
																	"expression": {
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 558,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 275,
																				"src": "17847:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 560,
																			"indexExpression": {
																				"id": 559,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 502,
																				"src": "17857:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17847:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 561,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 504,
																			"src": "17864:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17847:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 563,
																	"nodeType": "ExpressionStatement",
																	"src": "17847:22:0"
																}
															]
														}
													]
												},
												"id": 566,
												"nodeType": "IfStatement",
												"src": "17461:435:0",
												"trueBody": {
													"id": 557,
													"nodeType": "Block",
													"src": "17483:196:0",
													"statements": [
														{
															"id": 556,
															"nodeType": "UncheckedBlock",
															"src": "17498:170:0",
															"statements": [
																{
																	"expression": {
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 552,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "17631:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 553,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 504,
																			"src": "17647:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17631:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 555,
																	"nodeType": "ExpressionStatement",
																	"src": "17631:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 568,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "17922:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 569,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "17928:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "17932:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 567,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "17913:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17913:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 572,
												"nodeType": "EmitStatement",
												"src": "17908:30:0"
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "16495:310:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "16820:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16836:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "16828:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16850:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "16842:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16842:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16862:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "16854:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16827:41:0"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16886:0:0"
									},
									"scope": 767,
									"src": "16811:1135:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "18355:157:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 582,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "18370:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18389:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18381:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 583,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18381:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18381:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18370:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 596,
												"nodeType": "IfStatement",
												"src": "18366:93:0",
												"trueBody": {
													"id": 595,
													"nodeType": "Block",
													"src": "18393:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18444:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18436:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 589,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18436:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18436:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 588,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "18415:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18415:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 594,
															"nodeType": "RevertStatement",
															"src": "18408:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18485:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18477:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 598,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18477:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18477:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "18489:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 603,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "18498:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 597,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "18469:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18469:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "18469:35:0"
											}
										]
									},
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "17954:339:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18308:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18322:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "18314:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18339:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "18331:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18331:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18313:32:0"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18355:0:0"
									},
									"scope": 767,
									"src": "18299:213:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "18896:155:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 615,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "18911:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18930:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18922:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 616,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18922:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18922:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18911:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 629,
												"nodeType": "IfStatement",
												"src": "18907:91:0",
												"trueBody": {
													"id": 628,
													"nodeType": "Block",
													"src": "18934:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18983:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18975:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 622,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18975:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18975:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 621,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "18956:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18956:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 627,
															"nodeType": "RevertStatement",
															"src": "18949:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 631,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "19016:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19033:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19025:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 632,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19025:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19025:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 636,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "19037:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 630,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "19008:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19008:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "19008:35:0"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "18520:314:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18849:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18863:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "18855:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18855:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18880:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "18872:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18872:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18854:32:0"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18896:0:0"
									},
									"scope": 767,
									"src": "18840:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "19678:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "19698:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 652,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "19705:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 653,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19714:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19721:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 650,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															658,
															718
														],
														"referencedDeclaration": 718,
														"src": "19689:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19689:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "19689:37:0"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "19059:539:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19613:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19630:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "19622:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19622:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "19637:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19662:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "19654:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19621:47:0"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19678:0:0"
									},
									"scope": 767,
									"src": "19604:130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "20683:345:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 670,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "20698:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20715:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20707:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 671,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20707:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20707:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20698:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 684,
												"nodeType": "IfStatement",
												"src": "20694:91:0",
												"trueBody": {
													"id": 683,
													"nodeType": "Block",
													"src": "20719:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 679,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20770:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20762:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 677,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20762:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20762:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 676,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "20741:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20741:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 682,
															"nodeType": "RevertStatement",
															"src": "20734:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 685,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "20799:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20818:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20810:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 686,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20810:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20810:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20799:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 699,
												"nodeType": "IfStatement",
												"src": "20795:92:0",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "20822:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 694,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20872:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20864:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 692,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20864:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20864:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 691,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "20844:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20844:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 697,
															"nodeType": "RevertStatement",
															"src": "20837:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 700,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "20897:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 703,
															"indexExpression": {
																"id": 701,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "20909:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20897:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 704,
														"indexExpression": {
															"id": 702,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "20916:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20897:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 705,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20927:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20897:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "20897:35:0"
											},
											{
												"condition": {
													"id": 708,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 667,
													"src": "20947:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "20943:78:0",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "20958:63:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 710,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "20987:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 711,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "20994:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 712,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "21003:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 709,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "20978:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20978:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "EmitStatement",
															"src": "20973:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "19742:837:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20594:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20611:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "20603:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20626:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "20618:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20643:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "20635:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20655:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "20650:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 666,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20602:63:0"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20683:0:0"
									},
									"scope": 767,
									"src": "20585:443:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "21409:398:0",
										"statements": [
											{
												"assignments": [
													729
												],
												"declarations": [
													{
														"constant": false,
														"id": 729,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21428:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 765,
														"src": "21420:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 728,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21420:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 734,
												"initialValue": {
													"arguments": [
														{
															"id": 731,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "21457:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "21464:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 730,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "21447:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21447:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21420:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 735,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "21487:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21512:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 737,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21512:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 736,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21507:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21507:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21521:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21507:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21487:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 764,
												"nodeType": "IfStatement",
												"src": "21483:317:0",
												"trueBody": {
													"id": 763,
													"nodeType": "Block",
													"src": "21526:274:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 742,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21545:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 743,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "21564:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21545:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 752,
															"nodeType": "IfStatement",
															"src": "21541:132:0",
															"trueBody": {
																"id": 751,
																"nodeType": "Block",
																"src": "21571:102:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 746,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 723,
																					"src": "21624:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 747,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21633:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 748,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 725,
																					"src": "21651:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 745,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "21597:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21597:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 750,
																		"nodeType": "RevertStatement",
																		"src": "21590:67:0"
																	}
																]
															}
														},
														{
															"id": 762,
															"nodeType": "UncheckedBlock",
															"src": "21687:102:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 754,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 721,
																				"src": "21725:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 755,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 723,
																				"src": "21732:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 758,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 756,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21741:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 757,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 725,
																					"src": "21760:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21741:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21767:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 753,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				658,
																				718
																			],
																			"referencedDeclaration": 718,
																			"src": "21716:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21716:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 761,
																	"nodeType": "ExpressionStatement",
																	"src": "21716:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "21036:278:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21329:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21353:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "21345:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21368:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "21360:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21360:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21385:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "21377:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21344:47:0"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21409:0:0"
									},
									"scope": 767,
									"src": "21320:487:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 836,
							"src": "11787:10023:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								174,
								183
							]
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 769,
										"name": "Context",
										"nameLocations": [
											"22063:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 164,
										"src": "22063:7:0"
									},
									"id": 770,
									"nodeType": "InheritanceSpecifier",
									"src": "22063:7:0"
								},
								{
									"baseName": {
										"id": 771,
										"name": "ERC20",
										"nameLocations": [
											"22072:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 767,
										"src": "22072:5:0"
									},
									"id": 772,
									"nodeType": "InheritanceSpecifier",
									"src": "22072:5:0"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 768,
								"nodeType": "StructuredDocumentation",
								"src": "21814:212:0",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 807,
							"linearizedBaseContracts": [
								807,
								767,
								41,
								262,
								240,
								164
							],
							"name": "ERC20Burnable",
							"nameLocation": "22046:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "22248:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 779,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "22265:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22265:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "22279:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 778,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "22259:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22259:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "22259:26:0"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "22085:113:0",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "22213:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22226:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "22218:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22218:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22217:15:0"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22248:0:0"
									},
									"scope": 807,
									"src": "22204:89:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "22687:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 794,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "22714:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 795,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "22723:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22723:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 797,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "22737:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 793,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "22698:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22698:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "22698:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 801,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "22760:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 802,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "22769:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 800,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "22754:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22754:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "22754:21:0"
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "22301:315:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "22631:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22648:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "22640:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22665:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "22657:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22639:32:0"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22687:0:0"
									},
									"scope": 807,
									"src": "22622:161:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 836,
							"src": "22028:758:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								174,
								183
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 808,
										"name": "ERC20",
										"nameLocations": [
											"22819:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 767,
										"src": "22819:5:0"
									},
									"id": 809,
									"nodeType": "InheritanceSpecifier",
									"src": "22819:5:0"
								},
								{
									"baseName": {
										"id": 810,
										"name": "ERC20Burnable",
										"nameLocations": [
											"22826:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 807,
										"src": "22826:13:0"
									},
									"id": 811,
									"nodeType": "InheritanceSpecifier",
									"src": "22826:13:0"
								}
							],
							"canonicalName": "SmartEnergyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 835,
							"linearizedBaseContracts": [
								835,
								807,
								767,
								41,
								262,
								240,
								164
							],
							"name": "SmartEnergyToken",
							"nameLocation": "22799:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "22896:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 819,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "22913:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "22917:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "22913:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_500000000000_by_1",
																	"typeString": "int_const 500000000000"
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "353030",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22924:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_500_by_1",
																		"typeString": "int_const 500"
																	},
																	"value": "500"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000_by_1",
																		"typeString": "int_const 1000000000"
																	},
																	"id": 824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22928:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "39",
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22932:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_9_by_1",
																			"typeString": "int_const 9"
																		},
																		"value": "9"
																	},
																	"src": "22928:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000_by_1",
																		"typeString": "int_const 1000000000"
																	}
																},
																"src": "22924:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_500000000000_by_1",
																	"typeString": "int_const 500000000000"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22934:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 827,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "22938:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22938:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "22934:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22924:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "22907:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22907:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "22907:42:0"
											}
										]
									},
									"id": 834,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "536d61727420456e6572677920546f6b656e",
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22867:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_333bb6678e59ac6f0e16bdc5ab04eb666338145de5bd55763602ac9460753754",
														"typeString": "literal_string \"Smart Energy Token\""
													},
													"value": "Smart Energy Token"
												},
												{
													"hexValue": "534554",
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22889:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4ea0401b954724c04508030bc13647710a2eb0e3d4bfd20250c0b630adcd3d60",
														"typeString": "literal_string \"SET\""
													},
													"value": "SET"
												}
											],
											"id": 816,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 813,
												"name": "ERC20",
												"nameLocations": [
													"22861:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 767,
												"src": "22861:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22861:34:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22858:2:0"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22896:0:0"
									},
									"scope": 835,
									"src": "22847:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 836,
							"src": "22790:170:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								174,
								183
							]
						}
					],
					"src": "33:22927:0"
				},
				"id": 0
			}
		}
	}
}